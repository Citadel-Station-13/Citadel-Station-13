diff a/code/controllers/configuration.dm b/code/controllers/configuration.dm	(rejected hunks)
@@ -5,17 +5,27 @@
 #define SECURITY_HAS_MAINT_ACCESS 2
 #define EVERYONE_HAS_MAINT_ACCESS 4
 
-//Not accessible from usual debug controller verb
-/datum/protected_configuration
-	var/autoadmin = 0
-	var/autoadmin_rank = "Game Admin"
+/datum/configuration/vv_get_var(var_name)
+	var/static/list/banned_views = list("autoadmin", "autoadmin_rank")
+	if(var_name in banned_views)
+		return debug_variable(var_name, "SECRET", 0, src)
+	return ..()
+
+/datum/configuration/vv_edit_var(var_name, var_value)
+	var/static/list/banned_edits = list("cross_address", "cross_allowed", "autoadmin", "autoadmin_rank")
+	if(var_name in banned_edits)
+		return FALSE
+	return ..()
 
 /datum/configuration
 	var/name = "Configuration"			// datum name
 
+	var/autoadmin = 0
+	var/autoadmin_rank = "Game Admin"
+
 	var/server_name = null				// server name (the name of the game window)
+	var/server_sql_name = null			// short form server name used for the DB
 	var/station_name = null				// station name (the name of the station in-game)
-	var/server_suffix = 0				// generate numeric suffix based on server port
 	var/lobby_countdown = 120			// In between round countdown.
 	var/round_end_countdown = 25		// Post round murder death kill countdown
 	var/hub = 0
@@ -36,6 +46,7 @@
 	var/log_hrefs = 0					// log all links clicked in-game. Could be used for debugging and tracking down exploits
 	var/log_twitter = 0					// log certain expliotable parrots and other such fun things in a JSON file of twitter valid phrases.
 	var/log_world_topic = 0				// log all world.Topic() calls
+	var/log_runtimes = FALSE			// log runtimes into a file
 	var/sql_enabled = 0					// for sql switching
 	var/allow_admin_ooccolor = 0		// Allows admins with relevant permissions to have their own ooc colour
 	var/allow_vote_restart = 0 			// allow votes to restart
@@ -49,6 +60,7 @@
 	var/popup_admin_pm = 0				//adminPMs to non-admins show in a pop-up 'reply' window when set to 1.
 	var/fps = 20
 	var/allow_holidays = 0				//toggles whether holiday-specific content should be used
+	var/tick_limit_mc_init = TICK_LIMIT_MC_INIT_DEFAULT	//SSinitialization throttling
 
 	var/hostedby = null
 	var/respawn = 1
@@ -68,6 +80,7 @@
 	var/forumurl = "http://tgstation13.org/phpBB/index.php" //default forums
 	var/rulesurl = "http://www.tgstation13.org/wiki/Rules" // default rules
 	var/githuburl = "https://www.github.com/tgstation/-tg-station" //default github
+	var/githubrepoid
 
 	var/forbid_singulo_possession = 0
 	var/useircbot = 0
@@ -76,6 +89,7 @@
 
 	var/allow_panic_bunker_bounce = 0 //Send new players somewhere else
 	var/panic_server_name = "somewhere else"
+	var/panic_address = "byond://" //Reconnect a player this linked server if this server isn't accepting new players
 
 	//IP Intel vars
 	var/ipintel_email
@@ -205,10 +219,11 @@
 	var/announce_admin_logout = 0
 	var/announce_admin_login = 0
 
-	var/list/datum/votablemap/maplist = list()
-	var/datum/votablemap/defaultmap = null
+	var/list/datum/map_config/maplist = list()
+	var/datum/map_config/defaultmap = null
 	var/maprotation = 1
 	var/maprotatechancedelta = 0.75
+	var/allow_map_voting = TRUE
 
 	// Enables random events mid-round when set to 1
 	var/allow_random_events = 0
@@ -226,11 +241,26 @@
 	var/client_error_message = "Your version of byond is too old, may have issues, and is blocked from accessing this server."
 
 	var/cross_name = "Other server"
+	var/cross_address = "byond://"
+	var/cross_allowed = FALSE
 	var/showircname = 0
 
+	var/list/gamemode_cache = null
+
+	var/minutetopiclimit
+	var/secondtopiclimit
+
+	var/error_cooldown = 600 // The "cooldown" time for each occurrence of a unique error
+	var/error_limit = 50 // How many occurrences before the next will silence them
+	var/error_silence_time = 6000 // How long a unique error will be silenced for
+	var/error_msg_delay = 50 // How long to wait between messaging admins about occurrences of a unique error
+
+	var/arrivals_shuttle_dock_window = 55	//Time from when a player late joins on the arrivals shuttle to when the shuttle docks on the station
+	var/arrivals_shuttle_require_safe_latejoin = FALSE	//Require the arrivals shuttle to be operational in order for latejoiners to join
+
 /datum/configuration/New()
-	var/list/L = subtypesof(/datum/game_mode)
-	for(var/T in L)
+	gamemode_cache = typecacheof(/datum/game_mode,TRUE)
+	for(var/T in gamemode_cache)
 		// I wish I didn't have to instance the game modes in order to look up
 		// their information, but it is the only way (at least that I know of).
 		var/datum/game_mode/M = new T()
@@ -338,10 +368,10 @@
 					config.respawn = 0
 				if("servername")
 					config.server_name = value
+				if("serversqlname")
+					config.server_sql_name = value
 				if("stationname")
 					config.station_name = value
-				if("serversuffix")
-					config.server_suffix = 1
 				if("hostedby")
 					config.hostedby = value
 				if("server")
@@ -356,6 +386,8 @@
 					config.rulesurl = value
 				if("githuburl")
 					config.githuburl = value
+				if("githubrepoid")
+					config.githubrepoid = value
 				if("guest_jobban")
 					config.guest_jobban = 1
 				if("guest_ban")
@@ -382,6 +414,8 @@
 					var/ticklag = text2num(value)
 					if(ticklag > 0)
 						fps = 10 / ticklag
+				if("tick_limit_mc_init")
+					tick_limit_mc_init = text2num(value)
 				if("fps")
 					fps = text2num(value)
 				if("automute_on")
@@ -391,15 +425,15 @@
 					if(value != "default_pwd" && length(value) > 6) //It's the default value or less than 6 characters long, warn badmins
 						global.comms_allowed = 1
 				if("cross_server_address")
-					global.cross_address = value
+					cross_address = value
 					if(value != "byond:\\address:port")
-						global.cross_allowed = 1
+						cross_allowed = 1
 				if("cross_comms_name")
 					cross_name = value
 				if("panic_server_name")
 					panic_server_name = value
 				if("panic_server_address")
-					global.panic_address = value
+					panic_address = value
 					if(value != "byond:\\address:port")
 						allow_panic_bunker_bounce = 1
 				if("medal_hub_address")
@@ -444,10 +478,11 @@
 				if("aggressive_changelog")
 					config.aggressive_changelog = 1
 				if("log_runtimes")
+					log_runtimes = TRUE
 					var/newlog = file("data/logs/runtimes/runtime-[time2text(world.realtime, "YYYY-MM-DD")].log")
-					if (world.log != newlog)
+					if(runtime_diary != newlog)
 						world.log << "Now logging runtimes to data/logs/runtimes/runtime-[time2text(world.realtime, "YYYY-MM-DD")].log"
-						world.log = newlog
+						runtime_diary = newlog
 				if("autoconvert_notes")
 					config.autoconvert_notes = 1
 				if("allow_webclient")
@@ -460,12 +495,14 @@
 					config.announce_admin_login = 1
 				if("maprotation")
 					config.maprotation = 1
+				if("allow_map_voting")
+					config.allow_map_voting = text2num(value)
 				if("maprotationchancedelta")
 					config.maprotatechancedelta = text2num(value)
 				if("autoadmin")
-					protected_config.autoadmin = 1
+					config.autoadmin = 1
 					if(value)
-						protected_config.autoadmin_rank = ckeyEx(value)
+						config.autoadmin_rank = ckeyEx(value)
 				if("generate_minimaps")
 					config.generate_minimaps = 1
 				if("client_warn_version")
@@ -476,7 +513,18 @@
 					config.client_error_version = text2num(value)
 				if("client_error_message")
 					config.client_error_message = value
-
+				if("minute_topic_limit")
+					config.minutetopiclimit = text2num(value)
+				if("second_topic_limit")
+					config.secondtopiclimit = text2num(value)
+				if("error_cooldown")
+					error_cooldown = text2num(value)
+				if("error_limit")
+					error_limit = text2num(value)
+				if("error_silence_time")
+					error_silence_time = text2num(value)
+				if("error_msg_delay")
+					error_msg_delay = text2num(value)
 				else
 					diary << "Unknown setting in configuration: '[name]'"
 
@@ -704,6 +752,10 @@
 					MAX_EX_LIGHT_RANGE = BombCap
 					MAX_EX_FLASH_RANGE = BombCap
 					MAX_EX_FLAME_RANGE = BombCap
+				if("arrivals_shuttle_dock_window")
+					config.arrivals_shuttle_dock_window = max(PARALLAX_LOOP_TIME, text2num(value))
+				if("arrivals_shuttle_require_safe_latejoin")
+					config.arrivals_shuttle_require_safe_latejoin = text2num(value)
 				else
 					diary << "Unknown setting in configuration: '[name]'"
 
@@ -715,7 +767,7 @@
 /datum/configuration/proc/loadmaplist(filename)
 	var/list/Lines = file2list(filename)
 
-	var/datum/votablemap/currentmap = null
+	var/datum/map_config/currentmap = null
 	for(var/t in Lines)
 		if(!t)
 			continue
@@ -744,21 +796,19 @@
 
 		switch (command)
 			if ("map")
-				currentmap = new (data)
-			if ("friendlyname")
-				currentmap.friendlyname = data
+				currentmap = new ("_maps/[data].json")
+				if(currentmap.defaulted)
+					log_world("Failed to load map config for [data]!")
 			if ("minplayers","minplayer")
-				currentmap.minusers = text2num(data)
+				currentmap.config_min_users = text2num(data)
 			if ("maxplayers","maxplayer")
-				currentmap.maxusers = text2num(data)
-			if ("friendlyname")
-				currentmap.friendlyname = data
+				currentmap.config_max_users = text2num(data)
 			if ("weight","voteweight")
 				currentmap.voteweight = text2num(data)
 			if ("default","defaultmap")
 				config.defaultmap = currentmap
 			if ("endmap")
-				config.maplist[currentmap.name] = currentmap
+				config.maplist[currentmap.map_name] = currentmap
 				currentmap = null
 			else
 				diary << "Unknown command in map vote config: '[command]'"
@@ -810,7 +860,7 @@
 /datum/configuration/proc/pick_mode(mode_name)
 	// I wish I didn't have to instance the game modes in order to look up
 	// their information, but it is the only way (at least that I know of).
-	for(var/T in subtypesof(/datum/game_mode))
+	for(var/T in gamemode_cache)
 		var/datum/game_mode/M = new T()
 		if(M.config_tag && M.config_tag == mode_name)
 			return M
@@ -819,9 +869,9 @@
 
 /datum/configuration/proc/get_runnable_modes()
 	var/list/datum/game_mode/runnable_modes = new
-	for(var/T in subtypesof(/datum/game_mode))
+	for(var/T in gamemode_cache)
 		var/datum/game_mode/M = new T()
-		//world << "DEBUG: [T], tag=[M.config_tag], prob=[probabilities[M.config_tag]]"
+		//to_chat(world, "DEBUG: [T], tag=[M.config_tag], prob=[probabilities[M.config_tag]]")
 		if(!(M.config_tag in modes))
 			qdel(M)
 			continue
@@ -834,12 +884,12 @@
 			M.maximum_players = max_pop[M.config_tag]
 		if(M.can_start())
 			runnable_modes[M] = probabilities[M.config_tag]
-			//world << "DEBUG: runnable_mode\[[runnable_modes.len]\] = [M.config_tag]"
+			//to_chat(world, "DEBUG: runnable_mode\[[runnable_modes.len]\] = [M.config_tag]")
 	return runnable_modes
 
 /datum/configuration/proc/get_runnable_midround_modes(crew)
 	var/list/datum/game_mode/runnable_modes = new
-	for(var/T in (subtypesof(/datum/game_mode) - ticker.mode.type))
+	for(var/T in (gamemode_cache - ticker.mode.type))
 		var/datum/game_mode/M = new T()
 		if(!(M.config_tag in modes))
 			qdel(M)
@@ -859,6 +909,6 @@
 
 /datum/configuration/proc/stat_entry()
 	if(!statclick)
-		statclick = new/obj/effect/statclick/debug("Edit", src)
+		statclick = new/obj/effect/statclick/debug(null, "Edit", src)
 
-	stat("[name]:", statclick)
+	stat("[name]:", statclick)
\ No newline at end of file
