diff a/code/datums/diseases/advance/advance.dm b/code/datums/diseases/advance/advance.dm	(rejected hunks)
@@ -7,7 +7,7 @@
 
 */
 
-#define SYMPTOM_LIMIT 8
+#define SYMPTOM_LIMIT 6
 
 
 
@@ -18,7 +18,6 @@
  */
 
 /datum/disease/advance
-
 	name = "Unknown" // We will always let our Virologist name our disease.
 	desc = "An engineered disease which can contain a multitude of symptoms."
 	form = "Advance Disease" // Will let med-scanners know that this disease was engineered.
@@ -58,7 +57,10 @@
 			symptoms = GenerateSymptoms(0, 2)
 		else
 			for(var/datum/symptom/S in D.symptoms)
-				symptoms += new S.type
+				var/datum/symptom/new_symp = new S.type
+				new_symp.name = S.name
+				new_symp.neutered = S.neutered
+				symptoms += new_symp
 
 	Refresh()
 	..(process, D)
@@ -116,10 +118,10 @@
 
 // Mix the symptoms of two diseases (the src and the argument)
 /datum/disease/advance/proc/Mix(datum/disease/advance/D)
-	if(!(src.IsSame(D)))
+	if(!(IsSame(D)))
 		var/list/possible_symptoms = shuffle(D.symptoms)
 		for(var/datum/symptom/S in possible_symptoms)
-			AddSymptom(new S.type)
+			AddSymptom(S.Copy())
 
 /datum/disease/advance/proc/HasSymptom(datum/symptom/S)
 	for(var/datum/symptom/symp in symptoms)
@@ -155,8 +157,7 @@
 
 	return generated
 
-/datum/disease/advance/proc/Refresh(new_name = 0)
-	//to_chat(world, "[src.name] \ref[src] - REFRESH!")
+/datum/disease/advance/proc/Refresh(new_name = FALSE)
 	GenerateProperties()
 	AssignProperties()
 	id = null
@@ -192,10 +193,8 @@
 
 	if(properties && properties.len)
 		switch(properties["stealth"])
-			if(2,3)
+			if(2 to INFINITY)
 				visibility_flags = HIDDEN_SCANNER
-			if(4 to INFINITY)
-				visibility_flags = HIDDEN_SCANNER|HIDDEN_PANDEMIC
 
 		// The more symptoms we have, the less transmittable it is but some symptoms can make up for it.
 		SetSpread(Clamp(2 ** (properties["transmittable"] - symptoms.len), BLOOD, AIRBORNE))
@@ -263,7 +262,7 @@
 	var/s = safepick(GenerateSymptoms(min_level, max_level, 1))
 	if(s)
 		AddSymptom(s)
-		Refresh(1)
+		Refresh(TRUE)
 	return
 
 // Randomly remove a symptom.
@@ -272,7 +271,16 @@
 		var/s = safepick(symptoms)
 		if(s)
 			RemoveSymptom(s)
-			Refresh(1)
+			Refresh(TRUE)
+	return
+
+// Randomly neuter a symptom.
+/datum/disease/advance/proc/Neuter()
+	if(symptoms.len)
+		var/s = safepick(symptoms)
+		if(s)
+			NeuterSymptom(s)
+			Refresh(TRUE)
 	return
 
 // Name the disease.
@@ -286,6 +294,8 @@
 		var/list/L = list()
 		for(var/datum/symptom/S in symptoms)
 			L += S.id
+			if(S.neutered)
+				L += "N"
 		L = sortList(L) // Sort the list so it doesn't matter which order the symptoms are in.
 		var/result = jointext(L, ":")
 		id = result
@@ -311,6 +321,12 @@
 	symptoms -= S
 	return
 
+// Neuter a symptom, so it will only affect stats
+/datum/disease/advance/proc/NeuterSymptom(datum/symptom/S)
+	if(!S.neutered)
+		S.neutered = TRUE
+		S.name += " (neutered)"
+
 /*
 
 	Static Procs
