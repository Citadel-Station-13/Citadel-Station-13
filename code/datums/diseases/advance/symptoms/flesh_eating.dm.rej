diff a/code/datums/diseases/advance/symptoms/flesh_eating.dm b/code/datums/diseases/advance/symptoms/flesh_eating.dm	(rejected hunks)
@@ -24,22 +24,40 @@ Bonus
 	transmittable = -4
 	level = 6
 	severity = 5
+	base_message_chance = 50
+	symptom_delay_min = 15
+	symptom_delay_max = 60
+	var/bleed = FALSE
+	var/pain = FALSE
 
-/datum/symptom/flesh_eating/Activate(datum/disease/advance/A)
+/datum/symptom/flesh_eating/Start(datum/disease/advance/A)
 	..()
-	if(prob(SYMPTOM_ACTIVATION_PROB))
-		var/mob/living/M = A.affected_mob
-		switch(A.stage)
-			if(2,3)
+	if(A.properties["resistance"] >= 7) //extra bleeding
+		bleed = TRUE
+	if(A.properties["transmittable"] >= 8) //extra stamina damage
+		pain = TRUE
+
+/datum/symptom/flesh_eating/Activate(datum/disease/advance/A)
+	if(!..())
+		return
+	var/mob/living/M = A.affected_mob
+	switch(A.stage)
+		if(2,3)
+			if(prob(base_message_chance))
 				to_chat(M, "<span class='warning'>[pick("You feel a sudden pain across your body.", "Drops of blood appear suddenly on your skin.")]</span>")
-			if(4,5)
-				to_chat(M, "<span class='userdanger'>[pick("You cringe as a violent pain takes over your body.", "It feels like your body is eating itself inside out.", "IT HURTS.")]</span>")
-				Flesheat(M, A)
-	return
+		if(4,5)
+			to_chat(M, "<span class='userdanger'>[pick("You cringe as a violent pain takes over your body.", "It feels like your body is eating itself inside out.", "IT HURTS.")]</span>")
+			Flesheat(M, A)
 
 /datum/symptom/flesh_eating/proc/Flesheat(mob/living/M, datum/disease/advance/A)
-	var/get_damage = ((sqrt(16-A.totalStealth()))*5)
+	var/get_damage = rand(15,25) * power
 	M.adjustBruteLoss(get_damage)
+	if(pain)
+		M.adjustStaminaLoss(get_damage)
+	if(bleed)
+		if(ishuman(M))
+			var/mob/living/carbon/human/H = M
+			H.bleed_rate += 5 * power
 	return 1
 
 /*
@@ -68,21 +86,37 @@ Bonus
 	transmittable = -2
 	level = 7
 	severity = 6
+	base_message_chance = 50
+	symptom_delay_min = 3
+	symptom_delay_max = 6
+	var/chems = FALSE
+	var/zombie = FALSE
 
-/datum/symptom/flesh_death/Activate(datum/disease/advance/A)
+/datum/symptom/flesh_death/Start(datum/disease/advance/A)
 	..()
-	if(prob(SYMPTOM_ACTIVATION_PROB))
-		var/mob/living/M = A.affected_mob
-		switch(A.stage)
-			if(2,3)
+	if(A.properties["stealth"] >= 5)
+		suppress_warning = TRUE
+	if(A.properties["stage_rate"] >= 7) //bleeding and hunger
+		chems = TRUE
+
+/datum/symptom/flesh_death/Activate(datum/disease/advance/A)
+	if(!..())
+		return
+	var/mob/living/M = A.affected_mob
+	switch(A.stage)
+		if(2,3)
+			if(prob(base_message_chance) && !suppress_warning)
 				to_chat(M, "<span class='warning'>[pick("You feel your body break apart.", "Your skin rubs off like dust.")]</span>")
-			if(4,5)
-				to_chat(M, "<span class='userdanger'>[pick("You feel your muscles weakening.", "Your skin begins detaching itself.", "You feel sandy.")]</span>")
-				Flesh_death(M, A)
-	return
+		if(4,5)
+			if(prob(base_message_chance / 2)) //reduce spam
+				to_chat(M, "<span class='userdanger'>[pick("You feel your muscles weakening.", "Some of your skin detaches itself.", "You feel sandy.")]</span>")
+			Flesh_death(M, A)
 
 /datum/symptom/flesh_death/proc/Flesh_death(mob/living/M, datum/disease/advance/A)
-	var/get_damage = ((sqrt(16-A.totalStealth()))*6)
+	var/get_damage = rand(6,10)
 	M.adjustBruteLoss(get_damage)
-	M.reagents.add_reagent_list(list("heparin" = 5, "lipolicide" = 5))
+	if(chems)
+		M.reagents.add_reagent_list(list("heparin" = 2, "lipolicide" = 2))
+	if(zombie)
+		M.reagents.add_reagent("romerol", 1)
 	return 1
\ No newline at end of file
