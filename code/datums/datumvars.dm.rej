diff a/code/datums/datumvars.dm b/code/datums/datumvars.dm	(rejected hunks)
@@ -1,6 +1,5 @@
 /datum
 	var/var_edited = FALSE //Warrenty void if seal is broken
-	var/datum/reagents/reagents = null
 	var/fingerprintslast = null
 
 /datum/proc/vv_edit_var(var_name, var_value) //called whenever a var is edited
@@ -38,7 +37,7 @@
 	var/static/cookieoffset = rand(1, 9999) //to force cookies to reset after the round.
 
 	if(!usr.client || !usr.client.holder)
-		usr << "<span class='danger'>You need to be an administrator to access this.</span>"
+		to_chat(usr, "<span class='danger'>You need to be an administrator to access this.</span>")
 		return
 
 	if(!D)
@@ -51,6 +50,7 @@
 	var/title = ""
 	var/refid = "\ref[D]"
 	var/icon/sprite
+	var/hash
 
 	var/type = /list
 	if (!islist)
@@ -62,13 +62,15 @@
 		var/atom/AT = D
 		if(AT.icon && AT.icon_state)
 			sprite = new /icon(AT.icon, AT.icon_state)
-			usr << browse_rsc(sprite, "view_vars_sprite.png")
+			hash = md5(AT.icon)
+			hash = md5(hash + AT.icon_state)
+			usr << browse_rsc(sprite, "vv[hash].png")
 
 	title = "[D] (\ref[D]) = [type]"
 
 	var/sprite_text
 	if(sprite)
-		sprite_text = "<img src='view_vars_sprite.png'></td><td>"
+		sprite_text = "<img src='vv[hash].png'></td><td>"
 	var/list/atomsnowflake = list()
 
 	if(istype(D,/atom))
@@ -480,7 +482,7 @@
 
 		var/mob/M = locate(href_list["mob_player_panel"])
 		if(!istype(M))
-			usr << "This can only be used on instances of type /mob"
+			to_chat(usr, "This can only be used on instances of type /mob")
 			return
 
 		src.holder.show_player_panel(M)
@@ -492,7 +494,7 @@
 
 		var/mob/M = locate(href_list["godmode"])
 		if(!istype(M))
-			usr << "This can only be used on instances of type /mob"
+			to_chat(usr, "This can only be used on instances of type /mob")
 			return
 
 		src.cmd_admin_godmode(M)
@@ -504,7 +506,7 @@
 
 		var/datum/D = locate(href_list["mark_object"])
 		if(!istype(D))
-			usr << "This can only be done to instances of type /datum"
+			to_chat(usr, "This can only be done to instances of type /datum")
 			return
 
 		src.holder.marked_datum = D
@@ -525,7 +527,7 @@
 
 		var/mob/M = locate(href_list["regenerateicons"])
 		if(!ismob(M))
-			usr << "This can only be done to instances of type /mob"
+			to_chat(usr, "This can only be done to instances of type /mob")
 			return
 		M.regenerate_icons()
 
@@ -542,7 +544,7 @@
 
 			var/mob/M = locate(href_list["rename"])
 			if(!istype(M))
-				usr << "This can only be used on instances of type /mob"
+				to_chat(usr, "This can only be used on instances of type /mob")
 				return
 
 			var/new_name = stripped_input(usr,"What would you like to name this mob?","Input a name",M.real_name,MAX_NAME_LEN)
@@ -559,7 +561,7 @@
 
 			var/D = locate(href_list["datumedit"])
 			if(!istype(D,/datum))
-				usr << "This can only be used on datums"
+				to_chat(usr, "This can only be used on datums")
 				return
 
 			modify_variables(D, href_list["varnameedit"], 1)
@@ -570,7 +572,7 @@
 
 			var/D = locate(href_list["datumchange"])
 			if(!istype(D,/datum))
-				usr << "This can only be used on datums"
+				to_chat(usr, "This can only be used on datums")
 				return
 
 			modify_variables(D, href_list["varnamechange"], 0)
@@ -581,7 +583,7 @@
 
 			var/datum/D = locate(href_list["datummass"])
 			if(!istype(D))
-				usr << "This can only be used on instances of type /datum"
+				to_chat(usr, "This can only be used on instances of type /datum")
 				return
 
 			cmd_mass_modify_object_variables(D, href_list["varnamemass"])
@@ -593,7 +595,7 @@
 
 			var/list/L = locate(href_list["listedit"])
 			if (!istype(L))
-				usr << "This can only be used on instances of type /list"
+				to_chat(usr, "This can only be used on instances of type /list")
 				return
 
 			mod_list(L, null, "list", "contents", index, autodetect_class = TRUE)
@@ -605,7 +607,7 @@
 
 			var/list/L = locate(href_list["listchange"])
 			if (!istype(L))
-				usr << "This can only be used on instances of type /list"
+				to_chat(usr, "This can only be used on instances of type /list")
 				return
 
 			mod_list(L, null, "list", "contents", index, autodetect_class = FALSE)
@@ -617,7 +619,7 @@
 
 			var/list/L = locate(href_list["listremove"])
 			if (!istype(L))
-				usr << "This can only be used on instances of type /list"
+				to_chat(usr, "This can only be used on instances of type /list")
 				return
 
 			var/variable = L[index]
@@ -625,14 +627,14 @@
 			if (prompt != "Yes")
 				return
 			L.Cut(index, index+1)
-			world.log << "### ListVarEdit by [src]: /list's contents: REMOVED=[html_encode("[variable]")]"
+			log_world("### ListVarEdit by [src]: /list's contents: REMOVED=[html_encode("[variable]")]")
 			log_admin("[key_name(src)] modified list's contents: REMOVED=[variable]")
 			message_admins("[key_name_admin(src)] modified list's contents: REMOVED=[variable]")
 
 		else if(href_list["listadd"])
 			var/list/L = locate(href_list["listadd"])
 			if (!istype(L))
-				usr << "This can only be used on instances of type /list"
+				to_chat(usr, "This can only be used on instances of type /list")
 				return
 
 			mod_list_add(L, null, "list", "contents")
@@ -640,47 +642,47 @@
 		else if(href_list["listdupes"])
 			var/list/L = locate(href_list["listdupes"])
 			if (!istype(L))
-				usr << "This can only be used on instances of type /list"
+				to_chat(usr, "This can only be used on instances of type /list")
 				return
 
 			uniqueList_inplace(L)
-			world.log << "### ListVarEdit by [src]: /list contents: CLEAR DUPES"
+			log_world("### ListVarEdit by [src]: /list contents: CLEAR DUPES")
 			log_admin("[key_name(src)] modified list's contents: CLEAR DUPES")
 			message_admins("[key_name_admin(src)] modified list's contents: CLEAR DUPES")
 
 		else if(href_list["listnulls"])
 			var/list/L = locate(href_list["listnulls"])
 			if (!istype(L))
-				usr << "This can only be used on instances of type /list"
+				to_chat(usr, "This can only be used on instances of type /list")
 				return
 
 			listclearnulls(L)
-			world.log << "### ListVarEdit by [src]: /list contents: CLEAR NULLS"
+			log_world("### ListVarEdit by [src]: /list contents: CLEAR NULLS")
 			log_admin("[key_name(src)] modified list's contents: CLEAR NULLS")
 			message_admins("[key_name_admin(src)] modified list's contents: CLEAR NULLS")
 
 		else if(href_list["listlen"])
 			var/list/L = locate(href_list["listlen"])
 			if (!istype(L))
-				usr << "This can only be used on instances of type /list"
+				to_chat(usr, "This can only be used on instances of type /list")
 				return
 			var/value = vv_get_value(VV_NUM)
 			if (value["class"] != VV_NUM)
 				return
 
 			L.len = value["value"]
-			world.log << "### ListVarEdit by [src]: /list len: [L.len]"
+			log_world("### ListVarEdit by [src]: /list len: [L.len]")
 			log_admin("[key_name(src)] modified list's len: [L.len]")
 			message_admins("[key_name_admin(src)] modified list's len: [L.len]")
 
 		else if(href_list["listshuffle"])
 			var/list/L = locate(href_list["listshuffle"])
 			if (!istype(L))
-				usr << "This can only be used on instances of type /list"
+				to_chat(usr, "This can only be used on instances of type /list")
 				return
 
 			shuffle_inplace(L)
-			world.log << "### ListVarEdit by [src]: /list contents: SHUFFLE"
+			log_world("### ListVarEdit by [src]: /list contents: SHUFFLE")
 			log_admin("[key_name(src)] modified list's contents: SHUFFLE")
 			message_admins("[key_name_admin(src)] modified list's contents: SHUFFLE")
 
@@ -690,7 +692,7 @@
 
 			var/mob/M = locate(href_list["give_spell"])
 			if(!istype(M))
-				usr << "This can only be used on instances of type /mob"
+				to_chat(usr, "This can only be used on instances of type /mob")
 				return
 
 			src.give_spell(M)
@@ -702,7 +704,7 @@
 
 			var/mob/M = locate(href_list["remove_spell"])
 			if(!istype(M))
-				usr << "This can only be used on instances of type /mob"
+				to_chat(usr, "This can only be used on instances of type /mob")
 				return
 
 			remove_spell(M)
@@ -714,7 +716,7 @@
 
 			var/mob/M = locate(href_list["give_disease"])
 			if(!istype(M))
-				usr << "This can only be used on instances of type /mob"
+				to_chat(usr, "This can only be used on instances of type /mob")
 				return
 
 			src.give_disease(M)
@@ -726,7 +728,7 @@
 
 			var/mob/M = locate(href_list["ninja"])
 			if(!istype(M))
-				usr << "This can only be used on instances of type /mob"
+				to_chat(usr, "This can only be used on instances of type /mob")
 				return
 
 			src.cmd_admin_ninjafy(M)
@@ -738,7 +740,7 @@
 
 			var/mob/M = locate(href_list["gib"])
 			if(!istype(M))
-				usr << "This can only be used on instances of type /mob"
+				to_chat(usr, "This can only be used on instances of type /mob")
 				return
 
 			src.cmd_admin_gib(M)
@@ -749,7 +751,7 @@
 
 			var/mob/M = locate(href_list["build_mode"])
 			if(!istype(M))
-				usr << "This can only be used on instances of type /mob"
+				to_chat(usr, "This can only be used on instances of type /mob")
 				return
 
 			togglebuildmode(M)
@@ -761,7 +763,7 @@
 
 			var/mob/M = locate(href_list["drop_everything"])
 			if(!istype(M))
-				usr << "This can only be used on instances of type /mob"
+				to_chat(usr, "This can only be used on instances of type /mob")
 				return
 
 			if(usr.client)
@@ -773,7 +775,7 @@
 
 			var/mob/M = locate(href_list["direct_control"])
 			if(!istype(M))
-				usr << "This can only be used on instances of type /mob"
+				to_chat(usr, "This can only be used on instances of type /mob")
 				return
 
 			if(usr.client)
@@ -785,7 +787,7 @@
 
 			var/mob/M = locate(href_list["offer_control"])
 			if(!istype(M))
-				usr << "This can only be used on instances of type /mob"
+				to_chat(usr, "This can only be used on instances of type /mob")
 				return
 			offer_control(M)
 
@@ -795,7 +797,7 @@
 
 			var/obj/O = locate(href_list["delall"])
 			if(!isobj(O))
-				usr << "This can only be used on instances of type /obj"
+				to_chat(usr, "This can only be used on instances of type /obj")
 				return
 
 			var/action_type = alert("Strict type ([O.type]) or type and all subtypes?",,"Strict type","Type and subtypes","Cancel")
@@ -818,7 +820,7 @@
 							qdel(Obj)
 						CHECK_TICK
 					if(!i)
-						usr << "No objects of this type exist"
+						to_chat(usr, "No objects of this type exist")
 						return
 					log_admin("[key_name(usr)] deleted all objects of type [O_type] ([i] objects deleted) ")
 					message_admins("<span class='notice'>[key_name(usr)] deleted all objects of type [O_type] ([i] objects deleted) </span>")
@@ -830,7 +832,7 @@
 							qdel(Obj)
 						CHECK_TICK
 					if(!i)
-						usr << "No objects of this type exist"
+						to_chat(usr, "No objects of this type exist")
 						return
 					log_admin("[key_name(usr)] deleted all objects of type or subtype of [O_type] ([i] objects deleted) ")
 					message_admins("<span class='notice'>[key_name(usr)] deleted all objects of type or subtype of [O_type] ([i] objects deleted) </span>")
@@ -847,8 +849,22 @@
 					A.create_reagents(amount)
 
 			if(A.reagents)
+				var/chosen_id
 				var/list/reagent_options = sortList(chemical_reagents_list)
-				var/chosen_id = input(usr, "Choose a reagent to add.", "Choose a reagent.") in reagent_options|null
+				switch(alert(usr, "Choose a method.", "Add Reagents", "Enter ID", "Choose ID"))
+					if("Enter ID")
+						var/valid_id
+						while(!valid_id)
+							chosen_id = stripped_input(usr, "Enter the ID of the reagent you want to add.")
+							if(!chosen_id) //Get me out of here!
+								break
+							for(var/ID in reagent_options)
+								if(ID == chosen_id)
+									valid_id = 1
+							if(!valid_id)
+								to_chat(usr, "<span class='warning'>A reagent with that ID doesn't exist!</span>")
+					if("Choose ID")
+						chosen_id = input(usr, "Choose a reagent to add.", "Choose a reagent.") as null|anything in reagent_options
 				if(chosen_id)
 					var/amount = input(usr, "Choose the amount to add.", "Choose the amount.", A.reagents.maximum_volume) as num
 					if(amount)
@@ -864,7 +880,7 @@
 
 			var/atom/A = locate(href_list["explode"])
 			if(!isobj(A) && !ismob(A) && !isturf(A))
-				usr << "This can only be done to instances of type /obj, /mob and /turf"
+				to_chat(usr, "This can only be done to instances of type /obj, /mob and /turf")
 				return
 
 			src.cmd_admin_explosion(A)
@@ -876,7 +892,7 @@
 
 			var/atom/A = locate(href_list["emp"])
 			if(!isobj(A) && !ismob(A) && !isturf(A))
-				usr << "This can only be done to instances of type /obj, /mob and /turf"
+				to_chat(usr, "This can only be done to instances of type /obj, /mob and /turf")
 				return
 
 			src.cmd_admin_emp(A)
@@ -888,7 +904,7 @@
 
 			var/atom/A = locate(href_list["rotatedatum"])
 			if(!istype(A))
-				usr << "This can only be done to instances of type /atom"
+				to_chat(usr, "This can only be done to instances of type /atom")
 				return
 
 			switch(href_list["rotatedir"])
@@ -904,7 +920,7 @@
 
 			var/mob/living/carbon/C = locate(href_list["editorgans"])
 			if(!istype(C))
-				usr << "This can only be done to instances of type /mob/living/carbon"
+				to_chat(usr, "This can only be done to instances of type /mob/living/carbon")
 				return
 
 			manipulate_organs(C)
@@ -916,13 +932,13 @@
 
 			var/mob/living/carbon/monkey/Mo = locate(href_list["makehuman"])
 			if(!istype(Mo))
-				usr << "This can only be done to instances of type /mob/living/carbon/monkey"
+				to_chat(usr, "This can only be done to instances of type /mob/living/carbon/monkey")
 				return
 
 			if(alert("Confirm mob type change?",,"Transform","Cancel") != "Transform")
 				return
 			if(!Mo)
-				usr << "Mob doesn't exist anymore"
+				to_chat(usr, "Mob doesn't exist anymore")
 				return
 			holder.Topic(href, list("humanone"=href_list["makehuman"]))
 
@@ -932,13 +948,13 @@
 
 			var/mob/living/carbon/human/H = locate(href_list["makemonkey"])
 			if(!istype(H))
-				usr << "This can only be done to instances of type /mob/living/carbon/human"
+				to_chat(usr, "This can only be done to instances of type /mob/living/carbon/human")
 				return
 
 			if(alert("Confirm mob type change?",,"Transform","Cancel") != "Transform")
 				return
 			if(!H)
-				usr << "Mob doesn't exist anymore"
+				to_chat(usr, "Mob doesn't exist anymore")
 				return
 			holder.Topic(href, list("monkeyone"=href_list["makemonkey"]))
 
@@ -948,13 +964,13 @@
 
 			var/mob/living/carbon/human/H = locate(href_list["makerobot"])
 			if(!istype(H))
-				usr << "This can only be done to instances of type /mob/living/carbon/human"
+				to_chat(usr, "This can only be done to instances of type /mob/living/carbon/human")
 				return
 
 			if(alert("Confirm mob type change?",,"Transform","Cancel") != "Transform")
 				return
 			if(!H)
-				usr << "Mob doesn't exist anymore"
+				to_chat(usr, "Mob doesn't exist anymore")
 				return
 			holder.Topic(href, list("makerobot"=href_list["makerobot"]))
 
@@ -964,13 +980,13 @@
 
 			var/mob/living/carbon/human/H = locate(href_list["makealien"])
 			if(!istype(H))
-				usr << "This can only be done to instances of type /mob/living/carbon/human"
+				to_chat(usr, "This can only be done to instances of type /mob/living/carbon/human")
 				return
 
 			if(alert("Confirm mob type change?",,"Transform","Cancel") != "Transform")
 				return
 			if(!H)
-				usr << "Mob doesn't exist anymore"
+				to_chat(usr, "Mob doesn't exist anymore")
 				return
 			holder.Topic(href, list("makealien"=href_list["makealien"]))
 
@@ -980,13 +996,13 @@
 
 			var/mob/living/carbon/human/H = locate(href_list["makeslime"])
 			if(!istype(H))
-				usr << "This can only be done to instances of type /mob/living/carbon/human"
+				to_chat(usr, "This can only be done to instances of type /mob/living/carbon/human")
 				return
 
 			if(alert("Confirm mob type change?",,"Transform","Cancel") != "Transform")
 				return
 			if(!H)
-				usr << "Mob doesn't exist anymore"
+				to_chat(usr, "Mob doesn't exist anymore")
 				return
 			holder.Topic(href, list("makeslime"=href_list["makeslime"]))
 
@@ -996,13 +1012,13 @@
 
 			var/mob/living/carbon/H = locate(href_list["makeai"])
 			if(!istype(H))
-				usr << "This can only be done to instances of type /mob/living/carbon"
+				to_chat(usr, "This can only be done to instances of type /mob/living/carbon")
 				return
 
 			if(alert("Confirm mob type change?",,"Transform","Cancel") != "Transform")
 				return
 			if(!H)
-				usr << "Mob doesn't exist anymore"
+				to_chat(usr, "Mob doesn't exist anymore")
 				return
 			holder.Topic(href, list("makeai"=href_list["makeai"]))
 
@@ -1012,13 +1028,13 @@
 
 			var/mob/living/carbon/human/H = locate(href_list["setspecies"])
 			if(!istype(H))
-				usr << "This can only be done to instances of type /mob/living/carbon/human"
+				to_chat(usr, "This can only be done to instances of type /mob/living/carbon/human")
 				return
 
 			var/result = input(usr, "Please choose a new species","Species") as null|anything in species_list
 
 			if(!H)
-				usr << "Mob doesn't exist anymore"
+				to_chat(usr, "Mob doesn't exist anymore")
 				return
 
 			if(result)
@@ -1031,7 +1047,7 @@
 
 			var/mob/living/carbon/C = locate(href_list["editbodypart"])
 			if(!istype(C))
-				usr << "This can only be done to instances of type /mob/living/carbon"
+				to_chat(usr, "This can only be done to instances of type /mob/living/carbon")
 				return
 
 			var/edit_action = input(usr, "What would you like to do?","Modify Body Part") as null|anything in list("add","remove", "augment")
@@ -1043,7 +1059,7 @@
 			var/result = input(usr, "Please choose which body part to [edit_action]","[capitalize(edit_action)] Body Part") as null|anything in limb_list
 
 			if(!C)
-				usr << "Mob doesn't exist anymore"
+				to_chat(usr, "Mob doesn't exist anymore")
 				return
 
 			if(result)
@@ -1053,21 +1069,21 @@
 						if(BP)
 							BP.drop_limb()
 						else
-							usr << "[C] doesn't have such bodypart."
+							to_chat(usr, "[C] doesn't have such bodypart.")
 					if("add")
 						if(BP)
-							usr << "[C] already has such bodypart."
+							to_chat(usr, "[C] already has such bodypart.")
 						else
 							if(!C.regenerate_limb(result))
-								usr << "[C] cannot have such bodypart."
+								to_chat(usr, "[C] cannot have such bodypart.")
 					if("augment")
 						if(ishuman(C))
 							if(BP)
 								BP.change_bodypart_status(BODYPART_ROBOTIC, 1)
 							else
-								usr << "[C] doesn't have such bodypart."
+								to_chat(usr, "[C] doesn't have such bodypart.")
 						else
-							usr << "Only humans can be augmented."
+							to_chat(usr, "Only humans can be augmented.")
 
 
 
@@ -1077,25 +1093,24 @@
 
 			var/mob/living/carbon/human/H = locate(href_list["purrbation"])
 			if(!istype(H))
-				usr << "This can only be done to instances of type /mob/living/carbon/human"
+				to_chat(usr, "This can only be done to instances of type /mob/living/carbon/human")
 				return
 			if(!ishumanbasic(H))
-				usr << "This can only be done to the basic human species \
-					at the moment."
+				to_chat(usr, "This can only be done to the basic human species at the moment.")
 				return
 
 			if(!H)
-				usr << "Mob doesn't exist anymore"
+				to_chat(usr, "Mob doesn't exist anymore")
 				return
 
 			var/success = purrbation_toggle(H)
 			if(success)
-				usr << "Put [H] on purrbation."
+				to_chat(usr, "Put [H] on purrbation.")
 				log_admin("[key_name(usr)] has put [key_name(H)] on purrbation.")
 				message_admins("<span class='notice'>[key_name(usr)] has put [key_name(H)] on purrbation.</span>")
 
 			else
-				usr << "Removed [H] from purrbation."
+				to_chat(usr, "Removed [H] from purrbation.")
 				log_admin("[key_name(usr)] has removed [key_name(H)] from purrbation.")
 				message_admins("<span class='notice'>[key_name(usr)] has removed [key_name(H)] from purrbation.</span>")
 
@@ -1112,7 +1127,7 @@
 			var/amount =  input("Deal how much damage to mob? (Negative values here heal)","Adjust [Text]loss",0) as num
 
 			if(!L)
-				usr << "Mob doesn't exist anymore"
+				to_chat(usr, "Mob doesn't exist anymore")
 				return
 
 			switch(Text)
@@ -1131,7 +1146,7 @@
 				if("stamina")
 					L.adjustStaminaLoss(amount)
 				else
-					usr << "You caused an error. DEBUG: Text:[Text] Mob:[L]"
+					to_chat(usr, "You caused an error. DEBUG: Text:[Text] Mob:[L]")
 					return
 
 			if(amount != 0)
