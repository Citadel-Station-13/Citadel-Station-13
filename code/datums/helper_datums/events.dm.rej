diff a/code/datums/helper_datums/events.dm b/code/datums/helper_datums/events.dm	(rejected hunks)
@@ -10,59 +10,45 @@
 	..()
 	events = new
 
+/datum/events/Destroy()
+	for(var/elist in events)
+		for(var/e in events[elist])
+			qdel(e)
+	events = null
+	return ..()
+
 /datum/events/proc/addEventType(event_type as text)
 	if(!(event_type in events) || !islist(events[event_type]))
 		events[event_type] = list()
-		return 1
-	return
-
+		return TRUE
+	return FALSE
 
 //	Arguments: event_type as text, proc_holder as datum, proc_name as text
 //	Returns: New event, null on error.
-/datum/events/proc/addEvent(event_type as text, proc_holder, proc_name as text)
-	if(!event_type || !proc_holder || !proc_name)
+/datum/events/proc/addEvent(event_type as text, datum/callback/cb)
+	if(!event_type || !cb)
 		return
 	addEventType(event_type)
 	var/list/event = events[event_type]
-	var/datum/event/E = new /datum/event(proc_holder,proc_name)
-	event += E
-	return E
+	event += cb
+	return cb
 
 //  Arguments: event_type as text, any number of additional arguments to pass to event handler
 //  Returns: null
-/datum/events/proc/fireEvent()
-	//world << "Events in [args[1]] called"
-	var/list/event = listgetindex(events,args[1])
+/datum/events/proc/fireEvent(eventName, ...)
+	var/list/event = listgetindex(events,eventName)
 	if(istype(event))
-		spawn(0)
-			for(var/datum/event/E in event)
-				if(!E.Fire(arglist(args.Copy(2))))
-					clearEvent(args[1],E)
-	return
+		for(var/E in event)
+			var/datum/callback/cb = E
+			cb.InvokeAsync(arglist(args.Copy(2)))
 
 // Arguments: event_type as text, E as /datum/event
-// Returns: 1 if event cleared, null on error
+// Returns: TRUE if event cleared, FALSE on error
 
-/datum/events/proc/clearEvent(event_type as text, datum/event/E)
-	if(!event_type || !E)
-		return
+/datum/events/proc/clearEvent(event_type as text, datum/callback/cb)
+	if(!event_type || !cb)
+		return FALSE
 	var/list/event = listgetindex(events,event_type)
-	event -= E
-	return 1
-
-
-/datum/event
-	var/listener
-	var/proc_name
-
-/datum/event/New(tlistener,tprocname)
-	listener = tlistener
-	proc_name = tprocname
-	return ..()
-
-/datum/event/proc/Fire()
-	//world << "Event fired"
-	if(listener)
-		call(listener,proc_name)(arglist(args))
-		return 1
-	return
+	event -= cb
+	qdel(cb)
+	return TRUE
