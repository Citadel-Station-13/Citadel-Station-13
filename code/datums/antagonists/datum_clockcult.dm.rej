diff a/code/datums/antagonists/datum_clockcult.dm b/code/datums/antagonists/datum_clockcult.dm	(rejected hunks)
@@ -40,14 +40,17 @@
 		ticker.mode.servants_of_ratvar += owner.mind
 		ticker.mode.update_servant_icons_added(owner.mind)
 		if(jobban_isbanned(owner, ROLE_SERVANT_OF_RATVAR))
-			addtimer(ticker.mode, "replace_jobbaned_player", 0, FALSE, owner, ROLE_SERVANT_OF_RATVAR, ROLE_SERVANT_OF_RATVAR)
+			addtimer(ticker.mode, "replace_jobbaned_player", 0, TIMER_NORMAL, owner, ROLE_SERVANT_OF_RATVAR, ROLE_SERVANT_OF_RATVAR)
 	if(owner.mind)
 		owner.mind.special_role = "Servant of Ratvar"
 	owner.attack_log += "\[[time_stamp()]\] <span class='brass'>Has been converted to the cult of Ratvar!</span>"
 	if(issilicon(owner))
 		var/mob/living/silicon/S = owner
 		if(iscyborg(S) && !silent_update)
-			S << "<span class='boldwarning'>You have been desynced from your master AI. In addition, your onboard camera is no longer active and your safeties have been disabled.</span>"
+			S << "<span class='boldwarning'>You have been desynced from your master AI.\n\
+			In addition, your onboard camera is no longer active and you have gained additional equipment, including a limited clockwork slab.</span>"
+		if(isAI(S))
+			S << "<span class='boldwarning'>You are able to use your cameras to listen in on conversations.</span>"
 		S << "<span class='heavy_brass'>You can communicate with other servants by using the Hierophant Network action button in the upper left.</span>"
 	else if(isbrain(owner) || isclockmob(owner))
 		owner << "<span class='nezbere'>You can communicate with other servants by using the Hierophant Network action button in the upper left.</span>"
@@ -67,19 +70,21 @@
 		if(iscyborg(S))
 			var/mob/living/silicon/robot/R = S
 			R.UnlinkSelf()
-			R.SetEmagged(TRUE)
+			R.module.rebuild_modules()
 		else if(isAI(S))
 			var/mob/living/silicon/ai/A = S
 			A.requires_power = POWER_REQ_CLOCKCULT
 			if(!A.lacks_power())
 				A.ai_restore_power()
+			if(A.eyeobj)
+				A.eyeobj.relay_speech = TRUE
 			for(var/C in A.connected_robots)
 				var/mob/living/silicon/robot/R = C
 				if(R.connected_ai == A)
 					R.visible_message("<span class='heavy_brass'>[R]'s eyes glow a blazing yellow!</span>", \
 					"<span class='heavy_brass'>Assist your new companions in their righteous efforts. Your goal is theirs, and theirs yours. You serve the Clockwork Justiciar above all else. Perform his every \
 					whim without hesitation.</span>")
-					R << "<span class='boldwarning'>Your onboard camera is no longer active and your safeties have been disabled.</span>"
+					R << "<span class='boldwarning'>Your onboard camera is no longer active and you have gained additional equipment, including a limited clockwork slab.</span>"
 					add_servant_of_ratvar(R, TRUE)
 		S.laws = new/datum/ai_laws/ratvar
 		S.laws.associate(S)
@@ -100,7 +105,8 @@
 		hierophant_network.span_for_name = "nezbere"
 		hierophant_network.span_for_message = "brass"
 	owner.throw_alert("clockinfo", /obj/screen/alert/clockwork/infodump)
-	cache_check(owner)
+	if(!clockwork_gateway_activated)
+		owner.throw_alert("scripturereq", /obj/screen/alert/clockwork/scripture_reqs)
 	..()
 
 /datum/antagonist/clockcultist/remove_innate_effects()
@@ -108,23 +114,25 @@
 	owner.faction -= "ratvar"
 	owner.languages_spoken &= ~RATVAR
 	owner.languages_understood &= ~RATVAR
-	addtimer(owner, "update_action_buttons_icon", 1) //because a few clockcult things are action buttons and we may be wearing/holding them, we need to update buttons
 	owner.clear_alert("clockinfo")
-	owner.clear_alert("nocache")
+	owner.clear_alert("scripturereq")
 	for(var/datum/action/innate/function_call/F in owner.actions) //Removes any bound Ratvarian spears
 		qdel(F)
 	if(issilicon(owner))
 		var/mob/living/silicon/S = owner
-		if(iscyborg(S))
-			var/mob/living/silicon/robot/R = S
-			R.SetEmagged(FALSE)
-		else if(isAI(S))
+		if(isAI(S))
 			var/mob/living/silicon/ai/A = S
 			A.requires_power = initial(A.requires_power)
 		S.make_laws()
 		S.update_icons()
 		S.show_laws()
+	var/mob/living/temp_owner = owner
 	..()
+	if(iscyborg(temp_owner))
+		var/mob/living/silicon/robot/R = temp_owner
+		R.module.rebuild_modules()
+	if(temp_owner)
+		temp_owner.update_action_buttons_icon() //because a few clockcult things are action buttons and we may be wearing/holding them, we need to update buttons
 
 /datum/antagonist/clockcultist/on_remove()
 	if(!silent_update)
