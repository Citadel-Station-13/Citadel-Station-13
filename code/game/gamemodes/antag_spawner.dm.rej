diff a/code/game/gamemodes/antag_spawner.dm b/code/game/gamemodes/antag_spawner.dm	(rejected hunks)
@@ -54,12 +54,12 @@
 		H.set_machine(src)
 		if(href_list["school"])
 			if(used)
-				H << "You already used this contract!"
+				to_chat(H, "You already used this contract!")
 				return
 			var/list/candidates = pollCandidatesForMob("Do you want to play as a wizard's [href_list["school"]] apprentice?", ROLE_WIZARD, null, ROLE_WIZARD, 150, src)
 			if(candidates.len)
 				if(used)
-					H << "You already used this contract!"
+					to_chat(H, "You already used this contract!")
 					return
 				used = 1
 				var/mob/dead/observer/theghost = pick(candidates)
@@ -67,35 +67,35 @@
 				if(H && H.mind)
 					ticker.mode.update_wiz_icons_added(H.mind)
 			else
-				H << "Unable to reach your apprentice! You can either attack the spellbook with the contract to refund your points, or wait and try again later."
+				to_chat(H, "Unable to reach your apprentice! You can either attack the spellbook with the contract to refund your points, or wait and try again later.")
 
 /obj/item/weapon/antag_spawner/contract/spawn_antag(client/C, turf/T, type = "")
-	PoolOrNew(/obj/effect/particle_effect/smoke, T)
+	new /obj/effect/particle_effect/smoke(T)
 	var/mob/living/carbon/human/M = new/mob/living/carbon/human(T)
 	C.prefs.copy_to(M)
 	M.key = C.key
 	var/wizard_name = "the wizard"
 	if(usr)
 		wizard_name = usr.real_name
-	M << "<B>You are [wizard_name]'s apprentice! You are bound by magic contract to follow their orders and help them in accomplishing their goals."
+	to_chat(M, "<B>You are [wizard_name]'s apprentice! You are bound by magic contract to follow their orders and help them in accomplishing their goals.")
 	switch(type)
 		if("destruction")
 			M.mind.AddSpell(new /obj/effect/proc_holder/spell/targeted/projectile/magic_missile(null))
-			M.mind.AddSpell(new /obj/effect/proc_holder/spell/fireball(null))
-			M << "<B>Your service has not gone unrewarded, however. Studying under [wizard_name], you have learned powerful, destructive spells. You are able to cast magic missile and fireball."
+			M.mind.AddSpell(new /obj/effect/proc_holder/spell/aimed/fireball(null))
+			to_chat(M, "<B>Your service has not gone unrewarded, however. Studying under [wizard_name], you have learned powerful, destructive spells. You are able to cast magic missile and fireball.")
 		if("bluespace")
 			M.mind.AddSpell(new /obj/effect/proc_holder/spell/targeted/area_teleport/teleport(null))
 			M.mind.AddSpell(new /obj/effect/proc_holder/spell/targeted/ethereal_jaunt(null))
-			M << "<B>Your service has not gone unrewarded, however. Studying under [wizard_name], you have learned reality bending mobility spells. You are able to cast teleport and ethereal jaunt."
+			to_chat(M, "<B>Your service has not gone unrewarded, however. Studying under [wizard_name], you have learned reality bending mobility spells. You are able to cast teleport and ethereal jaunt.")
 		if("healing")
 			M.mind.AddSpell(new /obj/effect/proc_holder/spell/targeted/charge(null))
 			M.mind.AddSpell(new /obj/effect/proc_holder/spell/targeted/forcewall(null))
 			M.put_in_hands_or_del(new /obj/item/weapon/gun/magic/staff/healing(M))
-			M << "<B>Your service has not gone unrewarded, however. Studying under [wizard_name], you have learned livesaving survival spells. You are able to cast charge and forcewall."
+			to_chat(M, "<B>Your service has not gone unrewarded, however. Studying under [wizard_name], you have learned livesaving survival spells. You are able to cast charge and forcewall.")
 		if("robeless")
 			M.mind.AddSpell(new /obj/effect/proc_holder/spell/aoe_turf/knock(null))
 			M.mind.AddSpell(new /obj/effect/proc_holder/spell/targeted/mind_transfer(null))
-			M << "<B>Your service has not gone unrewarded, however. Studying under [wizard_name], you have learned stealthy, robeless spells. You are able to cast knock and mindswap."
+			to_chat(M, "<B>Your service has not gone unrewarded, however. Studying under [wizard_name], you have learned stealthy, robeless spells. You are able to cast knock and mindswap.")
 
 	equip_antag(M)
 	var/wizard_name_first = pick(wizard_first)
@@ -137,17 +137,16 @@
 	icon = 'icons/obj/device.dmi'
 	icon_state = "locator"
 	var/borg_to_spawn
-	var/list/possible_types = list("Assault", "Medical")
 
 /obj/item/weapon/antag_spawner/nuke_ops/proc/check_usability(mob/user)
 	if(used)
-		user << "<span class='warning'>[src] is out of power!</span>"
+		to_chat(user, "<span class='warning'>[src] is out of power!</span>")
 		return 0
 	if(!(user.mind in ticker.mode.syndicates))
-		user << "<span class='danger'>AUTHENTICATION FAILURE. ACCESS DENIED.</span>"
+		to_chat(user, "<span class='danger'>AUTHENTICATION FAILURE. ACCESS DENIED.</span>")
 		return 0
 	if(user.z != ZLEVEL_CENTCOM)
-		user << "<span class='warning'>[src] is out of range! It can only be used at your base!</span>"
+		to_chat(user, "<span class='warning'>[src] is out of range! It can only be used at your base!</span>")
 		return 0
 	return 1
 
@@ -168,7 +167,7 @@
 		S.start()
 		qdel(src)
 	else
-		user << "<span class='warning'>Unable to connect to Syndicate command. Please wait and try again later or use the teleporter on your uplink to get your points refunded.</span>"
+		to_chat(user, "<span class='warning'>Unable to connect to Syndicate command. Please wait and try again later or use the teleporter on your uplink to get your points refunded.</span>")
 
 /obj/item/weapon/antag_spawner/nuke_ops/spawn_antag(client/C, turf/T)
 	var/mob/living/carbon/human/M = new/mob/living/carbon/human(T)
@@ -189,12 +188,13 @@
 	icon = 'icons/obj/device.dmi'
 	icon_state = "locator"
 
+/obj/item/weapon/antag_spawner/nuke_ops/borg_tele/assault
+	name = "syndicate assault cyborg teleporter"
+	borg_to_spawn = "Assault"
 
-/obj/item/weapon/antag_spawner/nuke_ops/borg_tele/attack_self(mob/user)
-	borg_to_spawn = input("What type?", "Cyborg Type", type) as null|anything in possible_types
-	if(!borg_to_spawn)
-		return
-	..()
+/obj/item/weapon/antag_spawner/nuke_ops/borg_tele/medical
+	name = "syndicate medical teleporter"
+	borg_to_spawn = "Medical"
 
 /obj/item/weapon/antag_spawner/nuke_ops/borg_tele/spawn_antag(client/C, turf/T)
 	var/mob/living/silicon/robot/R
@@ -236,7 +236,7 @@
 
 /obj/item/weapon/antag_spawner/slaughter_demon/attack_self(mob/user)
 	if(user.z != 1)
-		user << "<span class='notice'>You should probably wait until you reach the station.</span>"
+		to_chat(user, "<span class='notice'>You should probably wait until you reach the station.</span>")
 		return
 	if(used)
 		return
@@ -247,17 +247,17 @@
 		used = 1
 		var/mob/dead/observer/theghost = pick(demon_candidates)
 		spawn_antag(theghost.client, get_turf(src), initial(demon_type.name))
-		user << shatter_msg
-		user << veil_msg
+		to_chat(user, shatter_msg)
+		to_chat(user, veil_msg)
 		playsound(user.loc, 'sound/effects/Glassbr1.ogg', 100, 1)
 		qdel(src)
 	else
-		user << "<span class='notice'>You can't seem to work up the nerve to shatter the bottle. Perhaps you should try again later.</span>"
+		to_chat(user, "<span class='notice'>You can't seem to work up the nerve to shatter the bottle. Perhaps you should try again later.</span>")
 
 
 /obj/item/weapon/antag_spawner/slaughter_demon/spawn_antag(client/C, turf/T, type = "")
 
-	var /obj/effect/dummy/slaughter/holder = PoolOrNew(/obj/effect/dummy/slaughter,T)
+	var /obj/effect/dummy/slaughter/holder = new /obj/effect/dummy/slaughter(T)
 	var/mob/living/simple_animal/slaughter/S = new demon_type(holder)
 	S.holder = holder
 	S.key = C.key
@@ -275,12 +275,12 @@
 	new_objective2.owner = S.mind
 	new_objective2.explanation_text = "[objective_verb] everyone[usr ? " else while you're at it":""]."
 	S.mind.objectives += new_objective2
-	S << S.playstyle_string
-	S << "<B>You are currently not currently in the same plane of existence as the station. \
-	Ctrl+Click a blood pool to manifest.</B>"
+	to_chat(S, S.playstyle_string)
+	to_chat(S, "<B>You are currently not currently in the same plane of existence as the station. \
+	Ctrl+Click a blood pool to manifest.</B>")
 	if(new_objective)
-		S << "<B>Objective #[1]</B>: [new_objective.explanation_text]"
-	S << "<B>Objective #[new_objective ? "[2]":"[1]"]</B>: [new_objective2.explanation_text]"
+		to_chat(S, "<B>Objective #[1]</B>: [new_objective.explanation_text]")
+	to_chat(S, "<B>Objective #[new_objective ? "[2]":"[1]"]</B>: [new_objective2.explanation_text]")
 
 /obj/item/weapon/antag_spawner/slaughter_demon/laughter
 	name = "vial of tickles"
