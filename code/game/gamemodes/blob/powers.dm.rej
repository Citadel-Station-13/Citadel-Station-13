diff a/code/game/gamemodes/blob/powers.dm b/code/game/gamemodes/blob/powers.dm	(rejected hunks)
@@ -1,6 +1,6 @@
 /mob/camera/blob/proc/can_buy(cost = 15)
 	if(blob_points < cost)
-		src << "<span class='warning'>You cannot afford this, you need at least [cost] resources!</span>"
+		to_chat(src, "<span class='warning'>You cannot afford this, you need at least [cost] resources!</span>")
 		return 0
 	add_points(-cost)
 	return 1
@@ -15,30 +15,30 @@
 			if("blob" in M.faction)
 				continue
 			if(M.client)
-				src << "<span class='warning'>There is someone too close to place your blob core!</span>"
+				to_chat(src, "<span class='warning'>There is someone too close to place your blob core!</span>")
 				return 0
 		for(var/mob/living/M in view(13, src))
 			if("blob" in M.faction)
 				continue
 			if(M.client)
-				src << "<span class='warning'>Someone could see your blob core from here!</span>"
+				to_chat(src, "<span class='warning'>Someone could see your blob core from here!</span>")
 				return 0
 		var/turf/T = get_turf(src)
 		if(T.density)
-			src << "<span class='warning'>This spot is too dense to place a blob core on!</span>"
+			to_chat(src, "<span class='warning'>This spot is too dense to place a blob core on!</span>")
 			return 0
 		for(var/obj/O in T)
 			if(istype(O, /obj/structure/blob))
 				if(istype(O, /obj/structure/blob/normal))
 					qdel(O)
 				else
-					src << "<span class='warning'>There is already a blob here!</span>"
+					to_chat(src, "<span class='warning'>There is already a blob here!</span>")
 					return 0
 			else if(O.density)
-				src << "<span class='warning'>This spot is too dense to place a blob core on!</span>"
+				to_chat(src, "<span class='warning'>This spot is too dense to place a blob core on!</span>")
 				return 0
 		if(world.time <= manualplace_min_time && world.time <= autoplace_max_time)
-			src << "<span class='warning'>It is too early to place your blob core!</span>"
+			to_chat(src, "<span class='warning'>It is too early to place your blob core!</span>")
 			return 0
 	else if(placement_override == 1)
 		var/turf/T = pick(blobstart)
@@ -80,19 +80,19 @@
 		T = get_turf(src)
 	var/obj/structure/blob/B = (locate(/obj/structure/blob) in T)
 	if(!B)
-		src << "<span class='warning'>There is no blob here!</span>"
+		to_chat(src, "<span class='warning'>There is no blob here!</span>")
 		return
 	if(!istype(B, /obj/structure/blob/normal))
-		src << "<span class='warning'>Unable to use this blob, find a normal one.</span>"
+		to_chat(src, "<span class='warning'>Unable to use this blob, find a normal one.</span>")
 		return
 	if(needsNode && nodes_required)
 		if(!(locate(/obj/structure/blob/node) in orange(3, T)) && !(locate(/obj/structure/blob/core) in orange(4, T)))
-			src << "<span class='warning'>You need to place this blob closer to a node or core!</span>"
+			to_chat(src, "<span class='warning'>You need to place this blob closer to a node or core!</span>")
 			return //handholdotron 2000
 	if(nearEquals)
 		for(var/obj/structure/blob/L in orange(nearEquals, T))
 			if(L.type == blobType)
-				src << "<span class='warning'>There is a similar blob nearby, move more than [nearEquals] tiles away from it!</span>"
+				to_chat(src, "<span class='warning'>There is a similar blob nearby, move more than [nearEquals] tiles away from it!</span>")
 				return
 	if(!can_buy(price))
 		return
@@ -105,9 +105,9 @@
 	set desc = "Toggle requiring nodes to place resource and factory blobs."
 	nodes_required = !nodes_required
 	if(nodes_required)
-		src << "<span class='warning'>You now require a nearby node or core to place factory and resource blobs.</span>"
+		to_chat(src, "<span class='warning'>You now require a nearby node or core to place factory and resource blobs.</span>")
 	else
-		src << "<span class='warning'>You no longer require a nearby node or core to place factory and resource blobs.</span>"
+		to_chat(src, "<span class='warning'>You no longer require a nearby node or core to place factory and resource blobs.</span>")
 
 /mob/camera/blob/verb/create_shield_power()
 	set category = "Blob"
@@ -143,13 +143,13 @@
 	var/turf/T = get_turf(src)
 	var/obj/structure/blob/factory/B = locate(/obj/structure/blob/factory) in T
 	if(!B)
-		src << "<span class='warning'>You must be on a factory blob!</span>"
+		to_chat(src, "<span class='warning'>You must be on a factory blob!</span>")
 		return
 	if(B.naut) //if it already made a blobbernaut, it can't do it again
-		src << "<span class='warning'>This factory blob is already sustaining a blobbernaut.</span>"
+		to_chat(src, "<span class='warning'>This factory blob is already sustaining a blobbernaut.</span>")
 		return
 	if(B.obj_integrity < B.max_integrity * 0.5)
-		src << "<span class='warning'>This factory blob is too damaged to sustain a blobbernaut.</span>"
+		to_chat(src, "<span class='warning'>This factory blob is too damaged to sustain a blobbernaut.</span>")
 		return
 	if(!can_buy(40))
 		return
@@ -173,11 +173,11 @@
 		blobber.key = C.key
 		blobber << 'sound/effects/blobattack.ogg'
 		blobber << 'sound/effects/attackblob.ogg'
-		blobber << "<b>You are a blobbernaut!</b>"
-		blobber << "You are powerful, hard to kill, and slowly regenerate near nodes and cores, but will slowly die if not near the blob or if the factory that made you is killed."
-		blobber << "You can communicate with other blobbernauts and overminds via <b>:b</b>"
-		blobber << "Your overmind's blob reagent is: <b><font color=\"[blob_reagent_datum.color]\">[blob_reagent_datum.name]</b></font>!"
-		blobber << "The <b><font color=\"[blob_reagent_datum.color]\">[blob_reagent_datum.name]</b></font> reagent [blob_reagent_datum.shortdesc ? "[blob_reagent_datum.shortdesc]" : "[blob_reagent_datum.description]"]"
+		to_chat(blobber, "<b>You are a blobbernaut!</b>")
+		to_chat(blobber, "You are powerful, hard to kill, and slowly regenerate near nodes and cores, but will slowly die if not near the blob or if the factory that made you is killed.")
+		to_chat(blobber, "You can communicate with other blobbernauts and overminds via <b>:b</b>")
+		to_chat(blobber, "Your overmind's blob reagent is: <b><font color=\"[blob_reagent_datum.color]\">[blob_reagent_datum.name]</b></font>!")
+		to_chat(blobber, "The <b><font color=\"[blob_reagent_datum.color]\">[blob_reagent_datum.name]</b></font> reagent [blob_reagent_datum.shortdesc ? "[blob_reagent_datum.shortdesc]" : "[blob_reagent_datum.description]"]")
 	if(blobber)
 		blobber.notransform = 0
 
@@ -188,14 +188,14 @@
 	var/turf/T = get_turf(src)
 	var/obj/structure/blob/node/B = locate(/obj/structure/blob/node) in T
 	if(!B)
-		src << "<span class='warning'>You must be on a blob node!</span>"
+		to_chat(src, "<span class='warning'>You must be on a blob node!</span>")
 		return
 	if(!blob_core)
-		src << "<span class='userdanger'>You have no core and are about to die! May you rest in peace.</span>"
+		to_chat(src, "<span class='userdanger'>You have no core and are about to die! May you rest in peace.</span>")
 		return
 	var/area/A = get_area(T)
 	if(isspaceturf(T) || A && !A.blob_allowed)
-		src << "<span class='warning'>You cannot relocate your core here!</span>"
+		to_chat(src, "<span class='warning'>You cannot relocate your core here!</span>")
 		return
 	if(!can_buy(80))
 		return
@@ -216,17 +216,17 @@
 /mob/camera/blob/proc/remove_blob(turf/T)
 	var/obj/structure/blob/B = locate() in T
 	if(!B)
-		src << "<span class='warning'>There is no blob there!</span>"
+		to_chat(src, "<span class='warning'>There is no blob there!</span>")
 		return
 	if(B.point_return < 0)
-		src << "<span class='warning'>Unable to remove this blob.</span>"
+		to_chat(src, "<span class='warning'>Unable to remove this blob.</span>")
 		return
 	if(max_blob_points < B.point_return + blob_points)
-		src << "<span class='warning'>You have too many resources to remove this blob!</span>"
+		to_chat(src, "<span class='warning'>You have too many resources to remove this blob!</span>")
 		return
 	if(B.point_return)
 		add_points(B.point_return)
-		src << "<span class='notice'>Gained [B.point_return] resources from removing \the [B].</span>"
+		to_chat(src, "<span class='notice'>Gained [B.point_return] resources from removing \the [B].</span>")
 	qdel(B)
 
 /mob/camera/blob/verb/expand_blob_power()
@@ -243,7 +243,7 @@
 	for(var/obj/structure/blob/AB in range(T, 1))
 		possibleblobs += AB
 	if(!possibleblobs.len)
-		src << "<span class='warning'>There is no blob adjacent to the target tile!</span>"
+		to_chat(src, "<span class='warning'>There is no blob adjacent to the target tile!</span>")
 		return
 	if(can_buy(4))
 		var/attacksuccess = FALSE
@@ -260,7 +260,7 @@
 			if(attacksuccess) //if we successfully attacked a turf with a blob on it, don't refund shit
 				B.blob_attack_animation(T, src)
 			else
-				src << "<span class='warning'>There is a blob there!</span>"
+				to_chat(src, "<span class='warning'>There is a blob there!</span>")
 				add_points(4) //otherwise, refund all of the cost
 		else
 			var/list/cardinalblobs = list()
@@ -295,7 +295,7 @@
 	rally_spores(T)
 
 /mob/camera/blob/proc/rally_spores(turf/T)
-	src << "You rally your spores."
+	to_chat(src, "You rally your spores.")
 	var/list/surrounding_turfs = block(locate(T.x - 1, T.y - 1, T.z), locate(T.x + 1, T.y + 1, T.z))
 	if(!surrounding_turfs.len)
 		return
@@ -312,7 +312,7 @@
 	if(!speak_text)
 		return
 	else
-		src << "You broadcast with your minions, <B>[speak_text]</B>"
+		to_chat(src, "You broadcast with your minions, <B>[speak_text]</B>")
 	for(var/BLO in blob_mobs)
 		var/mob/living/simple_animal/hostile/blob/BM = BLO
 		if(BM.stat == CONSCIOUS)
@@ -337,33 +337,33 @@
 	for(var/BLO in blob_mobs)
 		var/mob/living/simple_animal/hostile/blob/BM = BLO
 		BM.update_icons() //If it's getting a new chemical, tell it what it does!
-		BM << "Your overmind's blob reagent is now: <b><font color=\"[blob_reagent_datum.color]\">[blob_reagent_datum.name]</b></font>!"
-		BM << "The <b><font color=\"[blob_reagent_datum.color]\">[blob_reagent_datum.name]</b></font> reagent [blob_reagent_datum.shortdesc ? "[blob_reagent_datum.shortdesc]" : "[blob_reagent_datum.description]"]"
-	src << "Your reagent is now: <b><font color=\"[blob_reagent_datum.color]\">[blob_reagent_datum.name]</b></font>!"
-	src << "The <b><font color=\"[blob_reagent_datum.color]\">[blob_reagent_datum.name]</b></font> reagent [blob_reagent_datum.description]"
+		to_chat(BM, "Your overmind's blob reagent is now: <b><font color=\"[blob_reagent_datum.color]\">[blob_reagent_datum.name]</b></font>!")
+		to_chat(BM, "The <b><font color=\"[blob_reagent_datum.color]\">[blob_reagent_datum.name]</b></font> reagent [blob_reagent_datum.shortdesc ? "[blob_reagent_datum.shortdesc]" : "[blob_reagent_datum.description]"]")
+	to_chat(src, "Your reagent is now: <b><font color=\"[blob_reagent_datum.color]\">[blob_reagent_datum.name]</b></font>!")
+	to_chat(src, "The <b><font color=\"[blob_reagent_datum.color]\">[blob_reagent_datum.name]</b></font> reagent [blob_reagent_datum.description]")
 	if(blob_reagent_datum.effectdesc)
-		src << "The <b><font color=\"[blob_reagent_datum.color]\">[blob_reagent_datum.name]</b></font> reagent [blob_reagent_datum.effectdesc]"
+		to_chat(src, "The <b><font color=\"[blob_reagent_datum.color]\">[blob_reagent_datum.name]</b></font> reagent [blob_reagent_datum.effectdesc]")
 
 /mob/camera/blob/verb/blob_help()
 	set category = "Blob"
 	set name = "*Blob Help*"
 	set desc = "Help on how to blob."
-	src << "<b>As the overmind, you can control the blob!</b>"
-	src << "Your blob reagent is: <b><font color=\"[blob_reagent_datum.color]\">[blob_reagent_datum.name]</b></font>!"
-	src << "The <b><font color=\"[blob_reagent_datum.color]\">[blob_reagent_datum.name]</b></font> reagent [blob_reagent_datum.description]"
+	to_chat(src, "<b>As the overmind, you can control the blob!</b>")
+	to_chat(src, "Your blob reagent is: <b><font color=\"[blob_reagent_datum.color]\">[blob_reagent_datum.name]</b></font>!")
+	to_chat(src, "The <b><font color=\"[blob_reagent_datum.color]\">[blob_reagent_datum.name]</b></font> reagent [blob_reagent_datum.description]")
 	if(blob_reagent_datum.effectdesc)
-		src << "The <b><font color=\"[blob_reagent_datum.color]\">[blob_reagent_datum.name]</b></font> reagent [blob_reagent_datum.effectdesc]"
-	src << "<b>You can expand, which will attack people, damage objects, or place a Normal Blob if the tile is clear.</b>"
-	src << "<i>Normal Blobs</i> will expand your reach and can be upgraded into special blobs that perform certain functions."
-	src << "<b>You can upgrade normal blobs into the following types of blob:</b>"
-	src << "<i>Shield Blobs</i> are strong and expensive blobs which take more damage. In additon, they are fireproof and can block air, use these to protect yourself from station fires."
-	src << "<i>Resource Blobs</i> are blobs which produce more resources for you, build as many of these as possible to consume the station. This type of blob must be placed near node blobs or your core to work."
-	src << "<i>Factory Blobs</i> are blobs that spawn blob spores which will attack nearby enemies. This type of blob must be placed near node blobs or your core to work."
-	src << "<i>Blobbernauts</i> can be produced from factories for a cost, and are hard to kill, powerful, and moderately smart. The factory used to create one will become fragile and briefly unable to produce spores."
-	src << "<i>Node Blobs</i> are blobs which grow, like the core. Like the core it can activate resource and factory blobs."
-	src << "<b>In addition to the buttons on your HUD, there are a few click shortcuts to speed up expansion and defense.</b>"
-	src << "<b>Shortcuts:</b> Click = Expand Blob <b>|</b> Middle Mouse Click = Rally Spores <b>|</b> Ctrl Click = Create Shield Blob <b>|</b> Alt Click = Remove Blob"
-	src << "Attempting to talk will send a message to all other overminds, allowing you to coordinate with them."
+		to_chat(src, "The <b><font color=\"[blob_reagent_datum.color]\">[blob_reagent_datum.name]</b></font> reagent [blob_reagent_datum.effectdesc]")
+	to_chat(src, "<b>You can expand, which will attack people, damage objects, or place a Normal Blob if the tile is clear.</b>")
+	to_chat(src, "<i>Normal Blobs</i> will expand your reach and can be upgraded into special blobs that perform certain functions.")
+	to_chat(src, "<b>You can upgrade normal blobs into the following types of blob:</b>")
+	to_chat(src, "<i>Shield Blobs</i> are strong and expensive blobs which take more damage. In additon, they are fireproof and can block air, use these to protect yourself from station fires.")
+	to_chat(src, "<i>Resource Blobs</i> are blobs which produce more resources for you, build as many of these as possible to consume the station. This type of blob must be placed near node blobs or your core to work.")
+	to_chat(src, "<i>Factory Blobs</i> are blobs that spawn blob spores which will attack nearby enemies. This type of blob must be placed near node blobs or your core to work.")
+	to_chat(src, "<i>Blobbernauts</i> can be produced from factories for a cost, and are hard to kill, powerful, and moderately smart. The factory used to create one will become fragile and briefly unable to produce spores.")
+	to_chat(src, "<i>Node Blobs</i> are blobs which grow, like the core. Like the core it can activate resource and factory blobs.")
+	to_chat(src, "<b>In addition to the buttons on your HUD, there are a few click shortcuts to speed up expansion and defense.</b>")
+	to_chat(src, "<b>Shortcuts:</b> Click = Expand Blob <b>|</b> Middle Mouse Click = Rally Spores <b>|</b> Ctrl Click = Create Shield Blob <b>|</b> Alt Click = Remove Blob")
+	to_chat(src, "Attempting to talk will send a message to all other overminds, allowing you to coordinate with them.")
 	if(!placed && autoplace_max_time <= world.time)
-		src << "<span class='big'><font color=\"#EE4000\">You will automatically place your blob core in [round((autoplace_max_time - world.time)/600, 0.5)] minutes.</font></span>"
-		src << "<span class='big'><font color=\"#EE4000\">You [manualplace_min_time ? "will be able to":"can"] manually place your blob core by pressing the Place Blob Core button in the bottom right corner of the screen.</font></span>"
+		to_chat(src, "<span class='big'><font color=\"#EE4000\">You will automatically place your blob core in [round((autoplace_max_time - world.time)/600, 0.5)] minutes.</font></span>")
+		to_chat(src, "<span class='big'><font color=\"#EE4000\">You [manualplace_min_time ? "will be able to":"can"] manually place your blob core by pressing the Place Blob Core button in the bottom right corner of the screen.</font></span>")
