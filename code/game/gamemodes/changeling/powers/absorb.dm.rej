diff a/code/game/gamemodes/changeling/powers/absorb.dm b/code/game/gamemodes/changeling/powers/absorb.dm	(rejected hunks)
@@ -12,14 +12,14 @@
 
 	var/datum/changeling/changeling = user.mind.changeling
 	if(changeling.isabsorbing)
-		user << "<span class='warning'>We are already absorbing!</span>"
+		to_chat(user, "<span class='warning'>We are already absorbing!</span>")
 		return
 
 	if(!user.pulling || !iscarbon(user.pulling))
-		user << "<span class='warning'>We must be grabbing a creature to absorb them!</span>"
+		to_chat(user, "<span class='warning'>We must be grabbing a creature to absorb them!</span>")
 		return
 	if(user.grab_state <= GRAB_NECK)
-		user << "<span class='warning'>We must have a tighter grip to absorb this creature!</span>"
+		to_chat(user, "<span class='warning'>We must have a tighter grip to absorb this creature!</span>")
 		return
 
 	var/mob/living/carbon/target = user.pulling
@@ -34,22 +34,22 @@
 	for(var/stage = 1, stage<=3, stage++)
 		switch(stage)
 			if(1)
-				user << "<span class='notice'>This creature is compatible. We must hold still...</span>"
+				to_chat(user, "<span class='notice'>This creature is compatible. We must hold still...</span>")
 			if(2)
 				user.visible_message("<span class='warning'>[user] extends a proboscis!</span>", "<span class='notice'>We extend a proboscis.</span>")
 			if(3)
 				user.visible_message("<span class='danger'>[user] stabs [target] with the proboscis!</span>", "<span class='notice'>We stab [target] with the proboscis.</span>")
-				target << "<span class='userdanger'>You feel a sharp stabbing pain!</span>"
+				to_chat(target, "<span class='userdanger'>You feel a sharp stabbing pain!</span>")
 				target.take_overall_damage(40)
 
 		feedback_add_details("changeling_powers","A[stage]")
 		if(!do_mob(user, target, 150))
-			user << "<span class='warning'>Our absorption of [target] has been interrupted!</span>"
+			to_chat(user, "<span class='warning'>Our absorption of [target] has been interrupted!</span>")
 			changeling.isabsorbing = 0
 			return
 
 	user.visible_message("<span class='danger'>[user] sucks the fluids from [target]!</span>", "<span class='notice'>We have absorbed [target].</span>")
-	target << "<span class='userdanger'>You are absorbed by the changeling!</span>"
+	to_chat(target, "<span class='userdanger'>You are absorbed by the changeling!</span>")
 
 	if(!changeling.has_dna(target.dna))
 		changeling.add_new_profile(target, user)
@@ -65,22 +65,24 @@
 		//Recent as opposed to all because rounds tend to have a LOT of text.
 		var/list/recent_speech = list()
 
-		if(target.say_log.len > LING_ABSORB_RECENT_SPEECH)
-			recent_speech = target.say_log.Copy(target.say_log.len-LING_ABSORB_RECENT_SPEECH+1,0) //0 so len-LING_ARS+1 to end of list
+		var/list/say_log = target.logging[INDIVIDUAL_SAY_LOG]
+
+		if(LAZYLEN(say_log) > LING_ABSORB_RECENT_SPEECH)
+			recent_speech = say_log.Copy(say_log.len-LING_ABSORB_RECENT_SPEECH+1,0) //0 so len-LING_ARS+1 to end of list
 		else
-			for(var/spoken_memory in target.say_log)
+			for(var/spoken_memory in say_log)
 				if(recent_speech.len >= LING_ABSORB_RECENT_SPEECH)
 					break
-				recent_speech[spoken_memory] = target.say_log[spoken_memory]
+				recent_speech[spoken_memory] = say_log[spoken_memory]
 
 		if(recent_speech.len)
 			user.mind.store_memory("<B>Some of [target]'s speech patterns, we should study these to better impersonate them!</B>")
-			user << "<span class='boldnotice'>Some of [target]'s speech patterns, we should study these to better impersonate them!</span>"
+			to_chat(user, "<span class='boldnotice'>Some of [target]'s speech patterns, we should study these to better impersonate them!</span>")
 			for(var/spoken_memory in recent_speech)
 				user.mind.store_memory("\"[recent_speech[spoken_memory]]\"")
-				user << "<span class='notice'>\"[recent_speech[spoken_memory]]\"</span>"
+				to_chat(user, "<span class='notice'>\"[recent_speech[spoken_memory]]\"</span>")
 			user.mind.store_memory("<B>We have no more knowledge of [target]'s speech patterns.</B>")
-			user << "<span class='boldnotice'>We have no more knowledge of [target]'s speech patterns.</span>"
+			to_chat(user, "<span class='boldnotice'>We have no more knowledge of [target]'s speech patterns.</span>")
 
 		if(target.mind.changeling)//If the target was a changeling, suck out their extra juice and objective points!
 			changeling.chem_charges += min(target.mind.changeling.chem_charges, changeling.chem_storage)
