diff a/code/game/gamemodes/malfunction/Malf_Modules.dm b/code/game/gamemodes/malfunction/Malf_Modules.dm	(rejected hunks)
@@ -18,7 +18,7 @@
 /datum/AI_Module/large/nuke_station
 	module_name = "Doomsday Device"
 	mod_pick_name = "nukestation"
-	description = "Activate a weapon that will disintegrate all organic life on the station after a 450 second delay."
+	description = "Activate a weapon that will disintegrate all organic life on the station after a 450 second delay. Can only be used while on the station, will fail if your core is moved off station or destroyed."
 	cost = 130
 	one_time = 1
 
@@ -28,11 +28,13 @@
 	set category = "Malfunction"
 	set name = "Doomsday Device"
 
-	for(var/N in nuke_tiles)
-		var/turf/T = N
-		T.icon_state = "rcircuitanim" //This causes all blue "circuit" tiles on the map to change to animated red icon state.
+	var/turf/T = get_turf(src)
+
+	if(!istype(T) || T.z != ZLEVEL_STATION)
+		to_chat(src, "<span class='warning'>You cannot activate the doomsday device while off-station!</span>")
+		return
 
-	src << "<span class='notice'>Nuclear device armed.</span>"
+	to_chat(src, "<span class='notice'>Doomsday device armed.</span>")
 	priority_announce("Hostile runtimes detected in all station systems, please deactivate your AI to prevent possible damage to its morality core.", "Anomaly Alert", 'sound/AI/aimalf.ogg')
 	set_security_level("delta")
 	nuking = 1
@@ -67,6 +69,7 @@
 		countdown = null
 	STOP_PROCESSING(SSfastprocess, src)
 	SSshuttle.clearHostileEnvironment(src)
+	SSmapping.remove_nuke_threat(src)
 	for(var/A in ai_list)
 		var/mob/living/silicon/ai/Mlf = A
 		if(Mlf.doomsday_device == src)
@@ -79,6 +82,7 @@
 	countdown.start()
 	START_PROCESSING(SSfastprocess, src)
 	SSshuttle.registerHostileEnvironment(src)
+	SSmapping.add_nuke_threat(src) //This causes all blue "circuit" tiles on the map to change to animated red icon state.
 
 /obj/machinery/doomsday_device/proc/seconds_remaining()
 	. = max(0, (round((detonation_timer - world.time) / 10)))
@@ -96,7 +100,6 @@
 	if(sec_left <= 0)
 		timing = FALSE
 		detonate(T.z)
-		qdel(src)
 	else
 		var/key = num2text(sec_left)
 		if(!(sec_left % 60) && !(key in milestones))
@@ -114,9 +117,9 @@
 			continue
 		if(issilicon(L))
 			continue
-		L << "<span class='danger'><B>The blast wave from the [src] tears you atom from atom!</B></span>"
+		to_chat(L, "<span class='userdanger'>The blast wave from [src] tears you atom from atom!</span>")
 		L.dust()
-	world << "<B>The AI cleansed the station of life with the doomsday device!</B>"
+	to_chat(world, "<B>The AI cleansed the station of life with the doomsday device!</B>")
 	ticker.force_ending = 1
 
 /datum/AI_Module/large/upgrade_turrets
@@ -141,7 +144,7 @@
 		turret.obj_integrity += 30
 		turret.lethal_projectile = /obj/item/projectile/beam/laser/heavylaser //Once you see it, you will know what it means to FEAR.
 		turret.lethal_projectile_sound = 'sound/weapons/lasercannonfire.ogg'
-	src << "<span class='notice'>Turrets upgraded.</span>"
+	to_chat(src, "<span class='notice'>Turrets upgraded.</span>")
 
 /datum/AI_Module/large/lockdown
 	module_name = "Hostile Station Lockdown"
@@ -162,8 +165,8 @@
 	for(var/obj/machinery/door/D in airlocks)
 		if(D.z != ZLEVEL_STATION)
 			continue
-		addtimer(D, "hostile_lockdown", 0, TIMER_NORMAL, src)
-		addtimer(D, "disable_lockdown", 900)
+		INVOKE_ASYNC(D, /obj/machinery/door.proc/hostile_lockdown, src)
+		addtimer(CALLBACK(D, /obj/machinery/door.proc/disable_lockdown), 900)
 
 	var/obj/machinery/computer/communications/C = locate() in machines
 	if(C)
@@ -171,10 +174,10 @@
 
 	verbs -= /mob/living/silicon/ai/proc/lockdown
 	minor_announce("Hostile runtime detected in door controllers. Isolation Lockdown protocols are now in effect. Please remain calm.","Network Alert:", 1)
-	src << "<span class = 'warning'>Lockdown Initiated. Network reset in 90 seconds.</span>"
-	addtimer(GLOBAL_PROC, "minor_announce", 900, TIMER_NORMAL,
+	to_chat(src, "<span class = 'warning'>Lockdown Initiated. Network reset in 90 seconds.</span>")
+	addtimer(CALLBACK(GLOBAL_PROC, .proc/minor_announce,
 		"Automatic system reboot complete. Have a secure day.",
-		"Network reset:")
+		"Network reset:"), 900)
 
 /datum/AI_Module/large/destroy_rcd
 	module_name = "Destroy RCDs"
@@ -198,7 +201,7 @@
 			var/obj/item/weapon/rcd/RCD = I
 			RCD.detonate_pulse()
 
-	src << "<span class='warning'>RCD detonation pulse emitted.</span>"
+	to_chat(src, "<span class='warning'>RCD detonation pulse emitted.</span>")
 	malf_cooldown = 1
 	spawn(100)
 		malf_cooldown = 0
@@ -220,7 +223,7 @@
 	if(stat)
 		return
 	can_dominate_mechs = 1 //Yep. This is all it does. Honk!
-	src << "Virus package compiled. Select a target mech at any time. <b>You must remain on the station at all times. Loss of signal will result in total system lockout.</b>"
+	to_chat(src, "Virus package compiled. Select a target mech at any time. <b>You must remain on the station at all times. Loss of signal will result in total system lockout.</b>")
 	verbs -= /mob/living/silicon/ai/proc/mech_takeover
 
 /datum/AI_Module/large/break_fire_alarms
@@ -244,7 +247,7 @@
 		if(F.z != ZLEVEL_STATION)
 			continue
 		F.emagged = 1
-	src << "<span class='notice'>All thermal sensors on the station have been disabled. Fire alerts will no longer be recognized.</span>"
+	to_chat(src, "<span class='notice'>All thermal sensors on the station have been disabled. Fire alerts will no longer be recognized.</span>")
 	src.verbs -= /mob/living/silicon/ai/proc/break_fire_alarms
 
 /datum/AI_Module/large/break_air_alarms
@@ -268,7 +271,7 @@
 		if(AA.z != ZLEVEL_STATION)
 			continue
 		AA.emagged = 1
-	src << "<span class='notice'>All air alarm safeties on the station have been overriden. Air alarms may now use the Flood environmental mode."
+	to_chat(src, "<span class='notice'>All air alarm safeties on the station have been overriden. Air alarms may now use the Flood environmental mode.")
 	src.verbs -= /mob/living/silicon/ai/proc/break_air_alarms
 
 /datum/AI_Module/small/overload_machine
@@ -291,14 +294,14 @@
 		for(var/datum/AI_Module/small/overload_machine/overload in current_modules)
 			if(overload.uses > 0)
 				overload.uses --
-				audible_message("<span class='userdanger'>You hear a loud electrical buzzing sound coming from [M]!</span>")
-				src << "<span class='warning'>Overloading machine circuitry...</span>"
+				M.audible_message("<span class='userdanger'>You hear a loud electrical buzzing sound coming from [M]!</span>")
+				to_chat(src, "<span class='warning'>Overloading machine circuitry...</span>")
 				spawn(50)
 					if(M)
 						explosion(get_turf(M), 0,2,3,0)
 						qdel(M)
-			else src << "<span class='notice'>Out of uses.</span>"
-	else src << "<span class='notice'>That's not a machine.</span>"
+			else to_chat(src, "<span class='notice'>Out of uses.</span>")
+	else to_chat(src, "<span class='notice'>That's not a machine.</span>")
 
 /datum/AI_Module/small/override_machine
 	module_name = "Machine Override"
@@ -319,17 +322,17 @@
 
 	if (istype(M, /obj/machinery))
 		if(!M.can_be_overridden())
-			src << "Can't override this device."
+			to_chat(src, "Can't override this device.")
 		for(var/datum/AI_Module/small/override_machine/override in current_modules)
 			if(override.uses > 0)
 				override.uses --
-				audible_message("<span class='italics'>You hear a loud electrical buzzing sound!</span>")
-				src << "<span class='warning'>Reprogramming machine behaviour...</span>"
+				M.audible_message("<span class='userdanger'>You hear a loud electrical buzzing sound!</span>")
+				to_chat(src, "<span class='warning'>Reprogramming machine behaviour...</span>")
 				spawn(50)
-					if(M && !qdeleted(M))
+					if(M && !QDELETED(M))
 						new /mob/living/simple_animal/hostile/mimic/copy/machine(get_turf(M), M, src, 1)
-			else src << "<span class='notice'>Out of uses.</span>"
-	else src << "<span class='notice'>That's not a machine.</span>"
+			else to_chat(src, "<span class='notice'>Out of uses.</span>")
+	else to_chat(src, "<span class='notice'>That's not a machine.</span>")
 
 /datum/AI_Module/large/place_cyborg_transformer
 	module_name = "Robotic Factory (Removes Shunting)"
@@ -360,7 +363,7 @@
 		var/datum/AI_Module/large/place_cyborg_transformer/PCT = locate() in current_modules
 		PCT.uses --
 		can_shunt = 0
-		src << "<span class='warning'>You cannot shunt anymore.</span>"
+		to_chat(src, "<span class='warning'>You cannot shunt anymore.</span>")
 
 /mob/living/silicon/ai/proc/canPlaceTransformer()
 	if(!eyeobj || !isturf(src.loc) || !canUseTopic())
@@ -424,8 +427,8 @@
 				if(prob(30*apc.overload))
 					apc.overload_lighting()
 				else apc.overload++
-			src << "<span class='notice'>Overcurrent applied to the powernet.</span>"
-		else src << "<span class='notice'>Out of uses.</span>"
+			to_chat(src, "<span class='notice'>Overcurrent applied to the powernet.</span>")
+		else to_chat(src, "<span class='notice'>Out of uses.</span>")
 
 /datum/AI_Module/small/reactivate_cameras
 	module_name = "Reactivate Camera Network"
@@ -459,10 +462,10 @@
 					fixedcams++
 					//If a camera is both deactivated and has bad focus, it will cost two uses to fully fix!
 			else
-				src << "<span class='warning'>Out of uses.</span>"
+				to_chat(src, "<span class='warning'>Out of uses.</span>")
 				verbs -= /mob/living/silicon/ai/proc/reactivate_cameras //It is useless now, clean it up.
 				break
-	src << "<span class='notice'>Diagnostic complete! Operations completed: [fixedcams].</span>"
+	to_chat(src, "<span class='notice'>Diagnostic complete! Operations completed: [fixedcams].</span>")
 
 	malf_cooldown = 1
 	spawn(30) //Lag protection
@@ -506,7 +509,7 @@
 			if(upgraded)
 				upgradedcams++
 
-	src << "<span class='notice'>OTA firmware distribution complete! Cameras upgraded: [upgradedcams]. Light amplification system online.</span>"
+	to_chat(src, "<span class='notice'>OTA firmware distribution complete! Cameras upgraded: [upgradedcams]. Light amplification system online.</span>")
 	verbs -= /mob/living/silicon/ai/proc/upgrade_cameras
 
 /datum/module_picker
@@ -601,5 +604,5 @@
 
 	if(eyeobj)
 		eyeobj.relay_speech = TRUE
-	src << "<span class='notice'>OTA firmware distribution complete! Cameras upgraded: Enhanced surveillance package online.</span>"
+	to_chat(src, "<span class='notice'>OTA firmware distribution complete! Cameras upgraded: Enhanced surveillance package online.</span>")
 	verbs -= /mob/living/silicon/ai/proc/surveillance
