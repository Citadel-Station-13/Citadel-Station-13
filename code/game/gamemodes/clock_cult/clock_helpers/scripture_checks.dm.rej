diff a/code/game/gamemodes/clock_cult/clock_helpers/scripture_checks.dm b/code/game/gamemodes/clock_cult/clock_helpers/scripture_checks.dm	(rejected hunks)
@@ -1,12 +1,10 @@
 //returns a list of scriptures and if they're unlocked or not
 /proc/scripture_unlock_check()
 	var/servants = 0
-	var/unconverted_ai_exists = FALSE
+	var/unconverted_ai_exists = get_unconverted_ais()
 	for(var/mob/living/M in living_mob_list)
 		if(is_servant_of_ratvar(M) && (ishuman(M) || issilicon(M)))
 			servants++
-		else if(isAI(M))
-			unconverted_ai_exists = TRUE
 	. = list(SCRIPTURE_DRIVER = TRUE, SCRIPTURE_SCRIPT = FALSE, SCRIPTURE_APPLICATION = FALSE, SCRIPTURE_REVENANT = FALSE, SCRIPTURE_JUDGEMENT = FALSE)
 	//Drivers: always unlocked
 	.[SCRIPTURE_SCRIPT] = (servants >= SCRIPT_SERVANT_REQ && clockwork_caches >= SCRIPT_CACHE_REQ)
@@ -26,22 +24,35 @@
 			hierophant_message("<span class='large_brass'><i>Hierophant Network:</i> <b>[i] Scripture has been [.[i] ? "un":""]locked.</b></span>")
 			update_slab_info()
 
+/proc/get_unconverted_ais()
+	. = 0
+	for(var/ai in ai_list)
+		var/mob/living/silicon/AI = ai
+		if(is_servant_of_ratvar(AI) || !isturf(AI.loc) || AI.z != ZLEVEL_STATION || AI.stat == DEAD)
+			continue
+		.++
+
 /proc/update_slab_info(obj/item/clockwork/slab/set_slab)
 	generate_all_scripture()
+	var/needs_update = FALSE //if everything needs an update, for whatever reason
 	for(var/s in all_scripture)
-		var/datum/clockwork_scripture/S = s
-		S.creation_update()
-	if(!set_slab)
+		var/datum/clockwork_scripture/S = all_scripture[s]
+		if(S.creation_update())
+			needs_update = TRUE
+	if(!set_slab || needs_update)
 		for(var/obj/item/clockwork/slab/S in all_clockwork_objects)
 			SStgui.update_uis(S)
+			if(needs_update)
+				S.update_quickbind()
 	else
 		SStgui.update_uis(set_slab)
+		set_slab.update_quickbind()
 
 /proc/generate_all_scripture()
 	if(!all_scripture.len)
 		for(var/V in sortList(subtypesof(/datum/clockwork_scripture), /proc/cmp_clockscripture_priority))
 			var/datum/clockwork_scripture/S = new V
-			all_scripture += S
+			all_scripture[S.type] = S
 
 //changes construction value
 /proc/change_construction_value(amount)
