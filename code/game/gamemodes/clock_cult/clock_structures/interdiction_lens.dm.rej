diff a/code/game/gamemodes/clock_cult/clock_structures/interdiction_lens.dm b/code/game/gamemodes/clock_cult/clock_structures/interdiction_lens.dm	(rejected hunks)
@@ -8,32 +8,39 @@
 	active_icon = "interdiction_lens_active"
 	inactive_icon = "interdiction_lens"
 	unanchored_icon = "interdiction_lens_unwrenched"
-	break_message = "<span class='warning'>The lens flares a blinding violet before shattering!</span>"
+	break_message = "<span class='warning'>The lens flares a blinding violet before the totem beneath it shatters!</span>"
 	break_sound = 'sound/effects/Glassbr3.ogg'
+	debris = list(/obj/item/clockwork/alloy_shards/small = 2, \
+	/obj/item/clockwork/alloy_shards/large = 2, \
+	/obj/item/clockwork/component/belligerent_eye/lens_gem = 1)
 	var/recharging = 0 //world.time when the lens was last used
 	var/recharge_time = 1200 //if it drains no power and affects no objects, it turns off for two minutes
 	var/disabled = FALSE //if it's actually usable
 	var/interdiction_range = 14 //how large an area it drains and disables in
 	var/static/list/rage_messages = list("...", "Disgusting.", "Die.", "Foul.", "Worthless.", "Mortal.", "Unfit.", "Weak.", "Fragile.", "Useless.", "Leave my sight!")
 
+/obj/structure/destructible/clockwork/powered/interdiction_lens/New()
+	..()
+	set_light(1.4, 0.8, "#F42B9D")
+
 /obj/structure/destructible/clockwork/powered/interdiction_lens/examine(mob/user)
 	..()
-	user << "<span class='[recharging > world.time ? "neovgre_small":"brass"]'>Its gemstone [recharging > world.time ? "has been breached by writhing tendrils of blackness that cover the totem" \
-	: "vibrates in place and thrums with power"].</span>"
+	to_chat(user, "<span class='[recharging > world.time ? "neovgre_small":"brass"]'>Its gemstone [recharging > world.time ? "has been breached by writhing tendrils of blackness that cover the totem" \
+	: "vibrates in place and thrums with power"].</span>")
 	if(is_servant_of_ratvar(user) || isobserver(user))
-		user << "<span class='neovgre_small'>If it fails to drain any electronics, it will disable itself for <b>[round(recharge_time/600, 1)]</b> minutes.</span>"
+		to_chat(user, "<span class='neovgre_small'>If it fails to drain any electronics or has nothing to return power to, it will disable itself for <b>[round(recharge_time/600, 1)]</b> minutes.</span>")
 
 /obj/structure/destructible/clockwork/powered/interdiction_lens/toggle(fast_process, mob/living/user)
 	. = ..()
 	if(active)
-		SetLuminosity(4, 2)
+		set_light(2, 1.6, "#EE54EE")
 	else
-		SetLuminosity(0)
+		set_light(1.4, 0.8, "#F42B9D")
 
 /obj/structure/destructible/clockwork/powered/interdiction_lens/attack_hand(mob/living/user)
-	if(user.canUseTopic(src, !issilicon(user)))
+	if(user.canUseTopic(src, !issilicon(user), NO_DEXTERY))
 		if(disabled)
-			user << "<span class='warning'>As you place your hand on the gemstone, cold tendrils of black matter crawl up your arm. You quickly pull back.</span>"
+			to_chat(user, "<span class='warning'>As you place your hand on the gemstone, cold tendrils of black matter crawl up your arm. You quickly pull back.</span>")
 			return 0
 		toggle(0, user)
 
@@ -46,7 +53,7 @@
 	recharging = world.time + recharge_time
 	flick("interdiction_lens_discharged", src)
 	icon_state = "interdiction_lens_inactive"
-	SetLuminosity(2,1)
+	set_light(2, 1.6, "#151200")
 	disabled = TRUE
 	return TRUE
 
@@ -60,6 +67,9 @@
 		disabled = FALSE
 		toggle(0)
 	else
+		if(!check_apc_and_sigils())
+			forced_disable()
+			return
 		var/successfulprocess = FALSE
 		var/power_drained = 0
 		var/list/atoms_to_test = list()
@@ -81,12 +91,12 @@
 
 		for(var/M in atoms_to_test)
 			var/atom/movable/A = M
-			if(!A || qdeleted(A) || A == target_apc)
+			if(!A || QDELETED(A) || A == target_apc)
 				continue
-			power_drained += (A.power_drain(TRUE) * efficiency)
+			power_drained += Floor(A.power_drain(TRUE) * efficiency, MIN_CLOCKCULT_POWER)
 
 			if(prob(1 * rage_modifier))
-				A << "<span class='neovgre'>\"[text2ratvar(pick(rage_messages))]\"</span>"
+				to_chat(A, "<span class='neovgre'>\"[text2ratvar(pick(rage_messages))]\"</span>")
 
 			if(prob(100 * (efficiency * efficiency)))
 				if(istype(A, /obj/machinery/camera) && unconverted_ai)
