diff a/code/game/gamemodes/clock_cult/clock_structures/tinkerers_daemon.dm b/code/game/gamemodes/clock_cult/clock_structures/tinkerers_daemon.dm	(rejected hunks)
@@ -10,10 +10,10 @@
 	max_integrity = 100
 	obj_integrity = 100
 	construction_value = 20
-	break_message = "<span class='warning'>The daemon shatters into millions of pieces!</span>"
-	debris = list(/obj/item/clockwork/alloy_shards/large = 2, \
-	/obj/item/clockwork/alloy_shards/medium = 4, \
-	/obj/item/clockwork/alloy_shards/small = 6)
+	break_message = "<span class='warning'>The daemon shatters into millions of pieces, leaving only a disc of metal!</span>"
+	debris = list(/obj/item/clockwork/alloy_shards/medium = 1, \
+	/obj/item/clockwork/alloy_shards/small = 6, \
+	/obj/item/clockwork/component/replicant_alloy/replication_plate = 1)
 	var/image/daemon_glow
 	var/image/component_glow
 	var/component_id_to_produce
@@ -28,22 +28,32 @@
 	clockwork_daemons--
 	return ..()
 
+/obj/structure/destructible/clockwork/powered/tinkerers_daemon/ratvar_act()
+	..()
+	if(nezbere_invoked)
+		production_time = 0
+		production_cooldown = initial(production_cooldown) * 0.5
+		if(!active)
+			toggle(0)
+	else
+		production_cooldown = initial(production_cooldown)
+
 /obj/structure/destructible/clockwork/powered/tinkerers_daemon/examine(mob/user)
 	..()
 	if(is_servant_of_ratvar(user) || isobserver(user))
 		if(active)
 			if(component_id_to_produce)
-				user << "<span class='[get_component_span(component_id_to_produce)]_small'>It is currently producing [get_component_name(component_id_to_produce)][component_id_to_produce != REPLICANT_ALLOY ? "s":""].</span>"
+				to_chat(user, "<span class='[get_component_span(component_id_to_produce)]_small'>It is currently producing [get_component_name(component_id_to_produce)][component_id_to_produce != REPLICANT_ALLOY ? "s":""].</span>")
 			else
-				user << "<span class='brass'>It is currently producing random components.</span>"
-		user << "<span class='nezbere_small'>It will produce a component every <b>[round((production_cooldown*0.1) * get_efficiency_mod(TRUE), 0.1)]</b> seconds and requires at least the following power for each component type:</span>"
+				to_chat(user, "<span class='brass'>It is currently producing random components.</span>")
+		to_chat(user, "<span class='nezbere_small'>It will produce a component every <b>[round((production_cooldown*0.1) * get_efficiency_mod(TRUE), 0.1)]</b> seconds and requires at least the following power for each component type:</span>")
 		for(var/i in clockwork_component_cache)
-			user << "<span class='[get_component_span(i)]_small'><i>[get_component_name(i)]:</i> <b>[get_component_cost(i)]W</b> <i>([clockwork_component_cache[i]] exist[clockwork_component_cache[i] == 1 ? "s" : ""])</i></span>"
+			to_chat(user, "<span class='[get_component_span(i)]_small'><i>[get_component_name(i)]:</i> <b>[get_component_cost(i)]W</b> <i>([clockwork_component_cache[i]] exist[clockwork_component_cache[i] == 1 ? "s" : ""])</i></span>")
 
 /obj/structure/destructible/clockwork/powered/tinkerers_daemon/forced_disable(bad_effects)
 	if(active)
 		if(bad_effects)
-			try_use_power(MIN_CLOCKCULT_POWER*2)
+			try_use_power(MIN_CLOCKCULT_POWER*4)
 			visible_message("<span class='warning'>[src] shuts down with a horrible grinding noise!</span>")
 			playsound(src, 'sound/magic/clockwork/anima_fragment_attack.ogg', 50, 1)
 		else
@@ -53,23 +63,23 @@
 
 /obj/structure/destructible/clockwork/powered/tinkerers_daemon/attack_hand(mob/living/user)
 	if(!is_servant_of_ratvar(user))
-		user << "<span class='warning'>You place your hand on the daemon, but nothing happens.</span>"
+		to_chat(user, "<span class='warning'>You place your hand on the daemon, but nothing happens.</span>")
 		return
 	if(active)
 		toggle(0, user)
 	else
 		if(!anchored)
-			user << "<span class='warning'>[src] needs to be secured to the floor before it can be activated!</span>"
+			to_chat(user, "<span class='warning'>[src] needs to be secured to the floor before it can be activated!</span>")
 			return FALSE
 		var/servants = 0
 		for(var/mob/living/L in living_mob_list)
 			if(is_servant_of_ratvar(L))
 				servants++
 		if(servants * 0.2 < clockwork_daemons)
-			user << "<span class='nezbere'>\"There are too few servants for this daemon to work.\"</span>"
+			to_chat(user, "<span class='nezbere'>\"There are too few servants for this daemon to work.\"</span>")
 			return
 		if(!clockwork_caches)
-			user << "<span class='nezbere'>\"You require a cache for this daemon to operate. Get to it.\"</span>"
+			to_chat(user, "<span class='nezbere'>\"You require a cache for this daemon to operate. Get to it.\"</span>")
 			return
 		var/min_power_usable = 0
 		for(var/i in clockwork_component_cache)
@@ -78,7 +88,7 @@
 			else
 				min_power_usable = min(min_power_usable, get_component_cost(i))
 		if(total_accessable_power() < min_power_usable)
-			user << "<span class='nezbere'>\"You need more power to activate this daemon, friend.\"</span>"
+			to_chat(user, "<span class='nezbere'>\"You need more power to activate this daemon, friend.\"</span>")
 			return
 		var/choice = alert(user,"Activate Daemon...",,"Specific Component","Random Component","Cancel")
 		switch(choice)
@@ -92,13 +102,13 @@
 				for(var/mob/living/L in living_mob_list)
 					if(is_servant_of_ratvar(L))
 						servants++
-				if(!is_servant_of_ratvar(user) || !user.canUseTopic(src, !issilicon(user)) || active || !clockwork_caches || servants * 0.2 < clockwork_daemons)
+				if(!is_servant_of_ratvar(user) || !user.canUseTopic(src, !issilicon(user), NO_DEXTERY) || active || !clockwork_caches || servants * 0.2 < clockwork_daemons)
 					return
 				if(!component_id_to_produce)
-					user << "<span class='warning'>You decide not to select a component and activate the daemon.</span>"
+					to_chat(user, "<span class='warning'>You decide not to select a component and activate the daemon.</span>")
 					return
 				if(total_accessable_power() < get_component_cost(component_id_to_produce))
-					user << "<span class='warning'>There is too little power to produce this type of component!</span>"
+					to_chat(user, "<span class='warning'>There is too little power to produce this type of component!</span>")
 					return
 				toggle(0, user)
 			if("Random Component")
@@ -120,13 +130,13 @@
 		component_glow.color = component_color
 		add_overlay(component_glow)
 		production_time = world.time + production_cooldown //don't immediately produce when turned on after being off
-		SetLuminosity(2, 1)
+		set_light(2, 0.9, get_component_color_bright(component_id_to_produce))
 	else
 		cut_overlays()
-		SetLuminosity(0)
+		set_light(0)
 
 /obj/structure/destructible/clockwork/powered/tinkerers_daemon/proc/get_component_cost(id)
-	return max(MIN_CLOCKCULT_POWER, MIN_CLOCKCULT_POWER * (1 + round(clockwork_component_cache[id] * 0.2)))
+	return max(MIN_CLOCKCULT_POWER*2, (MIN_CLOCKCULT_POWER*2) * (1 + round(clockwork_component_cache[id] * 0.2)))
 
 /obj/structure/destructible/clockwork/powered/tinkerers_daemon/process()
 	var/servants = 0
@@ -160,6 +170,6 @@
 		if(component_to_generate)
 			generate_cache_component(component_to_generate, src)
 			production_time = world.time + (production_cooldown * get_efficiency_mod(TRUE)) //go on cooldown
-			visible_message("<span class='warning'>[src] hums as it produces a [get_component_name(component_to_generate)].</span>")
+			visible_message("<span class='warning'>[src] hums as it produces a </span><span class='[get_component_span(component_to_generate)]'>component</span><span class='warning'>.</span>")
 		else
 			forced_disable(FALSE) //we shouldn't actually ever get here, as we should cancel out way before this
