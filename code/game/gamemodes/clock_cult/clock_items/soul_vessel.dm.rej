diff a/code/game/gamemodes/clock_cult/clock_items/soul_vessel.dm b/code/game/gamemodes/clock_cult/clock_items/soul_vessel.dm	(rejected hunks)
@@ -29,6 +29,7 @@
 	laws = new /datum/ai_laws/ratvar()
 	braintype = picked_fluff_name
 	all_clockwork_objects += src
+	brainmob.languages_spoken = RATVAR
 
 /obj/item/device/mmi/posibrain/soul_vessel/Destroy()
 	all_clockwork_objects -= src
@@ -47,40 +48,44 @@
 
 /obj/item/device/mmi/posibrain/soul_vessel/attack_self(mob/living/user)
 	if(!is_servant_of_ratvar(user))
-		user << "<span class='warning'>You fiddle around with [src], to no avail.</span>"
+		to_chat(user, "<span class='warning'>You fiddle around with [src], to no avail.</span>")
 		return 0
 	..()
 
 /obj/item/device/mmi/posibrain/soul_vessel/attack(mob/living/target, mob/living/carbon/human/user)
-	if(!is_servant_of_ratvar(user) || !ishuman(target) || used || (brainmob && brainmob.key))
+	if(!is_servant_of_ratvar(user) || !ishuman(target))
 		..()
+		return
+	if(used || (brainmob && brainmob.key))
+		to_chat(user, "<span class='nezbere'>\"This vessel is filled, friend. Provide it with a body.\"</span>")
+		return
 	if(is_servant_of_ratvar(target))
-		user << "<span class='nezbere'>\"It would be more wise to revive your allies, friend.\"</span>"
+		to_chat(user, "<span class='nezbere'>\"It would be more wise to revive your allies, friend.\"</span>")
 		return
 	var/mob/living/carbon/human/H = target
-	var/obj/item/bodypart/head/HE = H.get_bodypart("head")
-	var/obj/item/organ/brain/B = H.getorgan(/obj/item/organ/brain)
-	if(!HE)
-		user << "<span class='warning'>[H] has no head, and thus no mind!</span>"
-		return
 	if(H.stat == CONSCIOUS)
-		user << "<span class='warning'>[H] must be dead or unconscious for you to claim [H.p_their()] mind!</span>"
+		to_chat(user, "<span class='warning'>[H] must be dead or unconscious for you to claim [H.p_their()] mind!</span>")
 		return
 	if(H.head)
 		var/obj/item/I = H.head
-		if(I.flags_inv & HIDEHAIR)
-			user << "<span class='warning'>[H]'s head is covered, remove [H.head] first!</span>"
+		if(I.flags_inv & HIDEHAIR) //they're wearing a hat that covers their skull
+			to_chat(user, "<span class='warning'>[H]'s head is covered, remove [H.head] first!</span>")
 			return
 	if(H.wear_mask)
 		var/obj/item/I = H.wear_mask
-		if(I.flags_inv & HIDEHAIR)
-			user << "<span class='warning'>[H]'s head is covered, remove [H.wear_mask] first!</span>"
+		if(I.flags_inv & HIDEHAIR) //they're wearing a mask that covers their skull
+			to_chat(user, "<span class='warning'>[H]'s head is covered, remove [H.wear_mask] first!</span>")
 			return
-	if(!B)
-		user << "<span class='warning'>[H] has no brain, and thus no mind to claim!</span>"
+	var/obj/item/bodypart/head/HE = H.get_bodypart("head")
+	if(!HE) //literally headless
+		to_chat(user, "<span class='warning'>[H] has no head, and thus no mind to claim!</span>")
+		return
+	var/obj/item/organ/brain/B = H.getorgan(/obj/item/organ/brain)
+	if(!B) //either somebody already got to them or robotics did
+		to_chat(user, "<span class='warning'>[H] has no brain, and thus no mind to claim!</span>")
 		return
-	if(!H.key)
-		user << "<span class='warning'>[H] has no mind to claim!</span>"
+	if(!H.key) //nobody's home
+		to_chat(user, "<span class='warning'>[H] has no mind to claim!</span>")
 		return
 	playsound(H, 'sound/misc/splort.ogg', 60, 1, -1)
 	playsound(H, 'sound/magic/clockwork/anima_fragment_attack.ogg', 40, 1, -1)
@@ -89,6 +94,7 @@
 	H.death()
 	if(!prev_fakedeath)
 		H.status_flags &= ~FAKEDEATH
+	H.apply_status_effect(STATUS_EFFECT_SIGILMARK) //let them be affected by vitality matrices
 	picked_fluff_name = "Slave"
 	braintype = picked_fluff_name
 	brainmob.timeofhostdeath = H.timeofdeath
