diff a/code/game/objects/buckling.dm b/code/game/objects/buckling.dm	(rejected hunks)
@@ -38,20 +38,31 @@
 		return TRUE
 
 //procs that handle the actual buckling and unbuckling
-/atom/movable/proc/buckle_mob(mob/living/M, force = 0)
+/atom/movable/proc/buckle_mob(mob/living/M, force = 0, check_loc = 1)
 	if(!buckled_mobs)
 		buckled_mobs = list()
-	if((!can_buckle && !force) || !istype(M) || (M.loc != loc) || M.buckled || (buckled_mobs.len >= max_buckled_mobs) || (buckle_requires_restraints && !M.restrained()) || M == src)
+
+	if(!istype(M))
+		return 0
+
+	if(check_loc && M.loc != loc)
+		return 0
+
+	if((!can_buckle && !force) || M.buckled || (buckled_mobs.len >= max_buckled_mobs) || (buckle_requires_restraints && !M.restrained()) || M == src)
 		return 0
 	if(!M.can_buckle() && !force)
 		if(M == usr)
-			M << "<span class='warning'>You are unable to buckle yourself to the [src]!</span>"
+			to_chat(M, "<span class='warning'>You are unable to buckle yourself to the [src]!</span>")
 		else
-			usr << "<span class='warning'>You are unable to buckle [M] to the [src]!</span>"
+			to_chat(usr, "<span class='warning'>You are unable to buckle [M] to the [src]!</span>")
 		return 0
 
 	if(M.pulledby && buckle_prevents_pull)
 		M.pulledby.stop_pulling()
+
+	if(!check_loc && M.loc != loc)
+		M.forceMove(loc)
+
 	M.buckled = src
 	M.setDir(dir)
 	buckled_mobs |= M
@@ -61,7 +72,7 @@
 
 	return 1
 
-/obj/buckle_mob(mob/living/M, force = 0)
+/obj/buckle_mob(mob/living/M, force = 0, check_loc = 1)
 	. = ..()
 	if(.)
 		if(resistance_flags & ON_FIRE) //Sets the mob on fire if you buckle them to a burning atom/movableect
@@ -92,13 +103,13 @@
 
 
 //Wrapper procs that handle sanity and user feedback
-/atom/movable/proc/user_buckle_mob(mob/living/M, mob/user)
+/atom/movable/proc/user_buckle_mob(mob/living/M, mob/user, check_loc = 1)
 	if(!in_range(user, src) || user.stat || user.restrained())
 		return 0
 
 	add_fingerprint(user)
 
-	if(buckle_mob(M))
+	if(buckle_mob(M, check_loc = check_loc))
 		if(M == user)
 			M.visible_message(\
 				"<span class='notice'>[M] buckles [M.p_them()]self to [src].</span>",\
