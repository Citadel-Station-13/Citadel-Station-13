diff a/code/game/objects/items/apc_frame.dm b/code/game/objects/items/apc_frame.dm	(rejected hunks)
@@ -8,37 +8,37 @@
 	var/inverse = 0
 	// For inverse dir frames like light fixtures.
 
-/obj/item/wallframe/proc/try_build(turf/on_wall)
-	if(get_dist(on_wall,usr)>1)
+/obj/item/wallframe/proc/try_build(turf/on_wall, mob/user)
+	if(get_dist(on_wall,user)>1)
 		return
-	var/ndir = get_dir(on_wall, usr)
+	var/ndir = get_dir(on_wall, user)
 	if(!(ndir in cardinal))
 		return
-	var/turf/loc = get_turf(usr)
-	var/area/A = loc.loc
-	if(!isfloorturf(loc))
-		usr << "<span class='warning'>You cannot place [src] on this spot!</span>"
+	var/turf/T = get_turf(user)
+	var/area/A = get_area(T)
+	if(!isfloorturf(T))
+		to_chat(user, "<span class='warning'>You cannot place [src] on this spot!</span>")
 		return
-	if(A.requires_power == 0 || istype(A, /area/space))
-		usr << "<span class='warning'>You cannot place [src] in this area!</span>"
+	if(A.always_unpowered)
+		to_chat(user, "<span class='warning'>You cannot place [src] in this area!</span>")
 		return
-	if(gotwallitem(loc, ndir, inverse*2))
-		usr << "<span class='warning'>There's already an item on this wall!</span>"
+	if(gotwallitem(T, ndir, inverse*2))
+		to_chat(user, "<span class='warning'>There's already an item on this wall!</span>")
 		return
 
-	return 1
+	return TRUE
 
-/obj/item/wallframe/proc/attach(turf/on_wall)
+/obj/item/wallframe/proc/attach(turf/on_wall, mob/user)
 	if(result_path)
 		playsound(src.loc, 'sound/machines/click.ogg', 75, 1)
-		usr.visible_message("[usr.name] attaches [src] to the wall.",
+		user.visible_message("[user.name] attaches [src] to the wall.",
 			"<span class='notice'>You attach [src] to the wall.</span>",
 			"<span class='italics'>You hear clicking.</span>")
-		var/ndir = get_dir(on_wall,usr)
+		var/ndir = get_dir(on_wall,user)
 		if(inverse)
 			ndir = turn(ndir, 180)
 
-		var/obj/O = new result_path(get_turf(usr), ndir, 1)
+		var/obj/O = new result_path(get_turf(user), ndir, 1)
 		after_attach(O)
 
 	qdel(src)
@@ -58,7 +58,7 @@
 	var/glass_amt = round(materials[MAT_GLASS]/MINERAL_MATERIAL_AMOUNT)
 
 	if(istype(W, /obj/item/weapon/wrench) && (metal_amt || glass_amt))
-		user << "<span class='notice'>You dismantle [src].</span>"
+		to_chat(user, "<span class='notice'>You dismantle [src].</span>")
 		if(metal_amt)
 			new /obj/item/stack/sheet/metal(get_turf(src), metal_amt)
 		if(glass_amt)
@@ -77,24 +77,27 @@
 	inverse = 1
 
 
-/obj/item/wallframe/apc/try_build(turf/on_wall)
+/obj/item/wallframe/apc/try_build(turf/on_wall, user)
 	if(!..())
 		return
-	var/turf/loc = get_turf(usr)
-	var/area/A = loc.loc
-	if (A.get_apc())
-		usr << "<span class='warning'>This area already has APC!</span>"
+	var/turf/T = get_turf(user)
+	var/area/A = get_area(T)
+	if(A.get_apc())
+		to_chat(user, "<span class='warning'>This area already has an APC!</span>")
 		return //only one APC per area
-	for(var/obj/machinery/power/terminal/T in loc)
-		if (T.master)
-			usr << "<span class='warning'>There is another network terminal here!</span>"
+	if(!A.requires_power)
+		to_chat(user, "<span class='warning'>You cannot place [src] in this area!</span>")
+		return //can't place apcs in areas with no power requirement
+	for(var/obj/machinery/power/terminal/E in T)
+		if(E.master)
+			to_chat(user, "<span class='warning'>There is another network terminal here!</span>")
 			return
 		else
-			var/obj/item/stack/cable_coil/C = new /obj/item/stack/cable_coil(loc)
+			var/obj/item/stack/cable_coil/C = new /obj/item/stack/cable_coil(T)
 			C.amount = 10
-			usr << "<span class='notice'>You cut the cables and disassemble the unused power terminal.</span>"
-			qdel(T)
-	return 1
+			to_chat(user, "<span class='notice'>You cut the cables and disassemble the unused power terminal.</span>")
+			qdel(E)
+	return TRUE
 
 
 /obj/item/weapon/electronics
