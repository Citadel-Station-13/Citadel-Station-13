diff a/code/game/objects/items/weapons/sharpener.dm b/code/game/objects/items/weapons/sharpener.dm	(rejected hunks)
@@ -12,28 +12,31 @@
 
 /obj/item/weapon/sharpener/attackby(obj/item/I, mob/user, params)
 	if(used)
-		user << "<span class='notice'>The sharpening block is too worn to use again.</span>"
+		to_chat(user, "<span class='notice'>The sharpening block is too worn to use again.</span>")
 		return
 	if(I.force >= max || I.throwforce >= max)//no esword sharpening
-		user << "<span class='notice'>[I] is much too powerful to sharpen further.</span>"
+		to_chat(user, "<span class='notice'>[I] is much too powerful to sharpen further.</span>")
 		return
 	if(requires_sharpness && !I.sharpness)
-		user << "<span class='notice'>You can only sharpen items that are already sharp, such as knives.</span>"
+		to_chat(user, "<span class='notice'>You can only sharpen items that are already sharp, such as knives.</span>")
+		return
+	if(istype(I, /obj/item/weapon/melee/energy))
+		to_chat(user, "<span class='notice'>You don't think \the [I] will be the thing getting modified if you use it on \the [src].</span>")
 		return
 	if(istype(I, /obj/item/weapon/twohanded))//some twohanded items should still be sharpenable, but handle force differently. therefore i need this stuff
 		var/obj/item/weapon/twohanded/TH = I
 		if(TH.force_wielded >= max)
-			user << "<span class='notice'>[TH] is much too powerful to sharpen further.</span>"
+			to_chat(user, "<span class='notice'>[TH] is much too powerful to sharpen further.</span>")
 			return
 		if(TH.wielded)
-			user << "<span class='notice'>[TH] must be unwielded before it can be sharpened.</span>"
+			to_chat(user, "<span class='notice'>[TH] must be unwielded before it can be sharpened.</span>")
 			return
 		if(TH.force_wielded > initial(TH.force_wielded))
-			user << "<span class='notice'>[TH] has already been refined before. It cannot be sharpened further.</span>"
+			to_chat(user, "<span class='notice'>[TH] has already been refined before. It cannot be sharpened further.</span>")
 			return
 		TH.force_wielded = Clamp(TH.force_wielded + increment, 0, max)//wieldforce is increased since normal force wont stay
 	if(I.force > initial(I.force))
-		user << "<span class='notice'>[I] has already been refined before. It cannot be sharpened further.</span>"
+		to_chat(user, "<span class='notice'>[I] has already been refined before. It cannot be sharpened further.</span>")
 		return
 	user.visible_message("<span class='notice'>[user] sharpens [I] with [src]!</span>", "<span class='notice'>You sharpen [I], making it much more deadly than before.</span>")
 	I.sharpness = IS_SHARP_ACCURATE
