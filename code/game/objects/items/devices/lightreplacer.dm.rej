diff a/code/game/objects/items/devices/lightreplacer.dm b/code/game/objects/items/devices/lightreplacer.dm	(rejected hunks)
@@ -73,30 +73,30 @@
 
 /obj/item/device/lightreplacer/examine(mob/user)
 	..()
-	user << status_string()
+	to_chat(user, status_string())
 
 /obj/item/device/lightreplacer/attackby(obj/item/W, mob/user, params)
 
 	if(istype(W, /obj/item/stack/sheet/glass))
 		var/obj/item/stack/sheet/glass/G = W
 		if(uses >= max_uses)
-			user << "<span class='warning'>[src.name] is full.</span>"
+			to_chat(user, "<span class='warning'>[src.name] is full.</span>")
 			return
 		else if(G.use(decrement))
 			AddUses(increment)
-			user << "<span class='notice'>You insert a piece of glass into the [src.name]. You have [uses] light\s remaining.</span>"
+			to_chat(user, "<span class='notice'>You insert a piece of glass into the [src.name]. You have [uses] light\s remaining.</span>")
 			return
 		else
-			user << "<span class='warning'>You need one sheet of glass to replace lights!</span>"
+			to_chat(user, "<span class='warning'>You need one sheet of glass to replace lights!</span>")
 
 	if(istype(W, /obj/item/weapon/shard))
 		if(uses >= max_uses)
-			user << "<span class='warning'>[src.name] is full.</span>"
+			to_chat(user, "<span class='warning'>[src.name] is full.</span>")
 			return
-		if(!user.unEquip(W))
+		if(!user.temporarilyRemoveItemFromInventory(W))
 			return
 		AddUses(round(increment*0.75))
-		user << "<span class='notice'>You insert a shard of glass into the [src.name]. You have [uses] light\s remaining.</span>"
+		to_chat(user, "<span class='notice'>You insert a shard of glass into the [src.name]. You have [uses] light\s remaining.</span>")
 		qdel(W)
 		return
 
@@ -104,14 +104,14 @@
 		var/obj/item/weapon/light/L = W
 		if(L.status == 0) // LIGHT OKAY
 			if(uses < max_uses)
-				if(!user.unEquip(W))
+				if(!user.temporarilyRemoveItemFromInventory(W))
 					return
 				AddUses(1)
 				qdel(L)
 		else
-			if(!user.unEquip(W))
+			if(!user.temporarilyRemoveItemFromInventory(W))
 				return
-			user << "<span class='notice'>You insert the [L.name] into the [src.name]</span>"
+			to_chat(user, "<span class='notice'>You insert the [L.name] into the [src.name]</span>")
 			AddShards(1, user)
 			qdel(L)
 		return
@@ -138,21 +138,21 @@
 					qdel(L)
 
 		if(!found_lightbulbs)
-			user << "<span class='warning'>\The [S] contains no bulbs.</span>"
+			to_chat(user, "<span class='warning'>\The [S] contains no bulbs.</span>")
 			return
 
 		if(!replaced_something && src.uses == max_uses)
-			user << "<span class='warning'>\The [src] is full!</span>"
+			to_chat(user, "<span class='warning'>\The [src] is full!</span>")
 			return
 
-		user << "<span class='notice'>You fill \the [src] with lights from \the [S]. " + status_string() + "</span>"
+		to_chat(user, "<span class='notice'>You fill \the [src] with lights from \the [S]. " + status_string() + "</span>")
 
 /obj/item/device/lightreplacer/emag_act()
 	if(!emagged)
 		Emag()
 
 /obj/item/device/lightreplacer/attack_self(mob/user)
-	user << status_string()
+	to_chat(user, status_string())
 
 /obj/item/device/lightreplacer/update_icon()
 	icon_state = "lightreplacer[emagged]"
@@ -176,7 +176,7 @@
 		AddUses(new_bulbs)
 	bulb_shards = bulb_shards % shards_required
 	if(new_bulbs != 0)
-		user << "<span class='notice'>\The [src] has fabricated a new bulb from the broken glass it has stored. It now has [uses] uses.</span>"
+		to_chat(user, "<span class='notice'>\The [src] has fabricated a new bulb from the broken glass it has stored. It now has [uses] uses.</span>")
 		playsound(src.loc, 'sound/machines/ding.ogg', 50, 1)
 	return new_bulbs
 
@@ -191,7 +191,7 @@
 	if(target.status != LIGHT_OK)
 		if(CanUse(U))
 			if(!Use(U)) return
-			U << "<span class='notice'>You replace the [target.fitting] with \the [src].</span>"
+			to_chat(U, "<span class='notice'>You replace the [target.fitting] with \the [src].</span>")
 
 			if(target.status != LIGHT_EMPTY)
 				AddShards(1, U)
@@ -213,10 +213,10 @@
 			return
 
 		else
-			U << failmsg
+			to_chat(U, failmsg)
 			return
 	else
-		U << "<span class='warning'>There is a working [target.fitting] already inserted!</span>"
+		to_chat(U, "<span class='warning'>There is a working [target.fitting] already inserted!</span>")
 		return
 
 /obj/item/device/lightreplacer/proc/Emag()
@@ -250,7 +250,7 @@
 			ReplaceLight(A, U)
 
 	if(!used)
-		U << failmsg
+		to_chat(U, failmsg)
 
 /obj/item/device/lightreplacer/proc/janicart_insert(mob/user, obj/structure/janitorialcart/J)
 	J.put_in_cart(src, user)
