diff a/code/game/objects/structures.dm b/code/game/objects/structures.dm	(rejected hunks)
@@ -9,7 +9,7 @@
 	var/mob/structureclimber
 	var/broken = 0 //similar to machinery's stat BROKEN
 
-/obj/structure/New()
+/obj/structure/Initialize()
 	if (!armor)
 		armor = list(melee = 0, bullet = 0, laser = 0, energy = 0, bomb = 0, bio = 0, rad = 0, fire = 50, acid = 50)
 	..()
@@ -23,8 +23,6 @@
 /obj/structure/Destroy()
 	if(ticker)
 		cameranet.updateVisibility(src)
-	if(opacity)
-		UpdateAffectingLights()
 	if(smooth)
 		queue_smooth_neighbors(src)
 	return ..()
@@ -64,6 +62,12 @@
 		step(O, get_dir(O, src))
 	return
 
+/obj/structure/proc/do_climb(atom/movable/A)
+	if(climbable)
+		density = 0
+		. = step(A,get_dir(A,src.loc))
+		density = 1
+
 /obj/structure/proc/climb_structure(mob/user)
 	src.add_fingerprint(user)
 	user.visible_message("<span class='warning'>[user] starts climbing onto [src].</span>", \
@@ -76,35 +80,31 @@
 	structureclimber = user
 	if(do_mob(user, user, adjusted_climb_time))
 		if(src.loc) //Checking if structure has been destroyed
-			density = 0
-			if(step(user,get_dir(user,src.loc)))
+			if(do_climb(user))
 				user.visible_message("<span class='warning'>[user] climbs onto [src].</span>", \
 									"<span class='notice'>You climb onto [src].</span>")
 				add_logs(user, src, "climbed onto")
 				user.Stun(climb_stun)
 				. = 1
 			else
-				user << "<span class='warning'>You fail to climb onto [src].</span>"
-			density = 1
+				to_chat(user, "<span class='warning'>You fail to climb onto [src].</span>")
 	structureclimber = null
 
 /obj/structure/examine(mob/user)
 	..()
 	if(!(resistance_flags & INDESTRUCTIBLE))
 		if(resistance_flags & ON_FIRE)
-			user << "<span class='warning'>It's on fire!</span>"
+			to_chat(user, "<span class='warning'>It's on fire!</span>")
 		if(broken)
-			user << "<span class='notice'>It looks broken.</span>"
-		var/examine_status = examine_status()
+			to_chat(user, "<span class='notice'>It looks broken.</span>")
+		var/examine_status = examine_status(user)
 		if(examine_status)
-			user << examine_status
+			to_chat(user, examine_status)
 
-/obj/structure/proc/examine_status() //An overridable proc, mostly for falsewalls.
+/obj/structure/proc/examine_status(mob/user) //An overridable proc, mostly for falsewalls.
 	var/healthpercent = (obj_integrity/max_integrity) * 100
 	switch(healthpercent)
-		if(100 to INFINITY)
-			return  "It seems pristine and undamaged."
-		if(50 to 100)
+		if(50 to 99)
 			return  "It looks slightly damaged."
 		if(25 to 50)
 			return  "It appears heavily damaged."
