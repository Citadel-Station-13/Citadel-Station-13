diff a/code/game/mecha/mecha_wreckage.dm b/code/game/mecha/mecha_wreckage.dm	(rejected hunks)
@@ -30,12 +30,12 @@
 /obj/structure/mecha_wreckage/examine(mob/user)
 	..()
 	if(AI)
-		user << "<span class='notice'>The AI recovery beacon is active.</span>"
+		to_chat(user, "<span class='notice'>The AI recovery beacon is active.</span>")
 
 /obj/structure/mecha_wreckage/attackby(obj/item/I, mob/user, params)
 	if(istype(I, /obj/item/weapon/weldingtool))
 		if(salvage_num <= 0)
-			user << "<span class='warning'>You don't see anything that can be cut with [I]!</span>"
+			to_chat(user, "<span class='warning'>You don't see anything that can be cut with [I]!</span>")
 			return
 		var/obj/item/weapon/weldingtool/WT = I
 		if(welder_salvage && welder_salvage.len && WT.remove_fuel(0, user))
@@ -47,13 +47,13 @@
 					welder_salvage -= type
 				salvage_num--
 			else
-				user << "<span class='warning'>You fail to salvage anything valuable from [src]!</span>"
+				to_chat(user, "<span class='warning'>You fail to salvage anything valuable from [src]!</span>")
 		else
 			return
 
 	else if(istype(I, /obj/item/weapon/wirecutters))
 		if(salvage_num <= 0)
-			user << "<span class='warning'>You don't see anything that can be cut with [I]!</span>"
+			to_chat(user, "<span class='warning'>You don't see anything that can be cut with [I]!</span>")
 			return
 		else if(wirecutters_salvage && wirecutters_salvage.len)
 			var/type = prob(70) ? pick(wirecutters_salvage) : null
@@ -62,7 +62,7 @@
 				user.visible_message("[user] cuts [N] from [src].", "<span class='notice'>You cut [N] from [src].</span>")
 				salvage_num--
 			else
-				user << "<span class='warning'>You fail to salvage anything valuable from [src]!</span>"
+				to_chat(user, "<span class='warning'>You fail to salvage anything valuable from [src]!</span>")
 
 	else if(istype(I, /obj/item/weapon/crowbar))
 		if(crowbar_salvage && crowbar_salvage.len)
@@ -73,7 +73,7 @@
 				user.visible_message("[user] pries [S] from [src].", "<span class='notice'>You pry [S] from [src].</span>")
 			return
 		else
-			user << "<span class='warning'>You don't see anything that can be pried with [I]!</span>"
+			to_chat(user, "<span class='warning'>You don't see anything that can be pried with [I]!</span>")
 
 
 /obj/structure/mecha_wreckage/transfer_ai(interaction, mob/user, null, obj/item/device/aicard/card)
@@ -83,16 +83,16 @@
  //Proc called on the wreck by the AI card.
 	if(interaction == AI_TRANS_TO_CARD) //AIs can only be transferred in one direction, from the wreck to the card.
 		if(!AI) //No AI in the wreck
-			user << "<span class='warning'>No AI backups found.</span>"
+			to_chat(user, "<span class='warning'>No AI backups found.</span>")
 			return
 		cut_overlays() //Remove the recovery beacon overlay
 		AI.forceMove(card) //Move the dead AI to the card.
 		card.AI = AI
 		if(AI.client) //AI player is still in the dead AI and is connected
-			AI << "The remains of your file system have been recovered on a mobile storage device."
+			to_chat(AI, "The remains of your file system have been recovered on a mobile storage device.")
 		else //Give the AI a heads-up that it is probably going to get fixed.
 			AI.notify_ghost_cloning("You have been recovered from the wreckage!", source = card)
-		user << "<span class='boldnotice'>Backup files recovered</span>: [AI.name] ([rand(1000,9999)].exe) salvaged from [name] and stored within local memory."
+		to_chat(user, "<span class='boldnotice'>Backup files recovered</span>: [AI.name] ([rand(1000,9999)].exe) salvaged from [name] and stored within local memory.")
 
 	else
 		return ..()
