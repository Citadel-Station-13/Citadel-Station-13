diff a/code/game/mecha/mecha_wreckage.dm b/code/game/mecha/mecha_wreckage.dm	(rejected hunks)
@@ -14,6 +14,23 @@
 	var/list/wirecutters_salvage = list(/obj/item/stack/cable_coil)
 	var/list/crowbar_salvage = list()
 	var/salvage_num = 5
+	var/mob/living/silicon/ai/AI //AIs to be salvaged
+
+/obj/structure/mecha_wreckage/New(loc, mob/living/silicon/ai/AI_pilot)
+	..()
+	if(AI_pilot) //Type-checking for this is already done in mecha/Destroy()
+		AI = AI_pilot
+		AI.apply_damage(150, BURN) //Give the AI a bit of damage from the "shock" of being suddenly shut down
+		AI.death() //The damage is not enough to kill the AI, but to be 'corrupted files' in need of repair.
+		AI.forceMove(src) //Put the dead AI inside the wreckage for recovery
+		add_overlay(image('icons/obj/projectiles.dmi', icon_state = "green_laser")) //Overlay for the recovery beacon
+		AI.controlled_mech = null
+		AI.remote_control = null
+
+/obj/structure/mecha_wreckage/examine(mob/user)
+	..()
+	if(AI)
+		user << "<span class='notice'>The AI recovery beacon is active.</span>"
 
 /obj/structure/mecha_wreckage/attackby(obj/item/I, mob/user, params)
 	if(istype(I, /obj/item/weapon/weldingtool))
@@ -58,6 +75,25 @@
 		else
 			user << "<span class='warning'>You don't see anything that can be pried with [I]!</span>"
 
+
+/obj/structure/mecha_wreckage/transfer_ai(interaction, mob/user, null, obj/item/device/aicard/card)
+	if(!..())
+		return
+
+ //Proc called on the wreck by the AI card.
+	if(interaction == AI_TRANS_TO_CARD) //AIs can only be transferred in one direction, from the wreck to the card.
+		if(!AI) //No AI in the wreck
+			user << "<span class='warning'>No AI backups found.</span>"
+			return
+		cut_overlays() //Remove the recovery beacon overlay
+		AI.forceMove(card) //Move the dead AI to the card.
+		card.AI = AI
+		if(AI.client) //AI player is still in the dead AI and is connected
+			AI << "The remains of your file system have been recovered on a mobile storage device."
+		else //Give the AI a heads-up that it is probably going to get fixed.
+			AI.notify_ghost_cloning("You have been recovered from the wreckage!", source = card)
+		user << "<span class='boldnotice'>Backup files recovered</span>: [AI.name] ([rand(1000,9999)].exe) salvaged from [name] and stored within local memory."
+
 	else
 		return ..()
 
