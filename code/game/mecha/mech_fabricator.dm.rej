diff a/code/game/mecha/mech_fabricator.dm b/code/game/mecha/mech_fabricator.dm	(rejected hunks)
@@ -11,7 +11,6 @@
 	req_access = list(GLOB.access_robotics)
 	var/time_coeff = 1
 	var/component_coeff = 1
-	var/datum/material_container/materials
 	var/datum/research/files
 	var/sync = 0
 	var/part_set
@@ -34,10 +33,12 @@
 								"Misc"
 								)
 
-/obj/machinery/mecha_part_fabricator/New()
-	..()
+/obj/machinery/mecha_part_fabricator/Initialize()
+	. = ..()
 	files = new /datum/research(src) //Setup the research data holder.
-	materials = new(src, list(MAT_METAL, MAT_GLASS, MAT_SILVER, MAT_GOLD, MAT_DIAMOND, MAT_PLASMA, MAT_URANIUM, MAT_BANANIUM, MAT_TITANIUM, MAT_BLUESPACE))
+	AddComponent(/datum/component/material_container,
+	 list(MAT_METAL, MAT_GLASS, MAT_SILVER, MAT_GOLD, MAT_DIAMOND, MAT_PLASMA, MAT_URANIUM, MAT_BANANIUM, MAT_TITANIUM, MAT_BLUESPACE),
+		FALSE, list(/obj/item/stack, /obj/item/weapon/ore/bluespace_crystal), CALLBACK(src, .proc/is_insertion_ready))
 	var/obj/item/weapon/circuitboard/machine/B = new /obj/item/weapon/circuitboard/machine/mechfab(null)
 	B.apply_default_parts(src)
 
@@ -57,6 +58,7 @@
 	//maximum stocking amount (default 300000, 600000 at T4)
 	for(var/obj/item/weapon/stock_parts/matter_bin/M in component_parts)
 		T += M.rating
+	GET_COMPONENT(materials, /datum/component/material_container)
 	materials.max_amount = (200000 + (T*50000))
 
 	//resources adjustment coefficient (1 -> 0.85 -> 0.7 -> 0.55)
@@ -429,55 +450,7 @@
 	if(default_deconstruction_crowbar(W))
 		return 1
 
-	if(istype(W, /obj/item/stack/sheet))
-
-		if(!is_insertion_ready(user))
-			return 1
-
-		var/material_amount = materials.get_item_material_amount(W)
-
-		if(!try_insert(user, W, material_amount))
-			return 1
-
-		var/inserted = materials.insert_item(W)
-		if(inserted)
-			to_chat(user, "<span class='notice'>You insert [inserted] sheet\s into [src].</span>")
-			if(W && W.materials.len)
-				if(!QDELETED(W))
-					user.put_in_active_hand(W)
-				var/mat_overlay = "fab-load-[material2name(W.materials[1])]"
-				add_overlay(mat_overlay)
-				sleep(10)
-				if(!QDELETED(src))
-					cut_overlay(mat_overlay) //No matter what the overlay shall still be deleted
-
-		updateUsrDialog()
-
-	else if(istype(W, /obj/item/weapon/ore/bluespace_crystal))
-
-		if(!is_insertion_ready(user))
-			return 1
-
-		var/material_amount = materials.get_item_material_amount(W)
-
-		if(!try_insert(user, W, material_amount))
-			return 1
-
-		var/inserted = materials.insert_item(W)
-		if(inserted)
-			to_chat(user, "<span class='notice'>You add [W] to the [src].</span>")
-			if(W && W.materials.len)
-				qdel(W)
-				var/mat_overlay = "fab-load-bluespace"
-				add_overlay(mat_overlay)
-				sleep(10)
-				if(!QDELETED(src))
-					cut_overlay(mat_overlay)
-
-		updateUsrDialog()
-
-	else
-		return ..()
+	return ..()
 
 /obj/machinery/mecha_part_fabricator/proc/material2name(ID)
 	return copytext(ID,2)
