diff a/code/game/machinery/hologram.dm b/code/game/machinery/hologram.dm	(rejected hunks)
@@ -31,6 +31,8 @@ Possible to do for anyone motivated enough:
 
 var/const/HOLOPAD_MODE = RANGE_BASED
 
+var/list/holopads = list()
+
 /obj/machinery/holopad
 	name = "\improper AI holopad"
 	desc = "It's a floor-mounted device for projecting holographic images. It is activated remotely."
@@ -55,10 +57,12 @@ var/const/HOLOPAD_MODE = RANGE_BASED
 	..()
 	var/obj/item/weapon/circuitboard/machine/B = new /obj/item/weapon/circuitboard/machine/holopad(null)
 	B.apply_default_parts(src)
+	holopads += src
 
 /obj/machinery/holopad/Destroy()
 	for (var/mob/living/silicon/ai/master in masters)
 		clear_holo(master)
+	holopads -= src
 	return ..()
 
 /obj/machinery/holo_pad/power_change()
@@ -151,8 +155,16 @@ var/const/HOLOPAD_MODE = RANGE_BASED
 		for (var/mob/living/silicon/ai/master in masters)
 			if(master && !master.stat && master.client && master.eyeobj)//If there is an AI attached, it's not incapacitated, it has a client, and the client eye is centered on the projector.
 				if(!(stat & NOPOWER))//If the  machine has power.
-					if((HOLOPAD_MODE == RANGE_BASED && (get_dist(master.eyeobj, src) <= holo_range)))
-						return 1
+					if(HOLOPAD_MODE == RANGE_BASED)
+						if(get_dist(master.eyeobj, src) <= holo_range)
+							return TRUE
+						else
+							var/obj/machinery/holopad/pad_close = get_closest_atom(/obj/machinery/holopad, holopads, master.eyeobj)
+							if(get_dist(pad_close, master.eyeobj) <= holo_range)
+								var/obj/effect/overlay/holo_pad_hologram/h = masters[master]
+								unset_holo(master)
+								pad_close.set_holo(master, h)
+								return TRUE
 
 					else if (HOLOPAD_MODE == AREA_BASED)
 
@@ -160,10 +172,10 @@ var/const/HOLOPAD_MODE = RANGE_BASED
 						var/area/eye_area = get_area(master.eyeobj)
 
 						if(eye_area in holo_area.master.related)
-							return 1
+							return TRUE
 
 			clear_holo(master)//If not, we want to get rid of the hologram.
-	return 1
+	return TRUE
 
 /obj/machinery/holopad/proc/activate_holo(mob/living/silicon/ai/user)
 	if(!(stat & NOPOWER) && user.eyeobj.loc == src.loc)//If the projector has power and client eye is on it
@@ -191,32 +203,39 @@ For the other part of the code, check silicon say.dm. Particularly robot talk.*/
 	h.anchored = 1//So space wind cannot drag it.
 	h.name = "[A.name] (Hologram)"//If someone decides to right click.
 	h.SetLuminosity(2)	//hologram lighting
+	set_holo(A, h)
+	return TRUE
+
+/obj/machinery/holopad/proc/set_holo(mob/living/silicon/ai/A, var/obj/effect/overlay/holo_pad_hologram/h)
 	masters[A] = h
-	SetLuminosity(2)			//pad lighting
+	SetLuminosity(2) // pad lighting
 	icon_state = "holopad1"
 	A.current = src
 	use_power += HOLOGRAM_POWER_USAGE
-	return 1
+	return TRUE
 
 /obj/machinery/holopad/proc/clear_holo(mob/living/silicon/ai/user)
+	qdel(masters[user]) // Get rid of user's hologram
+	unset_holo(user)
+	return TRUE
+
+/obj/machinery/holopad/proc/unset_holo(mob/living/silicon/ai/user)
 	if(user.current == src)
 		user.current = null
-	qdel(masters[user])//Get rid of user's hologram
-	masters -= user //Discard AI from the list of those who use holopad
+	masters -= user // Discard AI from the list of those who use holopad
 	use_power = max(HOLOPAD_PASSIVE_POWER_USAGE, use_power - HOLOGRAM_POWER_USAGE)//Reduce power usage
-	if (!masters.len)//If no users left
-		SetLuminosity(0)			//pad lighting (hologram lighting will be handled automatically since its owner was deleted)
+	if (!masters.len) // If no users left
+		SetLuminosity(0) // pad lighting (hologram lighting will be handled automatically since its owner was deleted)
 		icon_state = "holopad0"
 		use_power = HOLOPAD_PASSIVE_POWER_USAGE
-	return 1
+	return TRUE
 
 /obj/machinery/holopad/proc/move_hologram(mob/living/silicon/ai/user)
 	if(masters[user])
-		step_to(masters[user], user.eyeobj) // So it turns.
+		step_to(masters[user], user.eyeobj)
 		var/obj/effect/overlay/holo_pad_hologram/H = masters[user]
 		H.loc = get_turf(user.eyeobj)
-		masters[user] = H
-	return 1
+	return TRUE
 
 /obj/effect/overlay/holo_pad_hologram/Process_Spacemove(movement_dir = 0)
 	return 1
