diff a/code/game/machinery/autolathe.dm b/code/game/machinery/autolathe.dm	(rejected hunks)
@@ -56,7 +56,7 @@
 	matching_designs = list()
 
 /obj/item/weapon/circuitboard/machine/autolathe
-	name = "circuit board (Autolathe)"
+	name = "Autolathe (Machine Board)"
 	build_path = /obj/machinery/autolathe
 	origin_tech = "engineering=2;programming=2"
 	req_components = list(
@@ -97,7 +97,7 @@
 
 /obj/machinery/autolathe/attackby(obj/item/O, mob/user, params)
 	if (busy)
-		user << "<span class=\"alert\">The autolathe is busy. Please wait for completion of previous operation.</span>"
+		to_chat(user, "<span class=\"alert\">The autolathe is busy. Please wait for completion of previous operation.</span>")
 		return 1
 
 	if(default_deconstruction_screwdriver(user, "autolathe_t", "autolathe", O))
@@ -135,18 +135,18 @@
 		busy = 0
 		return 1
 
-	if(O.flags & HOLOGRAM)
+	if(HAS_SECONDARY_FLAG(O, HOLOGRAM))
 		return 1
 
 	var/material_amount = materials.get_item_material_amount(O)
 	if(!material_amount)
-		user << "<span class='warning'>This object does not contain sufficient amounts of metal or glass to be accepted by the autolathe.</span>"
+		to_chat(user, "<span class='warning'>This object does not contain sufficient amounts of metal or glass to be accepted by the autolathe.</span>")
 		return 1
 	if(!materials.has_space(material_amount))
-		user << "<span class='warning'>The autolathe is full. Please remove metal or glass from the autolathe in order to insert more.</span>"
+		to_chat(user, "<span class='warning'>The autolathe is full. Please remove metal or glass from the autolathe in order to insert more.</span>")
 		return 1
-	if(!user.unEquip(O))
-		user << "<span class='warning'>\The [O] is stuck to you and cannot be placed into the autolathe.</span>"
+	if(!user.temporarilyRemoveItemFromInventory(O))
+		to_chat(user, "<span class='warning'>\The [O] is stuck to you and cannot be placed into the autolathe.</span>")
 		return 1
 
 	busy = 1
@@ -157,12 +157,17 @@
 				flick("autolathe_o",src)//plays metal insertion animation
 			if (O.materials[MAT_GLASS])
 				flick("autolathe_r",src)//plays glass insertion animation
-			user << "<span class='notice'>You insert [inserted] sheet[inserted>1 ? "s" : ""] to the autolathe.</span>"
+			to_chat(user, "<span class='notice'>You insert [inserted] sheet[inserted>1 ? "s" : ""] to the autolathe.</span>")
 			use_power(inserted*100)
+			if(!QDELETED(O))
+				user.put_in_active_hand(O)
 		else
-			user << "<span class='notice'>You insert a material total of [inserted] to the autolathe.</span>"
+			to_chat(user, "<span class='notice'>You insert a material total of [inserted] to the autolathe.</span>")
 			use_power(max(500,inserted/10))
 			qdel(O)
+	else
+		user.put_in_active_hand(O)
+
 	busy = 0
 	updateUsrDialog()
 	return 1
@@ -228,7 +233,8 @@
 						materials.use_amount(materials_used)
 						for(var/i=1, i<=multiplier, i++)
 							var/obj/item/new_item = new being_built.build_path(T)
-							new_item.materials = materials_used.Copy()
+							for(var/mat in materials_used)
+								new_item.materials[mat] = materials_used[mat] / multiplier
 							new_item.autolathe_crafted(src)
 						busy = 0
 						updateUsrDialog()
@@ -242,7 +248,7 @@
 					matching_designs.Add(D)
 			updateUsrDialog()
 	else
-		usr << "<span class=\"alert\">The autolathe is busy. Please wait for completion of previous operation.</span>"
+		to_chat(usr, "<span class=\"alert\">The autolathe is busy. Please wait for completion of previous operation.</span>")
 
 	updateUsrDialog()
 
