diff a/code/game/machinery/syndicatebeacon.dm b/code/game/machinery/syndicatebeacon.dm	(rejected hunks)
@@ -11,6 +11,8 @@
 	density = 1
 	layer = BELOW_MOB_LAYER //so people can't hide it and it's REALLY OBVIOUS
 	stat = 0
+	verb_say = "states"
+	var/cooldown = 0
 
 	var/active = 0
 	var/icontype = "beacon"
@@ -18,26 +20,25 @@
 
 /obj/machinery/power/singularity_beacon/proc/Activate(mob/user = null)
 	if(surplus() < 1500)
-		if(user) user << "<span class='notice'>The connected wire doesn't have enough current.</span>"
+		if(user) to_chat(user, "<span class='notice'>The connected wire doesn't have enough current.</span>")
 		return
-	for(var/obj/singularity/singulo in world)
+	for(var/obj/singularity/singulo in singularities)
 		if(singulo.z == z)
 			singulo.target = src
 	icon_state = "[icontype]1"
 	active = 1
-	machines |= src
 	if(user)
-		user << "<span class='notice'>You activate the beacon.</span>"
+		to_chat(user, "<span class='notice'>You activate the beacon.</span>")
 
 
 /obj/machinery/power/singularity_beacon/proc/Deactivate(mob/user = null)
-	for(var/obj/singularity/singulo in world)
+	for(var/obj/singularity/singulo in singularities)
 		if(singulo.target == src)
 			singulo.target = null
 	icon_state = "[icontype]0"
 	active = 0
 	if(user)
-		user << "<span class='notice'>You deactivate the beacon.</span>"
+		to_chat(user, "<span class='notice'>You deactivate the beacon.</span>")
 
 
 /obj/machinery/power/singularity_beacon/attack_ai(mob/user)
@@ -48,27 +49,27 @@
 	if(anchored)
 		return active ? Deactivate(user) : Activate(user)
 	else
-		user << "<span class='warning'>You need to screw the beacon to the floor first!</span>"
+		to_chat(user, "<span class='warning'>You need to screw the beacon to the floor first!</span>")
 		return
 
 
 /obj/machinery/power/singularity_beacon/attackby(obj/item/weapon/W, mob/user, params)
 	if(istype(W,/obj/item/weapon/screwdriver))
 		if(active)
-			user << "<span class='warning'>You need to deactivate the beacon first!</span>"
+			to_chat(user, "<span class='warning'>You need to deactivate the beacon first!</span>")
 			return
 
 		if(anchored)
 			anchored = 0
-			user << "<span class='notice'>You unscrew the beacon from the floor.</span>"
+			to_chat(user, "<span class='notice'>You unscrew the beacon from the floor.</span>")
 			disconnect_from_network()
 			return
 		else
 			if(!connect_to_network())
-				user << "<span class='warning'>This device must be placed over an exposed, powered cable node!</span>"
+				to_chat(user, "<span class='warning'>This device must be placed over an exposed, powered cable node!</span>")
 				return
 			anchored = 1
-			user << "<span class='notice'>You screw the beacon to the floor and attach the cable.</span>"
+			to_chat(user, "<span class='notice'>You screw the beacon to the floor and attach the cable.</span>")
 			return
 	else
 		return ..()
@@ -81,12 +82,18 @@
 //stealth direct power usage
 /obj/machinery/power/singularity_beacon/process()
 	if(!active)
-		return PROCESS_KILL
+		return
+
+	if(surplus() > 1500)
+		add_load(1500)
+		if(cooldown <= world.time)
+			cooldown = world.time + 100
+			for(var/obj/singularity/singulo in singularities)
+				if(singulo.z == z)
+					say("The [singulo] is now [get_dist(src,singulo)] standard lengths away to the [dir2text(get_dir(src,singulo))]")
 	else
-		if(surplus() > 1500)
-			add_load(1500)
-		else
-			Deactivate()
+		Deactivate()
+		say("Insufficient charge detected - powering down")
 
 
 /obj/machinery/power/singularity_beacon/syndicate
@@ -106,7 +113,7 @@
 
 /obj/item/device/sbeacondrop/attack_self(mob/user)
 	if(user)
-		user << "<span class='notice'>Locked In.</span>"
+		to_chat(user, "<span class='notice'>Locked In.</span>")
 		new droptype( user.loc )
 		playsound(src, 'sound/effects/pop.ogg', 100, 1, 1)
 		qdel(src)
