diff a/code/game/machinery/limbgrower.dm b/code/game/machinery/limbgrower.dm	(rejected hunks)
@@ -10,7 +10,7 @@
 	icon = 'icons/obj/machines/limbgrower.dmi'
 	icon_state = "limbgrower_idleoff"
 	density = 1
-	flags = OPENCONTAINER
+	container_type = OPENCONTAINER
 
 	var/operating = 0
 	anchored = 1
@@ -42,7 +42,7 @@
 	files = new /datum/research/limbgrower(src)
 
 /obj/item/weapon/circuitboard/machine/limbgrower
-	name = "circuit board (Limb Grower)"
+	name = "Limb Grower (Machine Board)"
 	build_path = /obj/machinery/limbgrower
 	origin_tech = "programming=2;biotech=2"
 	req_components = list(
@@ -75,7 +75,7 @@
 
 /obj/machinery/limbgrower/attackby(obj/item/O, mob/user, params)
 	if (busy)
-		user << "<span class=\"alert\">The Limb Grower is busy. Please wait for completion of previous operation.</span>"
+		to_chat(user, "<span class=\"alert\">The Limb Grower is busy. Please wait for completion of previous operation.</span>")
 		return
 
 	if(default_deconstruction_screwdriver(user, "limbgrower_panelopen", "limbgrower_idleoff", O))
@@ -113,25 +113,25 @@
 				return
 
 
-			var/synth_cost = being_built.reagents["synthflesh"]*prod_coeff
+			var/synth_cost = being_built.reagents_list["synthflesh"]*prod_coeff
 			var/power = max(2000, synth_cost/5)
 
-			if(reagents.has_reagent("synthflesh", being_built.reagents["synthflesh"]*prod_coeff))
+			if(reagents.has_reagent("synthflesh", being_built.reagents_list["synthflesh"]*prod_coeff))
 				busy = 1
 				use_power(power)
 				flick("limbgrower_fill",src)
 				icon_state = "limbgrower_idleon"
-				addtimer(src, "build_item",32*prod_coeff)
+				addtimer(CALLBACK(src, .proc/build_item),32*prod_coeff)
 
 	else
-		usr << "<span class=\"alert\">The limb grower is busy. Please wait for completion of previous operation.</span>"
+		to_chat(usr, "<span class=\"alert\">The limb grower is busy. Please wait for completion of previous operation.</span>")
 
 	updateUsrDialog()
 	return
 
 /obj/machinery/limbgrower/proc/build_item()
-	if(reagents.has_reagent("synthflesh", being_built.reagents["synthflesh"]*prod_coeff))	//sanity check, if this happens we are in big trouble
-		reagents.remove_reagent("synthflesh",being_built.reagents["synthflesh"]*prod_coeff)
+	if(reagents.has_reagent("synthflesh", being_built.reagents_list["synthflesh"]*prod_coeff))	//sanity check, if this happens we are in big trouble
+		reagents.remove_reagent("synthflesh",being_built.reagents_list["synthflesh"]*prod_coeff)
 		var/buildpath = being_built.build_path
 		if(ispath(buildpath, /obj/item/bodypart))	//This feels like spatgheti code, but i need to initilise a limb somehow
 			build_limb(buildpath)
@@ -154,9 +154,12 @@
 	else
 		limb.icon = 'icons/mob/human_parts.dmi'
 	// Set this limb up using the specias name and body zone
-	limb.icon_state = "[selected_category]_[limb.body_zone]_s"
+	limb.icon_state = "[selected_category]_[limb.body_zone]"
 	limb.name = "Synthetic [selected_category] [parse_zone(limb.body_zone)]"
 	limb.desc = "A synthetic [selected_category] limb that will morph on its first use in surgery. This one is for the [parse_zone(limb.body_zone)]"
+	limb.species_id = selected_category
+	limb.should_draw_greyscale = TRUE
+	limb.update_icon_dropped()
 
 /obj/machinery/limbgrower/RefreshParts()
 	reagents.maximum_volume = 0
@@ -221,12 +224,12 @@
 	return dat
 
 /obj/machinery/limbgrower/proc/can_build(datum/design/D)
-	return (reagents.has_reagent("synthflesh", D.reagents["synthflesh"]*prod_coeff)) //Return whether the machine has enough synthflesh to produce the design
+	return (reagents.has_reagent("synthflesh", D.reagents_list["synthflesh"]*prod_coeff)) //Return whether the machine has enough synthflesh to produce the design
 
 /obj/machinery/limbgrower/proc/get_design_cost(datum/design/D)
 	var/dat
-	if(D.reagents["synthflesh"])
-		dat += "[D.reagents["synthflesh"] * prod_coeff] Synthetic flesh "
+	if(D.reagents_list["synthflesh"])
+		dat += "[D.reagents_list["synthflesh"] * prod_coeff] Synthetic flesh "
 	return dat
 
 /obj/machinery/limbgrower/emag_act(mob/user)
@@ -235,5 +238,5 @@
 	for(var/datum/design/D in files.possible_designs)
 		if((D.build_type & LIMBGROWER) && ("special" in D.category))
 			files.AddDesign2Known(D)
-	user << "A warning flashes onto the screen, stating that safety overrides have been deactivated"
-	emag = TRUE
\ No newline at end of file
+	to_chat(user, "A warning flashes onto the screen, stating that safety overrides have been deactivated")
+	emag = TRUE
