diff a/code/game/machinery/doors/airlock.dm b/code/game/machinery/doors/airlock.dm	(rejected hunks)
@@ -81,22 +81,17 @@ var/list/airlock_overlays = list()
 	var/airlock_material = null //material of inner filling; if its an airlock with glass, this should be set to "glass"
 	var/overlays_file = 'icons/obj/doors/airlocks/station/overlays.dmi'
 
-	var/image/old_frame_overlay //keep those in order to prevent unnecessary updating
-	var/image/old_filling_overlay
-	var/image/old_lights_overlay
-	var/image/old_panel_overlay
-	var/image/old_weld_overlay
-	var/image/old_sparks_overlay
-	var/image/old_dam_overlay
-
 	var/cyclelinkeddir = 0
 	var/obj/machinery/door/airlock/cyclelinkedairlock
 	var/shuttledocked = 0
 	var/delayed_close_requested = FALSE // TRUE means the door will automatically close the next time it's opened.
 
 	explosion_block = 1
+	hud_possible = list(DIAG_AIRLOCK_HUD)
+
+	var/air_tight = FALSE	//TRUE means density will be set as soon as the door begins to close
 
-/obj/machinery/door/airlock/New()
+/obj/machinery/door/airlock/Initialize()
 	..()
 	wires = new /datum/wires/airlock(src)
 	if(src.closeOtherId != null)
@@ -115,12 +110,18 @@ var/list/airlock_overlays = list()
 		max_integrity = normal_integrity
 	if(damage_deflection == AIRLOCK_DAMAGE_DEFLECTION_N && security_level > AIRLOCK_SECURITY_METAL)
 		damage_deflection = AIRLOCK_DAMAGE_DEFLECTION_R
-	update_icon()
+	prepare_huds()
+	var/datum/atom_hud/data/diagnostic/diag_hud = huds[DATA_HUD_DIAGNOSTIC]
+	diag_hud.add_to_hud(src)
+	diag_hud_set_electrified()
 
-/obj/machinery/door/airlock/initialize()
-	. = ..()
+/obj/machinery/door/airlock/Initialize()
+	..()
 	if (cyclelinkeddir)
 		cyclelinkairlock()
+	if(frequency)
+		set_frequency(frequency)
+	update_icon()
 
 /obj/machinery/door/airlock/proc/cyclelinkairlock()
 	if (cyclelinkedairlock)
@@ -222,19 +223,45 @@ var/list/airlock_overlays = list()
 					return
 			else /*if(src.justzap)*/
 				return
-		else if(user.hallucination > 50 && prob(10) && src.operating == 0)
-			user << "<span class='userdanger'>You feel a powerful shock course through your body!</span>"
-			user.staminaloss += 50
-			user.stunned += 5
+		else if(user.hallucination > 50 && ishuman(user) && prob(10) && src.operating == 0)
+			hallucinate_shock(user)
 			return
 	if (cyclelinkedairlock)
 		if (!shuttledocked && !emergency && !cyclelinkedairlock.shuttledocked && !cyclelinkedairlock.emergency && allowed(user))
 			if(cyclelinkedairlock.operating)
 				cyclelinkedairlock.delayed_close_requested = TRUE
 			else
-				addtimer(cyclelinkedairlock, "close", 2)
+				addtimer(CALLBACK(cyclelinkedairlock, .proc/close), 2)
 	..()
 
+/obj/machinery/door/airlock/proc/hallucinate_shock(mob/living/user)
+	var/image/shock_image = image(user, user, dir = user.dir)
+	var/image/electrocution_skeleton_anim = image('icons/mob/human.dmi', user, icon_state = "electrocuted_base", layer=ABOVE_MOB_LAYER)
+	shock_image.color = rgb(0,0,0)
+	shock_image.override = TRUE
+	electrocution_skeleton_anim.appearance_flags = RESET_COLOR
+
+	to_chat(user, "<span class='userdanger'>You feel a powerful shock course through your body!</span>")
+	if(user.client)
+		user.client.images |= shock_image
+		user.client.images |= electrocution_skeleton_anim
+	addtimer(CALLBACK(src, .proc/reset_hallucinate_shock_animation, user, shock_image, electrocution_skeleton_anim), 40)
+	user.playsound_local(get_turf(src), "sparks", 100, 1)
+	user.staminaloss += 50
+	user.Stun(2)
+	user.jitteriness += 1000
+	user.do_jitter_animation(user.jitteriness)
+	addtimer(CALLBACK(src, .proc/hallucinate_shock_drop, user), 20)
+
+/obj/machinery/door/airlock/proc/reset_hallucinate_shock_animation(mob/living/user, shock_image, electrocution_skeleton_anim)
+	if(user.client)
+		user.client.images.Remove(shock_image)
+		user.client.images.Remove(electrocution_skeleton_anim)
+
+/obj/machinery/door/airlock/proc/hallucinate_shock_drop(mob/living/user)
+	user.jitteriness = max(user.jitteriness - 990, 10) //Still jittery, but vastly less
+	user.Stun(3)
+	user.Weaken(3)
 
 /obj/machinery/door/airlock/proc/isElectrified()
 	if(src.secondsElectrified != 0)
@@ -272,7 +299,7 @@ var/list/airlock_overlays = list()
 			var/cont = 1
 			while (cont)
 				sleep(10)
-				if(qdeleted(src))
+				if(QDELETED(src))
 					return
 				cont = 0
 				if(secondsMainPowerLost>0)
@@ -450,35 +477,14 @@ var/list/airlock_overlays = list()
 				else
 					panel_overlay = get_airlock_overlay("panel_opening", overlays_file)
 
-	//doesn't use cut_overlays() for performance reasons
-	if(frame_overlay != old_frame_overlay)
-		overlays -= old_frame_overlay
-		add_overlay(frame_overlay)
-		old_frame_overlay = frame_overlay
-	if(filling_overlay != old_filling_overlay)
-		overlays -= old_filling_overlay
-		add_overlay(filling_overlay)
-		old_filling_overlay = filling_overlay
-	if(lights_overlay != old_lights_overlay)
-		overlays -= old_lights_overlay
-		add_overlay(lights_overlay)
-		old_lights_overlay = lights_overlay
-	if(panel_overlay != old_panel_overlay)
-		overlays -= old_panel_overlay
-		add_overlay(panel_overlay)
-		old_panel_overlay = panel_overlay
-	if(weld_overlay != old_weld_overlay)
-		overlays -= old_weld_overlay
-		add_overlay(weld_overlay)
-		old_weld_overlay = weld_overlay
-	if(sparks_overlay != old_sparks_overlay)
-		overlays -= old_sparks_overlay
-		add_overlay(sparks_overlay)
-		old_sparks_overlay = sparks_overlay
-	if(damag_overlay != old_dam_overlay)
-		overlays -= old_dam_overlay
-		add_overlay(damag_overlay)
-		old_dam_overlay = damag_overlay
+	cut_overlays()
+	add_overlay(frame_overlay)
+	add_overlay(filling_overlay)
+	add_overlay(lights_overlay)
+	add_overlay(panel_overlay)
+	add_overlay(weld_overlay)
+	add_overlay(sparks_overlay)
+	add_overlay(damag_overlay)
 
 /proc/get_airlock_overlay(icon_state, icon_file)
 	var/iconkey = "[icon_state][icon_file]"
@@ -503,31 +509,31 @@ var/list/airlock_overlays = list()
 /obj/machinery/door/airlock/examine(mob/user)
 	..()
 	if(charge && !panel_open && in_range(user, src))
-		user << "<span class='warning'>The maintenance panel seems haphazardly fastened.</span>"
+		to_chat(user, "<span class='warning'>The maintenance panel seems haphazardly fastened.</span>")
 	if(charge && panel_open)
-		user << "<span class='warning'>Something is wired up to the airlock's electronics!</span>"
+		to_chat(user, "<span class='warning'>Something is wired up to the airlock's electronics!</span>")
 
 	if(panel_open)
 		switch(security_level)
 			if(AIRLOCK_SECURITY_NONE)
-				user << "Wires are exposed!"
+				to_chat(user, "Wires are exposed!")
 			if(AIRLOCK_SECURITY_METAL)
-				user << "Wires are hidden behind welded metal cover"
+				to_chat(user, "Wires are hidden behind welded metal cover")
 			if(AIRLOCK_SECURITY_PLASTEEL_I_S)
-				user << "There is some shredded plasteel inside"
+				to_chat(user, "There is some shredded plasteel inside")
 			if(AIRLOCK_SECURITY_PLASTEEL_I)
-				user << "Wires are behind inner layer of plasteel"
+				to_chat(user, "Wires are behind inner layer of plasteel")
 			if(AIRLOCK_SECURITY_PLASTEEL_O_S)
-				user << "There is some shredded plasteel inside"
+				to_chat(user, "There is some shredded plasteel inside")
 			if(AIRLOCK_SECURITY_PLASTEEL_O)
-				user << "There is welded plasteel cover hiding wires"
+				to_chat(user, "There is welded plasteel cover hiding wires")
 			if(AIRLOCK_SECURITY_PLASTEEL)
-				user << "There is protective grille over panel"
+				to_chat(user, "There is protective grille over panel")
 	else if(security_level)
 		if(security_level == AIRLOCK_SECURITY_METAL)
-			user << "It looks a bit stronger"
+			to_chat(user, "It looks a bit stronger")
 		else
-			user << "It looks very robust"
+			to_chat(user, "It looks very robust")
 
 /obj/machinery/door/airlock/attack_ai(mob/user)
 	if(!src.canAIControl(user))
@@ -535,12 +541,12 @@ var/list/airlock_overlays = list()
 			src.hack(user)
 			return
 		else
-			user << "<span class='warning'>Airlock AI control has been blocked with a firewall. Unable to hack.</span>"
+			to_chat(user, "<span class='warning'>Airlock AI control has been blocked with a firewall. Unable to hack.</span>")
 	if(emagged)
-		user << "<span class='warning'>Unable to interface: Airlock is unresponsive.</span>"
+		to_chat(user, "<span class='warning'>Unable to interface: Airlock is unresponsive.</span>")
 		return
 	if(detonated)
-		user << "<span class='warning'>Unable to interface. Airlock control panel damaged.</span>"
+		to_chat(user, "<span class='warning'>Unable to interface. Airlock control panel damaged.</span>")
 		return
 
 	//Separate interface for the AI.
@@ -652,43 +658,43 @@ var/list/airlock_overlays = list()
 	set waitfor = 0
 	if(src.aiHacking == 0)
 		src.aiHacking = 1
-		user << "Airlock AI control has been blocked. Beginning fault-detection."
+		to_chat(user, "Airlock AI control has been blocked. Beginning fault-detection.")
 		sleep(50)
 		if(src.canAIControl(user))
-			user << "Alert cancelled. Airlock control has been restored without our assistance."
+			to_chat(user, "Alert cancelled. Airlock control has been restored without our assistance.")
 			src.aiHacking=0
 			return
 		else if(!src.canAIHack())
-			user << "Connection lost! Unable to hack airlock."
+			to_chat(user, "Connection lost! Unable to hack airlock.")
 			src.aiHacking=0
 			return
-		user << "Fault confirmed: airlock control wire disabled or cut."
+		to_chat(user, "Fault confirmed: airlock control wire disabled or cut.")
 		sleep(20)
-		user << "Attempting to hack into airlock. This may take some time."
+		to_chat(user, "Attempting to hack into airlock. This may take some time.")
 		sleep(200)
 		if(src.canAIControl(user))
-			user << "Alert cancelled. Airlock control has been restored without our assistance."
+			to_chat(user, "Alert cancelled. Airlock control has been restored without our assistance.")
 			src.aiHacking=0
 			return
 		else if(!src.canAIHack())
-			user << "Connection lost! Unable to hack airlock."
+			to_chat(user, "Connection lost! Unable to hack airlock.")
 			src.aiHacking=0
 			return
-		user << "Upload access confirmed. Loading control program into airlock software."
+		to_chat(user, "Upload access confirmed. Loading control program into airlock software.")
 		sleep(170)
 		if(src.canAIControl(user))
-			user << "Alert cancelled. Airlock control has been restored without our assistance."
+			to_chat(user, "Alert cancelled. Airlock control has been restored without our assistance.")
 			src.aiHacking=0
 			return
 		else if(!src.canAIHack())
-			user << "Connection lost! Unable to hack airlock."
+			to_chat(user, "Connection lost! Unable to hack airlock.")
 			src.aiHacking=0
 			return
-		user << "Transfer complete. Forcing airlock to execute program."
+		to_chat(user, "Transfer complete. Forcing airlock to execute program.")
 		sleep(50)
 		//disable blocked control
 		src.aiControlDisabled = 2
-		user << "Receiving control information from airlock."
+		to_chat(user, "Receiving control information from airlock.")
 		sleep(10)
 		//bring up airlock dialog
 		src.aiHacking = 0
@@ -706,7 +712,7 @@ var/list/airlock_overlays = list()
 
 	if(ishuman(user) && prob(40) && src.density)
 		var/mob/living/carbon/human/H = user
-		if(H.getBrainLoss() >= 60)
+		if(H.getBrainLoss() >= 60 && Adjacent(user))
 			playsound(src.loc, 'sound/effects/bang.ogg', 25, 1)
 			if(!istype(H.head, /obj/item/clothing/head/helmet))
 				H.visible_message("<span class='danger'>[user] headbutts the airlock.</span>", \
@@ -720,7 +726,7 @@ var/list/airlock_overlays = list()
 
 	if(panel_open)
 		if(security_level)
-			user << "<span class='warning'>Wires are protected!</span>"
+			to_chat(user, "<span class='warning'>Wires are protected!</span>")
 			return
 		wires.interact(user)
 	else
@@ -757,9 +763,9 @@ var/list/airlock_overlays = list()
 				if(1)
 					//disable idscan
 					if(wires.is_cut(WIRE_IDSCAN))
-						usr << "The IdScan wire has been cut - So, you can't disable it, but it is already disabled anyways."
+						to_chat(usr, "The IdScan wire has been cut - So, you can't disable it, but it is already disabled anyways.")
 					else if(src.aiDisabledIdScanner)
-						usr << "You've already disabled the IdScan feature."
+						to_chat(usr, "You've already disabled the IdScan feature.")
 					else
 						src.aiDisabledIdScanner = 1
 				if(2)
@@ -768,52 +774,52 @@ var/list/airlock_overlays = list()
 						src.loseMainPower()
 						update_icon()
 					else
-						usr << "Main power is already offline."
+						to_chat(usr, "Main power is already offline.")
 				if(3)
 					//disrupt backup power
 					if(src.secondsBackupPowerLost == 0)
 						src.loseBackupPower()
 						update_icon()
 					else
-						usr << "Backup power is already offline."
+						to_chat(usr, "Backup power is already offline.")
 				if(4)
 					//drop door bolts
 					if(wires.is_cut(WIRE_BOLTS))
-						usr << "You can't drop the door bolts - The door bolt dropping wire has been cut."
+						to_chat(usr, "You can't drop the door bolts - The door bolt dropping wire has been cut.")
 					else
 						bolt()
 				if(5)
 					//un-electrify door
 					if(wires.is_cut(WIRE_SHOCK))
-						usr << text("Can't un-electrify the airlock - The electrification wire is cut.")
-					else if(src.secondsElectrified==-1)
-						src.secondsElectrified = 0
-					else if(src.secondsElectrified>0)
-						src.secondsElectrified = 0
+						to_chat(usr, text("Can't un-electrify the airlock - The electrification wire is cut."))
+					else if(secondsElectrified==-1)
+						set_electrified(0)
+					else if(secondsElectrified>0)
+						set_electrified(0)
 
 				if(8)
 					// Safeties!  We don't need no stinking safeties!
 					if(wires.is_cut(WIRE_SAFETY))
-						usr << text("Control to door sensors is disabled.")
+						to_chat(usr, text("Control to door sensors is disabled."))
 					else if (src.safe)
 						safe = 0
 					else
-						usr << text("Firmware reports safeties already overriden.")
+						to_chat(usr, text("Firmware reports safeties already overriden."))
 
 				if(9)
 					// Door speed control
 					if(wires.is_cut(WIRE_TIMING))
-						usr << text("Control to door timing circuitry has been severed.")
+						to_chat(usr, text("Control to door timing circuitry has been severed."))
 					else if (src.normalspeed)
 						normalspeed = 0
 					else
-						usr << text("Door timing circuitry already accelerated.")
+						to_chat(usr, text("Door timing circuitry already accelerated."))
 				if(7)
 					//close door
 					if(src.welded)
-						usr << text("The airlock has been welded shut!")
+						to_chat(usr, text("The airlock has been welded shut!"))
 					else if(src.locked)
-						usr << text("The door bolts are down!")
+						to_chat(usr, text("The door bolts are down!"))
 					else if(!src.density)
 						close()
 					else
@@ -822,12 +828,12 @@ var/list/airlock_overlays = list()
 				if(10)
 					// Bolt lights
 					if(wires.is_cut(WIRE_LIGHT))
-						usr << text("Control to door bolt lights has been severed.</a>")
+						to_chat(usr, text("Control to door bolt lights has been severed.</a>"))
 					else if (src.lights)
 						lights = 0
 						update_icon()
 					else
-						usr << text("Door bolt lights are already disabled!")
+						to_chat(usr, text("Door bolt lights are already disabled!"))
 
 				if(11)
 					// Emergency access
@@ -835,7 +841,7 @@ var/list/airlock_overlays = list()
 						emergency = 0
 						update_icon()
 					else
-						usr << text("Emergency access is already disabled!")
+						to_chat(usr, text("Emergency access is already disabled!"))
 
 
 		else if(href_list["aiEnable"])
@@ -844,81 +850,81 @@ var/list/airlock_overlays = list()
 				if(1)
 					//enable idscan
 					if(wires.is_cut(WIRE_IDSCAN))
-						usr << "You can't enable IdScan - The IdScan wire has been cut."
+						to_chat(usr, "You can't enable IdScan - The IdScan wire has been cut.")
 					else if(src.aiDisabledIdScanner)
 						src.aiDisabledIdScanner = 0
 					else
-						usr << "The IdScan feature is not disabled."
+						to_chat(usr, "The IdScan feature is not disabled.")
 				if(4)
 					//raise door bolts
 					if(wires.is_cut(WIRE_BOLTS))
-						usr << text("The door bolt drop wire is cut - you can't raise the door bolts.<br>\n")
+						to_chat(usr, text("The door bolt drop wire is cut - you can't raise the door bolts.<br>\n"))
 					else if(!src.locked)
-						usr << text("The door bolts are already up.<br>\n")
+						to_chat(usr, text("The door bolts are already up.<br>\n"))
 					else
 						if(src.hasPower())
 							unbolt()
 						else
-							usr << text("Cannot raise door bolts due to power failure.<br>\n")
+							to_chat(usr, text("Cannot raise door bolts due to power failure.<br>\n"))
 
 				if(5)
 					//electrify door for 30 seconds
 					if(wires.is_cut(WIRE_SHOCK))
-						usr << text("The electrification wire has been cut.<br>\n")
+						to_chat(usr, text("The electrification wire has been cut.<br>\n"))
 					else if(src.secondsElectrified==-1)
-						usr << text("The door is already indefinitely electrified. You'd have to un-electrify it before you can re-electrify it with a non-forever duration.<br>\n")
+						to_chat(usr, text("The door is already indefinitely electrified. You'd have to un-electrify it before you can re-electrify it with a non-forever duration.<br>\n"))
 					else if(src.secondsElectrified!=0)
-						usr << text("The door is already electrified. You can't re-electrify it while it's already electrified.<br>\n")
+						to_chat(usr, text("The door is already electrified. You can't re-electrify it while it's already electrified.<br>\n"))
 					else
 						shockedby += "\[[time_stamp()]\][usr](ckey:[usr.ckey])"
 						add_logs(usr, src, "electrified")
-						src.secondsElectrified = 30
+						set_electrified(30)
 						spawn(10)
 							while (src.secondsElectrified>0)
 								src.secondsElectrified-=1
 								if(src.secondsElectrified<0)
-									src.secondsElectrified = 0
+									set_electrified(0)
 								src.updateUsrDialog()
 								sleep(10)
 				if(6)
 					//electrify door indefinitely
 					if(wires.is_cut(WIRE_SHOCK))
-						usr << text("The electrification wire has been cut.<br>\n")
+						to_chat(usr, text("The electrification wire has been cut.<br>\n"))
 					else if(src.secondsElectrified==-1)
-						usr << text("The door is already indefinitely electrified.<br>\n")
+						to_chat(usr, text("The door is already indefinitely electrified.<br>\n"))
 					else if(src.secondsElectrified!=0)
-						usr << text("The door is already electrified. You can't re-electrify it while it's already electrified.<br>\n")
+						to_chat(usr, text("The door is already electrified. You can't re-electrify it while it's already electrified.<br>\n"))
 					else
 						shockedby += text("\[[time_stamp()]\][usr](ckey:[usr.ckey])")
 						add_logs(usr, src, "electrified")
-						src.secondsElectrified = -1
+						set_electrified(-1)
 
 				if (8) // Not in order >.>
 					// Safeties!  Maybe we do need some stinking safeties!
 					if(wires.is_cut(WIRE_SAFETY))
-						usr << text("Control to door sensors is disabled.")
+						to_chat(usr, text("Control to door sensors is disabled."))
 					else if (!src.safe)
 						safe = 1
 						src.updateUsrDialog()
 					else
-						usr << text("Firmware reports safeties already in place.")
+						to_chat(usr, text("Firmware reports safeties already in place."))
 
 				if(9)
 					// Door speed control
 					if(wires.is_cut(WIRE_TIMING))
-						usr << text("Control to door timing circuitry has been severed.")
+						to_chat(usr, text("Control to door timing circuitry has been severed."))
 					else if (!src.normalspeed)
 						normalspeed = 1
 						src.updateUsrDialog()
 					else
-						usr << text("Door timing circuitry currently operating normally.")
+						to_chat(usr, text("Door timing circuitry currently operating normally."))
 
 				if(7)
 					//open door
 					if(src.welded)
-						usr << text("The airlock has been welded shut!")
+						to_chat(usr, text("The airlock has been welded shut!"))
 					else if(src.locked)
-						usr << text("The door bolts are down!")
+						to_chat(usr, text("The door bolts are down!"))
 					else if(src.density)
 						open()
 					else
@@ -926,20 +932,20 @@ var/list/airlock_overlays = list()
 				if(10)
 					// Bolt lights
 					if(wires.is_cut(WIRE_LIGHT))
-						usr << text("Control to door bolt lights has been severed.</a>")
+						to_chat(usr, text("Control to door bolt lights has been severed.</a>"))
 					else if (!src.lights)
 						lights = 1
 						update_icon()
 						src.updateUsrDialog()
 					else
-						usr << text("Door bolt lights are already enabled!")
+						to_chat(usr, text("Door bolt lights are already enabled!"))
 				if(11)
 					// Emergency access
 					if (!src.emergency)
 						emergency = 1
 						update_icon()
 					else
-						usr << text("Emergency access is already enabled!")
+						to_chat(usr, text("Emergency access is already enabled!"))
 
 	add_fingerprint(usr)
 	if(!nowindow)
@@ -958,28 +964,28 @@ var/list/airlock_overlays = list()
 				if(istype(C, /obj/item/stack/sheet/metal))
 					var/obj/item/stack/sheet/metal/S = C
 					if(S.amount < 2)
-						user << "<span class='warning'>You need at least 2 metal plates to reinforce airlock</span>"
+						to_chat(user, "<span class='warning'>You need at least 2 metal sheets to reinforce [src].</span>")
 						return
-					user << "<span class='notice'>You started reinforcing airlock</span>"
+					to_chat(user, "<span class='notice'>You start reinforcing [src]</span>")
 					if(do_after(user, 20, 1, target = src))
 						if(!panel_open || !S.use(2))
 							return
-						user.visible_message("<span class='notice'>[user] reinforced \the [src] with metal.</span>",
-											"<span class='notice'>You reinforced \the [src] with metal.</span>")
+						user.visible_message("<span class='notice'>[user] reinforce \the [src] with metal.</span>",
+											"<span class='notice'>You reinforce \the [src] with metal.</span>")
 						security_level = AIRLOCK_SECURITY_METAL
 						update_icon()
 					return
 				else if(istype(C, /obj/item/stack/sheet/plasteel))
 					var/obj/item/stack/sheet/plasteel/S = C
 					if(S.amount < 2)
-						user << "<span class='warning'>You need at least 2 plasteel plates to reinforce airlock</span>"
+						to_chat(user, "<span class='warning'>You need at least 2 plasteel sheets to reinforce [src].</span>")
 						return
-					user << "<span class='notice'>You started reinforcing airlock</span>"
+					to_chat(user, "<span class='notice'>You start reinforcing [src].</span>")
 					if(do_after(user, 20, 1, target = src))
 						if(!panel_open || !S.use(2))
 							return
-						user.visible_message("<span class='notice'>[user] reinforced \the [src] with plasteel.</span>",
-											"<span class='notice'>You reinforced \the [src] with plasteel.</span>")
+						user.visible_message("<span class='notice'>[user] reinforce \the [src] with plasteel.</span>",
+											"<span class='notice'>You reinforce \the [src] with plasteel.</span>")
 						security_level = AIRLOCK_SECURITY_PLASTEEL
 						modify_max_integrity(normal_integrity * AIRLOCK_INTEGRITY_MULTIPLIER)
 						damage_deflection = AIRLOCK_DAMAGE_DEFLECTION_R
@@ -990,7 +996,7 @@ var/list/airlock_overlays = list()
 					var/obj/item/weapon/weldingtool/WT = C
 					if(!WT.remove_fuel(2, user))
 						return
-					user << "<span class='notice'>You begin cutting wire shielding...</span>"
+					to_chat(user, "<span class='notice'>You begin cutting the panel's shielding...</span>")
 					playsound(loc, WT.usesound, 40, 1)
 					if(do_after(user, 40*WT.toolspeed, 1, target = src))
 						if(!panel_open || !WT.isOn())
@@ -1006,13 +1012,15 @@ var/list/airlock_overlays = list()
 			if(AIRLOCK_SECURITY_PLASTEEL_I_S)
 				if(istype(C, /obj/item/weapon/crowbar))
 					var/obj/item/weapon/crowbar/W = C
-					user << "<span class='notice'>You started removing inner layer of shielding...</span>"
+					to_chat(user, "<span class='notice'>You start removing the inner layer of shielding...</span>")
 					playsound(src, W.usesound, 100, 1)
 					if(do_after(user, 40*W.toolspeed, 1, target = src))
 						if(!panel_open)
 							return
-						user.visible_message("<span class='notice'>[user] removed \the [src]'s shielding.</span>",
-											"<span class='notice'>You removed \the [src]'s inner shielding.</span>")
+						if(security_level != AIRLOCK_SECURITY_PLASTEEL_I_S)
+							return
+						user.visible_message("<span class='notice'>[user] remove \the [src]'s shielding.</span>",
+											"<span class='notice'>You remove \the [src]'s inner shielding.</span>")
 						security_level = AIRLOCK_SECURITY_NONE
 						modify_max_integrity(normal_integrity)
 						damage_deflection = AIRLOCK_DAMAGE_DEFLECTION_N
@@ -1024,7 +1032,7 @@ var/list/airlock_overlays = list()
 					var/obj/item/weapon/weldingtool/WT = C
 					if(!WT.remove_fuel(2, user))
 						return
-					user << "<span class='notice'>You begin cutting inner layer of shielding...</span>"
+					to_chat(user, "<span class='notice'>You begin cutting the inner layer of shielding...</span>")
 					playsound(loc, WT.usesound, 40, 1)
 					if(do_after(user, 40*WT.toolspeed, 1, target = src))
 						if(!panel_open || !WT.isOn())
@@ -1038,13 +1046,15 @@ var/list/airlock_overlays = list()
 			if(AIRLOCK_SECURITY_PLASTEEL_O_S)
 				if(istype(C, /obj/item/weapon/crowbar))
 					var/obj/item/weapon/crowbar/W = C
-					user << "<span class='notice'>You started removing outer layer of shielding...</span>"
+					to_chat(user, "<span class='notice'>You start removing outer layer of shielding...</span>")
 					playsound(src, W.usesound, 100, 1)
 					if(do_after(user, 40*W.toolspeed, 1, target = src))
 						if(!panel_open)
 							return
-						user.visible_message("<span class='notice'>[user] removed \the [src]'s shielding.</span>",
-											"<span class='notice'>You removed \the [src]'s shielding.</span>")
+						if(security_level != AIRLOCK_SECURITY_PLASTEEL_O_S)
+							return
+						user.visible_message("<span class='notice'>[user] remove \the [src]'s shielding.</span>",
+											"<span class='notice'>You remove \the [src]'s shielding.</span>")
 						security_level = AIRLOCK_SECURITY_PLASTEEL_I
 						spawn_atom_to_turf(/obj/item/stack/sheet/plasteel, user.loc, 1)
 					return
@@ -1053,7 +1063,7 @@ var/list/airlock_overlays = list()
 					var/obj/item/weapon/weldingtool/WT = C
 					if(!WT.remove_fuel(2, user))
 						return
-					user << "<span class='notice'>You begin cutting outer layer of shielding...</span>"
+					to_chat(user, "<span class='notice'>You begin cutting the outer layer of shielding...</span>")
 					playsound(loc, WT.usesound, 40, 1)
 					if(do_after(user, 40*WT.toolspeed, 1, target = src))
 						if(!panel_open || !WT.isOn())
@@ -1069,7 +1079,7 @@ var/list/airlock_overlays = list()
 					var/obj/item/weapon/wirecutters/W = C
 					if(src.hasPower() && src.shock(user, 60)) // Protective grille of wiring is electrified
 						return
-					user << "<span class='notice'>You start cutting through outer grille.</span>"
+					to_chat(user, "<span class='notice'>You start cutting through the outer grille.</span>")
 					playsound(src, W.usesound, 100, 1)
 					if(do_after(user, 10*W.toolspeed, 1, target = src))
 						if(!panel_open)
@@ -1080,10 +1090,11 @@ var/list/airlock_overlays = list()
 					return
 	if(istype(C, /obj/item/weapon/screwdriver))
 		if(panel_open && detonated)
-			user << "<span class='warning'>[src] has no maintenance panel!</span>"
+			to_chat(user, "<span class='warning'>[src] has no maintenance panel!</span>")
 			return
 		panel_open = !panel_open
-		user << "<span class='notice'>You [panel_open ? "open":"close"] the maintenance panel of the airlock.</span>"
+		to_chat(user, "<span class='notice'>You [panel_open ? "open":"close"] the maintenance panel of the airlock.</span>")
+		playsound(src.loc, C.usesound, 50, 1)
 		src.update_icon()
 	else if(is_wire_tool(C))
 		return attack_hand(user)
@@ -1094,17 +1105,17 @@ var/list/airlock_overlays = list()
 		change_paintjob(C, user)
 	else if(istype(C, /obj/item/device/doorCharge))
 		if(!panel_open || security_level)
-			user << "<span class='warning'>The maintenance panel must be open to apply [C]!</span>"
+			to_chat(user, "<span class='warning'>The maintenance panel must be open to apply [C]!</span>")
 			return
 		if(emagged)
 			return
 		if(charge && !detonated)
-			user << "<span class='warning'>There's already a charge hooked up to this door!</span>"
+			to_chat(user, "<span class='warning'>There's already a charge hooked up to this door!</span>")
 			return
 		if(detonated)
-			user << "<span class='warning'>The maintenance panel is destroyed!</span>"
+			to_chat(user, "<span class='warning'>The maintenance panel is destroyed!</span>")
 			return
-		user << "<span class='warning'>You apply [C]. Next time someone opens the door, it will explode.</span>"
+		to_chat(user, "<span class='warning'>You apply [C]. Next time someone opens the door, it will explode.</span>")
 		user.drop_item()
 		panel_open = 0
 		update_icon()
@@ -1117,19 +1128,32 @@ var/list/airlock_overlays = list()
 /obj/machinery/door/airlock/try_to_weld(obj/item/weapon/weldingtool/W, mob/user)
 	if(!operating && density)
 		if(W.remove_fuel(0,user))
-			user.visible_message("[user] is [welded ? "unwelding":"welding"] the airlock.", \
-							"<span class='notice'>You begin [welded ? "unwelding":"welding"] the airlock...</span>", \
-							"<span class='italics'>You hear welding.</span>")
-			playsound(loc, W.usesound, 40, 1)
-			if(do_after(user,40*W.toolspeed, 1, target = src))
-				if(density && !operating)//Door must be closed to weld.
-					if(!user || !W || !W.isOn() || !user.loc )
-						return
+			if(user.a_intent != INTENT_HELP)
+				user.visible_message("[user] is [welded ? "unwelding":"welding"] the airlock.", \
+								"<span class='notice'>You begin [welded ? "unwelding":"welding"] the airlock...</span>", \
+								"<span class='italics'>You hear welding.</span>")
+				playsound(loc, W.usesound, 40, 1)
+				if(do_after(user,40*W.toolspeed, 1, target = src, extra_checks = CALLBACK(src, .proc/weld_checks, W, user)))
 					playsound(loc, 'sound/items/Welder2.ogg', 50, 1)
 					welded = !welded
 					user.visible_message("[user.name] has [welded? "welded shut":"unwelded"] [src].", \
 										"<span class='notice'>You [welded ? "weld the airlock shut":"unweld the airlock"].</span>")
 					update_icon()
+			else if(obj_integrity < max_integrity)
+				user.visible_message("[user] is welding the airlock.", \
+								"<span class='notice'>You begin repairing the airlock...</span>", \
+								"<span class='italics'>You hear welding.</span>")
+				playsound(loc, W.usesound, 40, 1)
+				if(do_after(user,40*W.toolspeed, 1, target = src, extra_checks = CALLBACK(src, .proc/weld_checks, W, user)))
+					playsound(loc, 'sound/items/Welder2.ogg', 50, 1)
+					obj_integrity = max_integrity
+					stat &= ~BROKEN
+					user.visible_message("[user.name] has repaired [src].", \
+										"<span class='notice'>You finish repairing the airlock.</span>")
+					update_icon()
+
+/obj/machinery/door/airlock/proc/weld_checks(obj/item/weapon/weldingtool/W, mob/user)
+	return !operating && density && user && W && W.isOn() && user.loc
 
 /obj/machinery/door/airlock/try_to_crowbar(obj/item/I, mob/user)
 	var/beingcrowbarred = null
@@ -1138,10 +1162,10 @@ var/list/airlock_overlays = list()
 	else
 		beingcrowbarred = 0
 	if(panel_open && charge)
-		user << "<span class='notice'>You carefully start removing [charge] from [src]...</span>"
+		to_chat(user, "<span class='notice'>You carefully start removing [charge] from [src]...</span>")
 		playsound(get_turf(src), I.usesound, 50, 1)
 		if(!do_after(user, 150*I.toolspeed, target = src))
-			user << "<span class='warning'>You slip and [charge] detonates!</span>"
+			to_chat(user, "<span class='warning'>You slip and [charge] detonates!</span>")
 			charge.ex_act(1)
 			user.Weaken(3)
 			return
@@ -1159,9 +1183,9 @@ var/list/airlock_overlays = list()
 				deconstruct(TRUE, user)
 				return
 	else if(hasPower())
-		user << "<span class='warning'>The airlock's motors resist your efforts to force it!</span>"
+		to_chat(user, "<span class='warning'>The airlock's motors resist your efforts to force it!</span>")
 	else if(locked)
-		user << "<span class='warning'>The airlock's bolts prevent it from being forced!</span>"
+		to_chat(user, "<span class='warning'>The airlock's bolts prevent it from being forced!</span>")
 	else if( !welded && !operating)
 		if(beingcrowbarred == 0) //being fireaxe'd
 			var/obj/item/weapon/twohanded/fireaxe/F = I
@@ -1172,7 +1196,7 @@ var/list/airlock_overlays = list()
 					else
 						close(2)
 			else
-				user << "<span class='warning'>You need to be wielding the fire axe to do that!</span>"
+				to_chat(user, "<span class='warning'>You need to be wielding the fire axe to do that!</span>")
 		else
 			spawn(0)
 				if(density)
@@ -1189,11 +1213,11 @@ var/list/airlock_overlays = list()
 			return
 
 		if(locked)
-			user << "<span class='warning'>The bolts are down, it won't budge!</span>"
+			to_chat(user, "<span class='warning'>The bolts are down, it won't budge!</span>")
 			return
 
 		if(welded)
-			user << "<span class='warning'>It's welded, it won't budge!</span>"
+			to_chat(user, "<span class='warning'>It's welded, it won't budge!</span>")
 			return
 
 		var/time_to_open = 5
@@ -1203,7 +1227,7 @@ var/list/airlock_overlays = list()
 			if(do_after(user, time_to_open,target = src))
 				open(2)
 				if(density && !open(2))
-					user << "<span class='warning'>Despite your attempts, the [src] refuses to open.</span>"
+					to_chat(user, "<span class='warning'>Despite your attempts, the [src] refuses to open.</span>")
 
 /obj/machinery/door/airlock/plasma/attackby(obj/item/C, mob/user, params)
 	if(C.is_hot() > 300)//If the temperature of the object is over 300, then ignite
@@ -1244,9 +1268,9 @@ var/list/airlock_overlays = list()
 		playsound(src.loc, 'sound/machines/airlockforced.ogg', 30, 1)
 
 	if(autoclose && normalspeed)
-		addtimer(src, "autoclose", 150)
+		addtimer(CALLBACK(src, .proc/autoclose), 150)
 	else if(autoclose && !normalspeed)
-		addtimer(src, "autoclose", 15)
+		addtimer(CALLBACK(src, .proc/autoclose), 15)
 
 	if(!density)
 		return 1
@@ -1254,19 +1278,19 @@ var/list/airlock_overlays = list()
 		return 0
 	operating = 1
 	update_icon(AIRLOCK_OPENING, 1)
-	src.SetOpacity(0)
+	src.set_opacity(0)
 	sleep(5)
 	src.density = 0
 	sleep(9)
 	src.layer = OPEN_DOOR_LAYER
 	update_icon(AIRLOCK_OPEN, 1)
-	SetOpacity(0)
+	set_opacity(0)
 	operating = 0
 	air_update_turf(1)
 	update_freelook_sight()
 	if(delayed_close_requested)
 		delayed_close_requested = FALSE
-		addtimer(src, "close", 2)
+		addtimer(CALLBACK(src, .proc/close), 2)
 	return 1
 
 
@@ -1279,7 +1303,7 @@ var/list/airlock_overlays = list()
 	if(safe)
 		for(var/atom/movable/M in get_turf(src))
 			if(M.density && M != src) //something is blocking the door
-				addtimer(src, "autoclose", 60)
+				addtimer(CALLBACK(src, .proc/autoclose), 60)
 				return
 
 	if(forced < 2)
@@ -1299,14 +1323,16 @@ var/list/airlock_overlays = list()
 	operating = 1
 	update_icon(AIRLOCK_CLOSING, 1)
 	src.layer = CLOSED_DOOR_LAYER
+	if(air_tight)
+		density = TRUE
 	sleep(5)
-	src.density = 1
+	density = TRUE
 	if(!safe)
 		crush()
 	sleep(9)
 	update_icon(AIRLOCK_CLOSED, 1)
 	if(visible && !glass)
-		SetOpacity(1)
+		set_opacity(1)
 	operating = 0
 	delayed_close_requested = FALSE
 	air_update_turf(1)
@@ -1397,7 +1423,7 @@ var/list/airlock_overlays = list()
 		operating = 1
 		update_icon(AIRLOCK_EMAG, 1)
 		sleep(6)
-		if(qdeleted(src))
+		if(QDELETED(src))
 			return
 		operating = 0
 		if(!open())
@@ -1417,7 +1443,7 @@ var/list/airlock_overlays = list()
 	if(!density) //Already open
 		return
 	if(locked || welded) //Extremely generic, as aliens only understand the basics of how airlocks work.
-		user << "<span class='warning'>[src] refuses to budge!</span>"
+		to_chat(user, "<span class='warning'>[src] refuses to budge!</span>")
 		return
 	user.visible_message("<span class='warning'>[user] begins prying open [src].</span>",\
 						"<span class='noticealien'>You begin digging your claws into [src] with all your might!</span>",\
@@ -1430,7 +1456,7 @@ var/list/airlock_overlays = list()
 
 	if(do_after(user, time_to_open, target = src))
 		if(density && !open(2)) //The airlock is still closed, but something prevented it opening. (Another player noticed and bolted/welded the airlock in time!)
-			user << "<span class='warning'>Despite your efforts, [src] managed to resist your attempts to open it!</span>"
+			to_chat(user, "<span class='warning'>Despite your efforts, [src] managed to resist your attempts to open it!</span>")
 
 /obj/machinery/door/airlock/hostile_lockdown(mob/origin)
 	// Must be powered and have working AI wire.
@@ -1439,7 +1465,7 @@ var/list/airlock_overlays = list()
 		safe = FALSE //DOOR CRUSH
 		close()
 		bolt() //Bolt it!
-		secondsElectrified = -1  //Shock it!
+		set_electrified(-1)  //Shock it!
 		if(origin)
 			shockedby += "\[[time_stamp()]\][origin](ckey:[origin.ckey])"
 
@@ -1448,7 +1474,7 @@ var/list/airlock_overlays = list()
 	// Must be powered and have working AI wire.
 	if(canAIControl(src) && !stat)
 		unbolt()
-		secondsElectrified = 0
+		set_electrified(0)
 		open()
 		safe = TRUE
 
@@ -1461,6 +1487,9 @@ var/list/airlock_overlays = list()
 		wires.cut_all()
 		update_icon()
 
+/obj/machinery/door/airlock/proc/set_electrified(seconds)
+	secondsElectrified = seconds
+	diag_hud_set_electrified()
 
 /obj/machinery/door/airlock/take_damage(damage_amount, damage_type = BRUTE, damage_flag = 0, sound_effect = 1, attack_dir)
 	. = ..()
@@ -1484,10 +1513,10 @@ var/list/airlock_overlays = list()
 				A.obj_integrity = A.max_integrity * 0.5
 		else if(emagged)
 			if(user)
-				user << "<span class='warning'>You discard the damaged electronics.</span>"
+				to_chat(user, "<span class='warning'>You discard the damaged electronics.</span>")
 		else
 			if(user)
-				user << "<span class='notice'>You remove the airlock electronics.</span>"
+				to_chat(user, "<span class='notice'>You remove the airlock electronics.</span>")
 
 			var/obj/item/weapon/electronics/airlock/ae
 			if(!electronics)
@@ -1503,3 +1532,17 @@ var/list/airlock_overlays = list()
 				electronics = null
 				ae.loc = src.loc
 	qdel(src)
+
+/obj/machinery/door/airlock/rcd_vals(mob/user, obj/item/weapon/rcd/the_rcd)
+	switch(the_rcd.mode)
+		if(RCD_DECONSTRUCT)
+			return list("mode" = RCD_DECONSTRUCT, "delay" = 50, "cost" = 32)
+	return FALSE
+
+/obj/machinery/door/airlock/rcd_act(mob/user, obj/item/weapon/rcd/the_rcd, passed_mode)
+	switch(passed_mode)
+		if(RCD_DECONSTRUCT)
+			to_chat(user, "<span class='notice'>You deconstruct the airlock.</span>")
+			qdel(src)
+			return TRUE
+	return FALSE
