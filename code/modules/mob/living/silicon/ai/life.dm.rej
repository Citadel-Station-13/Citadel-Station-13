diff a/code/modules/mob/living/silicon/ai/life.dm b/code/modules/mob/living/silicon/ai/life.dm	(rejected hunks)
@@ -11,13 +11,15 @@
 
 		update_gravity(mob_has_gravity())
 
+		handle_status_effects()
+
 		if(malfhack && malfhack.aidisabled)
 			deltimer(malfhacking)
 			// This proc handles cleanup of screen notifications and
 			// messenging the client
 			malfhacked(malfhack)
 
-		if(!eyeobj || qdeleted(eyeobj) || !eyeobj.loc)
+		if(!eyeobj || QDELETED(eyeobj) || !eyeobj.loc)
 			view_core()
 
 		if(machine)
@@ -51,11 +53,11 @@
 		if(POWER_REQ_NONE)
 			return FALSE
 		if(POWER_REQ_ALL)
-			return !T || !A || ((!A.master.power_equip || isspaceturf(T)) && !is_type_in_list(loc, list(/obj/item, /obj/mecha)))
+			return !T || !A || ((!A.power_equip || isspaceturf(T)) && !is_type_in_list(loc, list(/obj/item, /obj/mecha)))
 		if(POWER_REQ_CLOCKCULT)
-			for(var/obj/effect/clockwork/sigil/transmission/ST in range(src, 1))
+			for(var/obj/effect/clockwork/sigil/transmission/ST in range(src, SIGIL_ACCESS_RANGE))
 				return FALSE
-			return !T || !A || (!istype(T, /turf/open/floor/clockwork) && (!A.master.power_equip || isspaceturf(T)) && !is_type_in_list(loc, list(/obj/item, /obj/mecha)))
+			return !T || !A || (!istype(T, /turf/open/floor/clockwork) && (!A.power_equip || isspaceturf(T)) && !is_type_in_list(loc, list(/obj/item, /obj/mecha)))
 
 /mob/living/silicon/ai/updatehealth()
 	if(status_flags & GODMODE)
@@ -91,24 +93,24 @@
 
 
 /mob/living/silicon/ai/proc/start_RestorePowerRoutine()
-	src << "Backup battery online. Scanners, camera, and radio interface offline. Beginning fault-detection."
+	to_chat(src, "Backup battery online. Scanners, camera, and radio interface offline. Beginning fault-detection.")
 	sleep(50)
 	var/turf/T = get_turf(src)
 	var/area/AIarea = get_area(src)
-	if(AIarea && AIarea.master.power_equip)
+	if(AIarea && AIarea.power_equip)
 		if(!isspaceturf(T))
 			ai_restore_power()
 			return
-	src << "Fault confirmed: missing external power. Shutting down main control system to save power."
+	to_chat(src, "Fault confirmed: missing external power. Shutting down main control system to save power.")
 	sleep(20)
-	src << "Emergency control system online. Verifying connection to power network."
+	to_chat(src, "Emergency control system online. Verifying connection to power network.")
 	sleep(50)
 	T = get_turf(src)
 	if(isspaceturf(T))
-		src << "Unable to verify! No power connection detected!"
+		to_chat(src, "Unable to verify! No power connection detected!")
 		aiRestorePowerRoutine = POWER_RESTORATION_SEARCH_APC
 		return
-	src << "Connection verified. Searching for APC in power network."
+	to_chat(src, "Connection verified. Searching for APC in power network.")
 	sleep(50)
 	var/obj/machinery/power/apc/theAPC = null
 
@@ -117,7 +119,7 @@
 		T = get_turf(src)
 		AIarea = get_area(src)
 		if(AIarea)
-			for(var/area/A in AIarea.master.related)
+			for(var/area/A in AIarea.related)
 				for (var/obj/machinery/power/apc/APC in A)
 					if (!(APC.stat & BROKEN))
 						theAPC = APC
@@ -125,39 +127,37 @@
 		if (!theAPC)
 			switch(PRP)
 				if(1)
-					src << "Unable to locate APC!"
+					to_chat(src, "Unable to locate APC!")
 				else
-					src << "Lost connection with the APC!"
+					to_chat(src, "Lost connection with the APC!")
 			aiRestorePowerRoutine = POWER_RESTORATION_SEARCH_APC
 			return
-		if(AIarea.master.power_equip)
+		if(AIarea.power_equip)
 			if(!isspaceturf(T))
 				ai_restore_power()
 				return
 		switch(PRP)
-			if (1) src << "APC located. Optimizing route to APC to avoid needless power waste."
-			if (2) src << "Best route identified. Hacking offline APC power port."
-			if (3) src << "Power port upload access confirmed. Loading control program into APC power port software."
+			if (1) to_chat(src, "APC located. Optimizing route to APC to avoid needless power waste.")
+			if (2) to_chat(src, "Best route identified. Hacking offline APC power port.")
+			if (3) to_chat(src, "Power port upload access confirmed. Loading control program into APC power port software.")
 			if (4)
-				src << "Transfer complete. Forcing APC to execute program."
+				to_chat(src, "Transfer complete. Forcing APC to execute program.")
 				sleep(50)
-				src << "Receiving control information from APC."
+				to_chat(src, "Receiving control information from APC.")
 				sleep(2)
 				apc_override = 1
 				theAPC.ui_interact(src, state = conscious_state)
 				apc_override = 0
 				aiRestorePowerRoutine = POWER_RESTORATION_APC_FOUND
-				src << "Here are your current laws:"
-				show_laws()
 		sleep(50)
 		theAPC = null
 
 /mob/living/silicon/ai/proc/ai_restore_power()
 	if(aiRestorePowerRoutine)
 		if(aiRestorePowerRoutine == POWER_RESTORATION_APC_FOUND)
-			src << "Alert cancelled. Power has been restored."
+			to_chat(src, "Alert cancelled. Power has been restored.")
 		else
-			src << "Alert cancelled. Power has been restored without our assistance."
+			to_chat(src, "Alert cancelled. Power has been restored without our assistance.")
 		aiRestorePowerRoutine = POWER_RESTORATION_OFF
 		set_blindness(0)
 		update_sight()
@@ -166,8 +166,8 @@
 	aiRestorePowerRoutine = POWER_RESTORATION_START
 	blind_eyes(1)
 	update_sight()
-	src << "You've lost power!"
-	addtimer(src, "start_RestorePowerRoutine", 20)
+	to_chat(src, "You've lost power!")
+	addtimer(CALLBACK(src, .proc/start_RestorePowerRoutine), 20)
 
 #undef POWER_RESTORATION_OFF
 #undef POWER_RESTORATION_START
