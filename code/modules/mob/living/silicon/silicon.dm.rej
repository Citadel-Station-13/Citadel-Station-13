diff a/code/modules/mob/living/silicon/silicon.dm b/code/modules/mob/living/silicon/silicon.dm	(rejected hunks)
@@ -11,9 +11,11 @@
 	see_in_dark = 8
 	bubble_icon = "machine"
 	weather_immunities = list("ash")
+	possible_a_intents = list(INTENT_HELP, INTENT_HARM)
 
 	var/syndicate = 0
 	var/datum/ai_laws/laws = null//Now... THEY ALL CAN ALL HAVE LAWS
+	var/last_lawchange_announce = 0
 	var/list/alarms_to_show = list()
 	var/list/alarms_to_clear = list()
 	var/designation = ""
@@ -37,7 +39,7 @@
 
 	var/law_change_counter = 0
 
-/mob/living/silicon/New()
+/mob/living/silicon/Initialize()
 	..()
 	silicon_mobs += src
 	var/datum/atom_hud/data/diagnostic/diag_hud = huds[DATA_HUD_DIAGNOSTIC]
@@ -80,7 +82,7 @@
 
 			if(alarms_to_show.len < 5)
 				for(var/msg in alarms_to_show)
-					src << msg
+					to_chat(src, msg)
 			else if(alarms_to_show.len)
 
 				var/msg = "--- "
@@ -104,11 +106,11 @@
 					msg += "CAMERA: [alarm_types_show["Camera"]] alarms detected. - "
 
 				msg += "<A href=?src=\ref[src];showalerts=1'>\[Show Alerts\]</a>"
-				src << msg
+				to_chat(src, msg)
 
 			if(alarms_to_clear.len < 3)
 				for(var/msg in alarms_to_clear)
-					src << msg
+					to_chat(src, msg)
 
 			else if(alarms_to_clear.len)
 				var/msg = "--- "
@@ -129,7 +131,7 @@
 					msg += "CAMERA: [alarm_types_clear["Camera"]] alarms cleared. - "
 
 				msg += "<A href=?src=\ref[src];showalerts=1'>\[Show Alerts\]</a>"
-				src << msg
+				to_chat(src, msg)
 
 
 			alarms_to_show = list()
@@ -144,7 +146,7 @@
 
 /mob/living/silicon/can_inject(mob/user, error_msg)
 	if(error_msg)
-		user << "<span class='alert'>Their outer shell is too tough.</span>"
+		to_chat(user, "<span class='alert'>Their outer shell is too tough.</span>")
 	return 0
 
 /mob/living/silicon/IsAdvancedToolUser()
@@ -192,7 +194,7 @@
 	return
 
 
-/mob/living/silicon/proc/statelaws()
+/mob/living/silicon/proc/statelaws(force = 0)
 
 	//"radiomod" is inserted before a hardcoded message to change if and how it is handled by an internal radio.
 	src.say("[radiomod] Current Active Laws:")
@@ -203,13 +205,13 @@
 
 	if (src.laws.devillaws && src.laws.devillaws.len)
 		for(var/index = 1, index <= src.laws.devillaws.len, index++)
-			if (src.devillawcheck[index] == "Yes")
+			if (force || src.devillawcheck[index] == "Yes")
 				src.say("[radiomod] 666. [src.laws.devillaws[index]]")
 				sleep(10)
 
 
 	if (src.laws.zeroth)
-		if (src.lawcheck[1] == "Yes")
+		if (force || src.lawcheck[1] == "Yes")
 			src.say("[radiomod] 0. [src.laws.zeroth]")
 			sleep(10)
 
@@ -217,7 +219,7 @@
 		var/law = src.laws.ion[index]
 		var/num = ionnum()
 		if (length(law) > 0)
-			if (src.ioncheck[index] == "Yes")
+			if (force || src.ioncheck[index] == "Yes")
 				src.say("[radiomod] [num]. [law]")
 				sleep(10)
 
@@ -225,21 +227,20 @@
 		var/law = src.laws.inherent[index]
 
 		if (length(law) > 0)
-			if (src.lawcheck[index+1] == "Yes")
+			if (force || src.lawcheck[index+1] == "Yes")
 				src.say("[radiomod] [number]. [law]")
+				number++
 				sleep(10)
-			number++
-
 
 	for (var/index = 1, index <= src.laws.supplied.len, index++)
 		var/law = src.laws.supplied[index]
 
 		if (length(law) > 0)
 			if(src.lawcheck.len >= number+1)
-				if (src.lawcheck[number+1] == "Yes")
+				if (force || src.lawcheck[number+1] == "Yes")
 					src.say("[radiomod] [number]. [law]")
+					number++
 					sleep(10)
-				number++
 
 
 /mob/living/silicon/proc/checklaws() //Gives you a link-driven interface for deciding what laws the statelaws() proc will share with the crew. --NeoFite
@@ -292,7 +293,7 @@
 
 /mob/living/silicon/proc/set_autosay() //For allowing the AI and borgs to set the radio behavior of auto announcements (state laws, arrivals).
 	if(!radio)
-		src << "Radio not detected."
+		to_chat(src, "Radio not detected.")
 		return
 
 	//Ask the user to pick a channel from what it has available.
@@ -311,7 +312,7 @@
 				radiomod = key
 				break
 
-	src << "<span class='notice'>Automatic announcements [Autochan == "None" ? "will not use the radio." : "set to [Autochan]."]</span>"
+	to_chat(src, "<span class='notice'>Automatic announcements [Autochan == "None" ? "will not use the radio." : "set to [Autochan]."]</span>")
 
 /mob/living/silicon/put_in_hand_check() // This check is for borgs being able to receive items, not put them in others' hands.
 	return 0
@@ -353,15 +354,15 @@
 	switch(sensor_type)
 		if ("Security")
 			add_sec_hud()
-			src << "<span class='notice'>Security records overlay enabled.</span>"
+			to_chat(src, "<span class='notice'>Security records overlay enabled.</span>")
 		if ("Medical")
 			add_med_hud()
-			src << "<span class='notice'>Life signs monitor overlay enabled.</span>"
+			to_chat(src, "<span class='notice'>Life signs monitor overlay enabled.</span>")
 		if ("Diagnostic")
 			add_diag_hud()
-			src << "<span class='notice'>Robotics diagnostic overlay enabled.</span>"
+			to_chat(src, "<span class='notice'>Robotics diagnostic overlay enabled.</span>")
 		if ("Disable")
-			src << "Sensor augmentations disabled."
+			to_chat(src, "Sensor augmentations disabled.")
 
 
 /mob/living/silicon/proc/GetPhoto()
