diff a/code/modules/mob/living/simple_animal/bot/construction.dm b/code/modules/mob/living/simple_animal/bot/construction.dm	(rejected hunks)
@@ -4,7 +4,7 @@
 /obj/item/weapon/bucket_sensor
 	desc = "It's a bucket. With a sensor attached."
 	name = "proxy bucket"
-	icon = 'icons/obj/aibots.dmi'
+	icon = 'icons/mob/aibots.dmi'
 	icon_state = "bucket_proxy"
 	force = 3
 	throwforce = 5
@@ -16,14 +16,13 @@
 /obj/item/weapon/bucket_sensor/attackby(obj/item/W, mob/user as mob, params)
 	..()
 	if(istype(W, /obj/item/bodypart/l_arm/robot) || istype(W, /obj/item/bodypart/r_arm/robot))
-		if(!user.unEquip(W))
+		if(!user.temporarilyRemoveItemFromInventory(W))
 			return
 		qdel(W)
 		var/turf/T = get_turf(loc)
 		var/mob/living/simple_animal/bot/cleanbot/A = new /mob/living/simple_animal/bot/cleanbot(T)
 		A.name = created_name
-		user << "<span class='notice'>You add the robot arm to the bucket and sensor assembly. Beep boop!</span>"
-		user.unEquip(src, 1)
+		to_chat(user, "<span class='notice'>You add the robot arm to the bucket and sensor assembly. Beep boop!</span>")
 		qdel(src)
 
 	else if(istype(W, /obj/item/weapon/pen))
@@ -39,7 +38,7 @@
 /obj/item/weapon/ed209_assembly
 	name = "\improper ED-209 assembly"
 	desc = "Some sort of bizarre assembly."
-	icon = 'icons/obj/aibots.dmi'
+	icon = 'icons/mob/aibots.dmi'
 	icon_state = "ed209_frame"
 	item_state = "ed209_frame"
 	var/build_step = 0
@@ -61,11 +60,11 @@
 	switch(build_step)
 		if(0,1)
 			if(istype(W, /obj/item/bodypart/l_leg/robot) || istype(W, /obj/item/bodypart/r_leg/robot))
-				if(!user.unEquip(W))
+				if(!user.temporarilyRemoveItemFromInventory(W))
 					return
 				qdel(W)
 				build_step++
-				user << "<span class='notice'>You add the robot leg to [src].</span>"
+				to_chat(user, "<span class='notice'>You add the robot leg to [src].</span>")
 				name = "legs/frame assembly"
 				if(build_step == 1)
 					item_state = "ed209_leg"
@@ -81,12 +80,12 @@
 			else if(istype(W, /obj/item/clothing/suit/bluetag))
 				newcolor = "b"
 			if(newcolor || istype(W, /obj/item/clothing/suit/armor/vest))
-				if(!user.unEquip(W))
+				if(!user.temporarilyRemoveItemFromInventory(W))
 					return
 				lasercolor = newcolor
 				qdel(W)
 				build_step++
-				user << "<span class='notice'>You add the armor to [src].</span>"
+				to_chat(user, "<span class='notice'>You add the armor to [src].</span>")
 				name = "vest/legs/frame assembly"
 				item_state = "[lasercolor]ed209_shell"
 				icon_state = "[lasercolor]ed209_shell"
@@ -97,7 +96,7 @@
 				if(WT.remove_fuel(0,user))
 					build_step++
 					name = "shielded frame assembly"
-					user << "<span class='notice'>You weld the vest to [src].</span>"
+					to_chat(user, "<span class='notice'>You weld the vest to [src].</span>")
 		if(4)
 			switch(lasercolor)
 				if("b")
@@ -112,22 +111,22 @@
 					if(!istype(W, /obj/item/clothing/head/helmet))
 						return
 
-			if(!user.unEquip(W))
+			if(!user.temporarilyRemoveItemFromInventory(W))
 				return
 			qdel(W)
 			build_step++
-			user << "<span class='notice'>You add the helmet to [src].</span>"
+			to_chat(user, "<span class='notice'>You add the helmet to [src].</span>")
 			name = "covered and shielded frame assembly"
 			item_state = "[lasercolor]ed209_hat"
 			icon_state = "[lasercolor]ed209_hat"
 
 		if(5)
 			if(isprox(W))
-				if(!user.unEquip(W))
+				if(!user.temporarilyRemoveItemFromInventory(W))
 					return
 				qdel(W)
 				build_step++
-				user << "<span class='notice'>You add the prox sensor to [src].</span>"
+				to_chat(user, "<span class='notice'>You add the prox sensor to [src].</span>")
 				name = "covered, shielded and sensored frame assembly"
 				item_state = "[lasercolor]ed209_prox"
 				icon_state = "[lasercolor]ed209_prox"
@@ -136,14 +135,14 @@
 			if(istype(W, /obj/item/stack/cable_coil))
 				var/obj/item/stack/cable_coil/coil = W
 				if(coil.get_amount() < 1)
-					user << "<span class='warning'>You need one length of cable to wire the ED-209!</span>"
+					to_chat(user, "<span class='warning'>You need one length of cable to wire the ED-209!</span>")
 					return
-				user << "<span class='notice'>You start to wire [src]...</span>"
+				to_chat(user, "<span class='notice'>You start to wire [src]...</span>")
 				if(do_after(user, 40, target = src))
 					if(coil.get_amount() >= 1 && build_step == 6)
 						coil.use(1)
 						build_step = 7
-						user << "<span class='notice'>You wire the ED-209 assembly.</span>"
+						to_chat(user, "<span class='notice'>You wire the ED-209 assembly.</span>")
 						name = "wired ED-209 assembly"
 
 		if(7)
@@ -163,11 +162,11 @@
 					newname = "taser ED-209 assembly"
 				else
 					return
-			if(!user.unEquip(W))
+			if(!user.temporarilyRemoveItemFromInventory(W))
 				return
 			name = newname
 			build_step++
-			user << "<span class='notice'>You add [W] to [src].</span>"
+			to_chat(user, "<span class='notice'>You add [W] to [src].</span>")
 			item_state = "[lasercolor]ed209_taser"
 			icon_state = "[lasercolor]ed209_taser"
 			qdel(W)
@@ -175,31 +174,28 @@
 		if(8)
 			if(istype(W, /obj/item/weapon/screwdriver))
 				playsound(loc, W.usesound, 100, 1)
-				var/turf/T = get_turf(user)
-				user << "<span class='notice'>You start attaching the gun to the frame...</span>"
-				sleep(40)
-				if(get_turf(user) == T)
+				to_chat(user, "<span class='notice'>You start attaching the gun to the frame...</span>")
+				if(do_after(user, 40*W.toolspeed, 0, src, 1))
 					build_step++
 					name = "armed [name]"
-					user << "<span class='notice'>Taser gun attached.</span>"
+					to_chat(user, "<span class='notice'>Taser gun attached.</span>")
 
 		if(9)
 			if(istype(W, /obj/item/weapon/stock_parts/cell))
-				if(!user.unEquip(W))
+				if(!user.temporarilyRemoveItemFromInventory(W))
 					return
 				build_step++
-				user << "<span class='notice'>You complete the ED-209.</span>"
+				to_chat(user, "<span class='notice'>You complete the ED-209.</span>")
 				var/turf/T = get_turf(src)
 				new /mob/living/simple_animal/bot/ed209(T,created_name,lasercolor)
 				qdel(W)
-				user.unEquip(src, 1)
 				qdel(src)
 
 //Floorbot assemblies
 /obj/item/weapon/toolbox_tiles
 	desc = "It's a toolbox with tiles sticking out the top"
 	name = "tiles and toolbox"
-	icon = 'icons/obj/aibots.dmi'
+	icon = 'icons/mob/aibots.dmi'
 	icon_state = "toolbox_tiles"
 	force = 3
 	throwforce = 10
@@ -211,7 +207,7 @@
 /obj/item/weapon/toolbox_tiles_sensor
 	desc = "It's a toolbox with tiles sticking out the top and a sensor attached"
 	name = "tiles, toolbox and sensor arrangement"
-	icon = 'icons/obj/aibots.dmi'
+	icon = 'icons/mob/aibots.dmi'
 	icon_state = "toolbox_tiles_sensor"
 	force = 3
 	throwforce = 10
@@ -225,18 +221,17 @@
 		..()
 		return
 	if(contents.len >= 1)
-		user << "<span class='warning'>They won't fit in, as there is already stuff inside!</span>"
+		to_chat(user, "<span class='warning'>They won't fit in, as there is already stuff inside!</span>")
 		return
 	if(T.use(10))
 		if(user.s_active)
 			user.s_active.close(user)
 		var/obj/item/weapon/toolbox_tiles/B = new /obj/item/weapon/toolbox_tiles
 		user.put_in_hands(B)
-		user << "<span class='notice'>You add the tiles into the empty toolbox. They protrude from the top.</span>"
-		user.unEquip(src, 1)
+		to_chat(user, "<span class='notice'>You add the tiles into the empty toolbox. They protrude from the top.</span>")
 		qdel(src)
 	else
-		user << "<span class='warning'>You need 10 floor tiles to start building a floorbot!</span>"
+		to_chat(user, "<span class='warning'>You need 10 floor tiles to start building a floorbot!</span>")
 		return
 
 /obj/item/weapon/toolbox_tiles/attackby(obj/item/W, mob/user, params)
@@ -246,8 +241,7 @@
 		var/obj/item/weapon/toolbox_tiles_sensor/B = new /obj/item/weapon/toolbox_tiles_sensor()
 		B.created_name = created_name
 		user.put_in_hands(B)
-		user << "<span class='notice'>You add the sensor to the toolbox and tiles.</span>"
-		user.unEquip(src, 1)
+		to_chat(user, "<span class='notice'>You add the sensor to the toolbox and tiles.</span>")
 		qdel(src)
 
 	else if(istype(W, /obj/item/weapon/pen))
@@ -266,8 +260,7 @@
 		var/turf/T = get_turf(user.loc)
 		var/mob/living/simple_animal/bot/floorbot/A = new /mob/living/simple_animal/bot/floorbot(T)
 		A.name = created_name
-		user << "<span class='notice'>You add the robot arm to the odd looking toolbox assembly. Boop beep!</span>"
-		user.unEquip(src, 1)
+		to_chat(user, "<span class='notice'>You add the robot arm to the odd looking toolbox assembly. Boop beep!</span>")
 		qdel(src)
 	else if(istype(W, /obj/item/weapon/pen))
 		var/t = stripped_input(user, "Enter new robot name", name, created_name,MAX_NAME_LEN)
@@ -282,7 +275,7 @@
 /obj/item/weapon/firstaid_arm_assembly
 	name = "incomplete medibot assembly."
 	desc = "A first aid kit with a robot arm permanently grafted to it."
-	icon = 'icons/obj/aibots.dmi'
+	icon = 'icons/mob/aibots.dmi'
 	icon_state = "firstaid_arm"
 	var/build_step = 0
 	var/created_name = "Medibot" //To preserve the name if it's a unique medbot I guess
@@ -293,7 +286,7 @@
 		..()
 		spawn(5)
 			if(skin)
-				add_overlay(image('icons/obj/aibots.dmi', "kit_skin_[skin]"))
+				add_overlay(image('icons/mob/aibots.dmi', "kit_skin_[skin]"))
 
 /obj/item/weapon/storage/firstaid/attackby(obj/item/bodypart/S, mob/user, params)
 
@@ -302,7 +295,7 @@
 
 	//Making a medibot!
 	if(contents.len >= 1)
-		user << "<span class='warning'>You need to empty [src] out first!</span>"
+		to_chat(user, "<span class='warning'>You need to empty [src] out first!</span>")
 		return
 
 	var/obj/item/weapon/firstaid_arm_assembly/A = new /obj/item/weapon/firstaid_arm_assembly
@@ -317,8 +310,7 @@
 
 	qdel(S)
 	user.put_in_hands(A)
-	user << "<span class='notice'>You add the robot arm to the first aid kit.</span>"
-	user.unEquip(src, 1)
+	to_chat(user, "<span class='notice'>You add the robot arm to the first aid kit.</span>")
 	qdel(src)
 
 
@@ -335,33 +327,32 @@
 		switch(build_step)
 			if(0)
 				if(istype(W, /obj/item/device/healthanalyzer))
-					if(!user.unEquip(W))
+					if(!user.temporarilyRemoveItemFromInventory(W))
 						return
 					qdel(W)
 					build_step++
-					user << "<span class='notice'>You add the health sensor to [src].</span>"
+					to_chat(user, "<span class='notice'>You add the health sensor to [src].</span>")
 					name = "First aid/robot arm/health analyzer assembly"
-					add_overlay(image('icons/obj/aibots.dmi', "na_scanner"))
+					add_overlay(image('icons/mob/aibots.dmi', "na_scanner"))
 
 			if(1)
 				if(isprox(W))
-					if(!user.unEquip(W))
+					if(!user.temporarilyRemoveItemFromInventory(W))
 						return
 					qdel(W)
 					build_step++
-					user << "<span class='notice'>You complete the Medibot. Beep boop!</span>"
+					to_chat(user, "<span class='notice'>You complete the Medibot. Beep boop!</span>")
 					var/turf/T = get_turf(src)
 					var/mob/living/simple_animal/bot/medbot/S = new /mob/living/simple_animal/bot/medbot(T)
 					S.skin = skin
 					S.name = created_name
-					user.unEquip(src, 1)
 					qdel(src)
 
 //Secbot Assembly
 /obj/item/weapon/secbot_assembly
 	name = "incomplete securitron assembly"
 	desc = "Some sort of bizarre assembly made from a proximity sensor, helmet, and signaler."
-	icon = 'icons/obj/aibots.dmi'
+	icon = 'icons/mob/aibots.dmi'
 	icon_state = "helmet_signaler"
 	item_state = "helmet"
 	var/build_step = 0
@@ -377,15 +368,14 @@
 		return
 
 	if(F) //Has a flashlight. Player must remove it, else it will be lost forever.
-		user << "<span class='warning'>The mounted flashlight is in the way, remove it first!</span>"
+		to_chat(user, "<span class='warning'>The mounted flashlight is in the way, remove it first!</span>")
 		return
 
 	if(S.secured)
 		qdel(S)
 		var/obj/item/weapon/secbot_assembly/A = new /obj/item/weapon/secbot_assembly
 		user.put_in_hands(A)
-		user << "<span class='notice'>You add the signaler to the helmet.</span>"
-		user.unEquip(src, 1)
+		to_chat(user, "<span class='notice'>You add the signaler to the helmet.</span>")
 		qdel(src)
 	else
 		return
@@ -398,40 +388,41 @@
 			if(WT.remove_fuel(0, user))
 				build_step++
 				add_overlay("hs_hole")
-				user << "<span class='notice'>You weld a hole in [src]!</span>"
+				to_chat(user, "<span class='notice'>You weld a hole in [src]!</span>")
 		else if(build_step == 1)
 			var/obj/item/weapon/weldingtool/WT = I
 			if(WT.remove_fuel(0, user))
 				build_step--
-				overlays -= "hs_hole"
-				user << "<span class='notice'>You weld the hole in [src] shut!</span>"
+				cut_overlay("hs_hole")
+				to_chat(user, "<span class='notice'>You weld the hole in [src] shut!</span>")
 
 	else if(isprox(I) && (build_step == 1))
-		if(!user.unEquip(I))
+		if(!user.temporarilyRemoveItemFromInventory(I))
 			return
 		build_step++
-		user << "<span class='notice'>You add the prox sensor to [src]!</span>"
+		to_chat(user, "<span class='notice'>You add the prox sensor to [src]!</span>")
 		add_overlay("hs_eye")
 		name = "helmet/signaler/prox sensor assembly"
 		qdel(I)
 
 	else if(((istype(I, /obj/item/bodypart/l_arm/robot)) || (istype(I, /obj/item/bodypart/r_arm/robot))) && (build_step == 2))
-		if(!user.unEquip(I))
+		if(!user.temporarilyRemoveItemFromInventory(I))
 			return
 		build_step++
-		user << "<span class='notice'>You add the robot arm to [src]!</span>"
+		to_chat(user, "<span class='notice'>You add the robot arm to [src]!</span>")
 		name = "helmet/signaler/prox sensor/robot arm assembly"
 		add_overlay("hs_arm")
 		qdel(I)
 
 	else if((istype(I, /obj/item/weapon/melee/baton)) && (build_step >= 3))
-		if(!user.unEquip(I))
+		if(!user.temporarilyRemoveItemFromInventory(I))
 			return
 		build_step++
-		user << "<span class='notice'>You complete the Securitron! Beep boop.</span>"
+		to_chat(user, "<span class='notice'>You complete the Securitron! Beep boop.</span>")
 		var/mob/living/simple_animal/bot/secbot/S = new /mob/living/simple_animal/bot/secbot
 		S.loc = get_turf(src)
 		S.name = created_name
+		S.baton_type = I.type
 		qdel(I)
 		qdel(src)
 
@@ -447,17 +438,17 @@
 		if(!build_step)
 			new /obj/item/device/assembly/signaler(get_turf(src))
 			new /obj/item/clothing/head/helmet/sec(get_turf(src))
-			user << "<span class='notice'>You disconnect the signaler from the helmet.</span>"
+			to_chat(user, "<span class='notice'>You disconnect the signaler from the helmet.</span>")
 			qdel(src)
 
 		else if(build_step == 2)
-			overlays -= "hs_eye"
+			cut_overlay("hs_eye")
 			new /obj/item/device/assembly/prox_sensor(get_turf(src))
-			user << "<span class='notice'>You detach the proximity sensor from [src].</span>"
+			to_chat(user, "<span class='notice'>You detach the proximity sensor from [src].</span>")
 			build_step--
 
 		else if(build_step == 3)
-			overlays -= "hs_arm"
+			cut_overlay("hs_arm")
 			new /obj/item/bodypart/l_arm/robot(get_turf(src))
-			user << "<span class='notice'>You remove the robot arm from [src].</span>"
+			to_chat(user, "<span class='notice'>You remove the robot arm from [src].</span>")
 			build_step--
