diff a/code/modules/mob/living/simple_animal/hostile/megafauna/dragon.dm b/code/modules/mob/living/simple_animal/hostile/megafauna/dragon.dm	(rejected hunks)
@@ -53,7 +53,7 @@ Difficulty: Medium
 	deathmessage = "collapses into a pile of bones, its flesh sloughing away."
 	death_sound = 'sound/magic/demon_dies.ogg'
 
-/mob/living/simple_animal/hostile/megafauna/dragon/New()
+/mob/living/simple_animal/hostile/megafauna/dragon/Initialize()
 	..()
 	internal = new/obj/item/device/gps/internal/dragon(src)
 
@@ -96,7 +96,7 @@ Difficulty: Medium
 	duration = 12
 	pixel_z = 500
 
-/obj/effect/overlay/temp/fireball/New(loc)
+/obj/effect/overlay/temp/fireball/Initialize(loc)
 	..()
 	animate(src, pixel_z = 0, time = 12)
 
@@ -104,7 +104,7 @@ Difficulty: Medium
 	icon = 'icons/mob/actions.dmi'
 	icon_state = "sniper_zoom"
 	layer = BELOW_MOB_LAYER
-	luminosity = 2
+	light_range = 2
 	duration = 12
 
 /obj/effect/overlay/temp/dragon_swoop
@@ -121,14 +121,14 @@ Difficulty: Medium
 /obj/effect/overlay/temp/target/ex_act()
 	return
 
-/obj/effect/overlay/temp/target/New(loc)
+/obj/effect/overlay/temp/target/Initialize(loc)
 	..()
-	addtimer(src, "fall", 0)
+	INVOKE_ASYNC(src, .proc/fall)
 
 /obj/effect/overlay/temp/target/proc/fall()
 	var/turf/T = get_turf(src)
 	playsound(T,'sound/magic/Fireball.ogg', 200, 1)
-	PoolOrNew(/obj/effect/overlay/temp/fireball,T)
+	new /obj/effect/overlay/temp/fireball(T)
 	sleep(12)
 	explosion(T, 0, 0, 1, 0, 0, 0, 1)
 
@@ -141,15 +141,15 @@ Difficulty: Medium
 
 	if(prob(15 + anger_modifier) && !client)
 		if(health < maxHealth/2)
-			addtimer(src, "swoop_attack", 0, TIMER_NORMAL, 1)
+			INVOKE_ASYNC(src, .proc/swoop_attack, 1)
 		else
 			fire_rain()
 
 	else if(prob(10+anger_modifier) && !client)
 		if(health > maxHealth/2)
-			addtimer(src, "swoop_attack", 0)
+			INVOKE_ASYNC(src, .proc/swoop_attack)
 		else
-			addtimer(src, "triple_swoop", 0)
+			INVOKE_ASYNC(src, .proc/triple_swoop)
 	else
 		fire_walls()
 
@@ -157,13 +157,13 @@ Difficulty: Medium
 	visible_message("<span class='boldwarning'>Fire rains from the sky!</span>")
 	for(var/turf/turf in range(12,get_turf(src)))
 		if(prob(10))
-			PoolOrNew(/obj/effect/overlay/temp/target, turf)
+			new /obj/effect/overlay/temp/target(turf)
 
 /mob/living/simple_animal/hostile/megafauna/dragon/proc/fire_walls()
 	playsound(get_turf(src),'sound/magic/Fireball.ogg', 200, 1)
 
 	for(var/d in cardinal)
-		addtimer(src, "fire_wall", 0, TIMER_NORMAL, d)
+		INVOKE_ASYNC(src, .proc/fire_wall, d)
 
 /mob/living/simple_animal/hostile/megafauna/dragon/proc/fire_wall(dir)
 	var/list/hit_things = list(src)
@@ -174,11 +174,11 @@ Difficulty: Medium
 		if(!range || (J != previousturf && (!previousturf.atmos_adjacent_turfs || !previousturf.atmos_adjacent_turfs[J])))
 			break
 		range--
-		PoolOrNew(/obj/effect/hotspot,J)
+		new /obj/effect/hotspot(J)
 		J.hotspot_expose(700,50,1)
 		for(var/mob/living/L in J.contents - hit_things)
 			L.adjustFireLoss(20)
-			L << "<span class='userdanger'>You're hit by the drake's fire breath!</span>"
+			to_chat(L, "<span class='userdanger'>You're hit by the drake's fire breath!</span>")
 			hit_things += L
 		previousturf = J
 		sleep(1)
@@ -213,12 +213,12 @@ Difficulty: Medium
 		fire_rain()
 
 	icon_state = "dragon"
-	if(swoop_target && !qdeleted(swoop_target) && swoop_target.z == src.z)
+	if(swoop_target && !QDELETED(swoop_target) && swoop_target.z == src.z)
 		tturf = get_turf(swoop_target)
 	else
 		tturf = get_turf(src)
 	forceMove(tturf)
-	PoolOrNew(/obj/effect/overlay/temp/dragon_swoop, tturf)
+	new /obj/effect/overlay/temp/dragon_swoop(tturf)
 	animate(src, pixel_x = initial(pixel_x), pixel_z = 0, time = 10)
 	sleep(10)
 	playsound(src.loc, 'sound/effects/meteorimpact.ogg', 200, 1)
@@ -228,12 +228,12 @@ Difficulty: Medium
 			L.gib()
 		else
 			L.adjustBruteLoss(75)
-			if(L && !qdeleted(L)) // Some mobs are deleted on death
+			if(L && !QDELETED(L)) // Some mobs are deleted on death
 				var/throw_dir = get_dir(src, L)
 				if(L.loc == loc)
 					throw_dir = pick(alldirs)
 				var/throwtarget = get_edge_target_turf(src, throw_dir)
-				L.throw_at_fast(throwtarget, 3)
+				L.throw_at(throwtarget, 3)
 				visible_message("<span class='warning'>[L] is thrown clear of [src]!</span>")
 
 	for(var/mob/M in range(7, src))
@@ -247,7 +247,7 @@ Difficulty: Medium
 	if(!istype(A))
 		return
 	if(swoop_cooldown >= world.time)
-		src << "<span class='warning'>You need to wait 20 seconds between swoop attacks!</span>"
+		to_chat(src, "<span class='warning'>You need to wait 20 seconds between swoop attacks!</span>")
 		return
 	swoop_attack(1, A)
 
