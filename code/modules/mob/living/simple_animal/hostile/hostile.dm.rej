diff a/code/modules/mob/living/simple_animal/hostile/hostile.dm b/code/modules/mob/living/simple_animal/hostile/hostile.dm	(rejected hunks)
@@ -54,7 +54,7 @@
 	var/lose_patience_timeout = 300 //30 seconds by default, so there's no major changes to AI behaviour, beyond actually bailing if stuck forever
 
 
-/mob/living/simple_animal/hostile/New()
+/mob/living/simple_animal/hostile/Initialize()
 	..()
 
 	if(!targets_from)
@@ -103,19 +103,16 @@
 //////////////HOSTILE MOB TARGETTING AND AGGRESSION////////////
 
 /mob/living/simple_animal/hostile/proc/ListTargets()//Step 1, find out what we can see
-	. = list()
 	if(!search_objects)
-		var/list/Mobs = hearers(vision_range, targets_from) - src //Remove self, so we don't suicide
-		. += Mobs
+		. = hearers(vision_range, targets_from) - src //Remove self, so we don't suicide
 
-		var/static/hostile_machines = typecacheof(list(/obj/machinery/porta_turret, /obj/mecha))
+		var/static/hostile_machines = typecacheof(list(/obj/machinery/porta_turret, /obj/mecha, /obj/structure/destructible/clockwork/ocular_warden))
 
 		for(var/HM in typecache_filter_list(range(vision_range, targets_from), hostile_machines))
 			if(can_see(targets_from, HM, vision_range))
 				. += HM
 	else
-		var/list/Objects = oview(vision_range, targets_from)
-		. += Objects
+		. = oview(vision_range, targets_from)
 
 /mob/living/simple_animal/hostile/proc/FindTarget(var/list/possible_targets, var/HasTargetsList = 0)//Step 2, filter down possible targets to things we actually care about
 	. = list()
@@ -172,7 +169,7 @@
 	if(search_objects < 2)
 		if(isliving(the_target))
 			var/mob/living/L = the_target
-			var/faction_check = faction_check(L)
+			var/faction_check = faction_check_mob(L)
 			if(robust_searching)
 				if(L.stat > stat_attack || L.stat != stat_attack && stat_exclusive == 1)
 					return 0
@@ -203,6 +200,12 @@
 				return 0
 			return 1
 
+		if(istype(the_target, /obj/structure/destructible/clockwork/ocular_warden))
+			var/obj/structure/destructible/clockwork/ocular_warden/OW = the_target
+			if(OW.target != src)
+				return FALSE
+			return TRUE
+
 
 	if(isobj(the_target))
 		if(attack_all_objects || is_type_in_typecache(the_target, wanted_objects))
@@ -306,11 +309,7 @@
 	do_alert_animation(src)
 	playsound(loc, 'sound/machines/chime.ogg', 50, 1, -1)
 	for(var/mob/living/simple_animal/hostile/M in oview(distance, targets_from))
-		var/list/L = M.faction&faction
-		var/success = L.len
-		if(exact_faction_match)
-			success = (L.len == faction.len) //since the above op is &, an exact match would be of the same length
-		if(success)
+		if(faction_check_mob(M, TRUE))
 			if(M.AIStatus == AI_OFF)
 				return
 			else
@@ -322,17 +321,15 @@
 			for(var/mob/living/L in T)
 				if(L == src || L == A)
 					continue
-				if(faction_check(L) && !attack_same)
+				if(faction_check_mob(L) && !attack_same)
 					return
 	visible_message("<span class='danger'><b>[src]</b> [ranged_message] at [A]!</span>")
 
 	if(rapid)
-		spawn(1)
-			Shoot(A)
-		spawn(4)
-			Shoot(A)
-		spawn(6)
-			Shoot(A)
+		var/datum/callback/cb = CALLBACK(src, .proc/Shoot, A)
+		addtimer(cb, 1)
+		addtimer(cb, 4)
+		addtimer(cb, 6)
 	else
 		Shoot(A)
 	ranged_cooldown = world.time + ranged_cooldown_time
@@ -421,7 +418,7 @@
 /mob/living/simple_animal/hostile/proc/GainPatience()
 	if(lose_patience_timeout)
 		LosePatience()
-		lose_patience_timer_id = addtimer(src, "LoseTarget", lose_patience_timeout)
+		lose_patience_timer_id = addtimer(CALLBACK(src, .proc/LoseTarget), lose_patience_timeout, TIMER_STOPPABLE)
 
 
 /mob/living/simple_animal/hostile/proc/LosePatience()
@@ -432,10 +429,10 @@
 /mob/living/simple_animal/hostile/proc/LoseSearchObjects()
 	search_objects = 0
 	deltimer(search_objects_timer_id)
-	search_objects_timer_id = addtimer(src, "RegainSearchObjects", search_objects_regain_time)
+	search_objects_timer_id = addtimer(CALLBACK(src, .proc/RegainSearchObjects), search_objects_regain_time, TIMER_STOPPABLE)
 
 
 /mob/living/simple_animal/hostile/proc/RegainSearchObjects(value)
 	if(!value)
 		value = initial(search_objects)
-	search_objects = value
\ No newline at end of file
+	search_objects = value
