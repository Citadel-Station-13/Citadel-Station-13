diff a/code/modules/mob/living/simple_animal/friendly/farm_animals.dm b/code/modules/mob/living/simple_animal/friendly/farm_animals.dm	(rejected hunks)
@@ -29,7 +29,7 @@
 	blood_volume = BLOOD_VOLUME_NORMAL
 	var/obj/item/udder/udder = null
 
-/mob/living/simple_animal/hostile/retaliate/goat/New()
+/mob/living/simple_animal/hostile/retaliate/goat/Initialize()
 	udder = new()
 	..()
 /mob/living/simple_animal/hostile/retaliate/goat/Destroy()
@@ -106,7 +106,7 @@
 	gold_core_spawnable = 2
 	blood_volume = BLOOD_VOLUME_NORMAL
 
-/mob/living/simple_animal/cow/New()
+/mob/living/simple_animal/cow/Initialize()
 	udder = new()
 	..()
 
@@ -131,7 +131,7 @@
 	if(!stat && M.a_intent == INTENT_DISARM && icon_state != icon_dead)
 		M.visible_message("<span class='warning'>[M] tips over [src].</span>",
 			"<span class='notice'>You tip over [src].</span>")
-		src << "<span class='userdanger'>You are tipped over by [M]!</span>"
+		to_chat(src, "<span class='userdanger'>You are tipped over by [M]!</span>")
 		Weaken(30)
 		icon_state = icon_dead
 		spawn(rand(20,50))
@@ -181,7 +181,7 @@
 	mob_size = MOB_SIZE_TINY
 	gold_core_spawnable = 2
 
-/mob/living/simple_animal/chick/New()
+/mob/living/simple_animal/chick/Initialize()
 	..()
 	pixel_x = rand(-6, 6)
 	pixel_y = rand(0, 10)
@@ -238,7 +238,7 @@ var/global/chicken_count = 0
 	var/list/validColors = list("brown","black","white")
 	gold_core_spawnable = 2
 
-/mob/living/simple_animal/chicken/New()
+/mob/living/simple_animal/chicken/Initialize()
 	..()
 	if(!body_color)
 		body_color = pick(validColors)
@@ -261,9 +261,9 @@ var/global/chicken_count = 0
 			user.drop_item()
 			qdel(O)
 			eggsleft += rand(1, 4)
-			//world << eggsleft
+			//to_chat(world, eggsleft)
 		else
-			user << "<span class='warning'>[name] doesn't seem hungry!</span>"
+			to_chat(user, "<span class='warning'>[name] doesn't seem hungry!</span>")
 	else
 		..()
 
@@ -297,7 +297,7 @@ var/global/chicken_count = 0
 /obj/item/udder
 	name = "udder"
 
-/obj/item/udder/New()
+/obj/item/udder/Initialize()
 	reagents = new(50)
 	reagents.my_atom = src
 	reagents.add_reagent("milk", 20)
@@ -310,14 +310,10 @@ var/global/chicken_count = 0
 /obj/item/udder/proc/milkAnimal(obj/O, mob/user)
 	var/obj/item/weapon/reagent_containers/glass/G = O
 	if(G.reagents.total_volume >= G.volume)
-		user << "<span class='danger'>[O] is full.</span>"
+		to_chat(user, "<span class='danger'>[O] is full.</span>")
 		return
 	var/transfered = reagents.trans_to(O, rand(5,10))
 	if(transfered)
 		user.visible_message("[user] milks [src] using \the [O].", "<span class='notice'>You milk [src] using \the [O].</span>")
 	else
-		user << "<span class='danger'>The udder is dry. Wait a bit longer...</span>"
-
-/obj/item/udder/Destroy()
-	qdel(reagents)
-	return ..()
+		to_chat(user, "<span class='danger'>The udder is dry. Wait a bit longer...</span>")
