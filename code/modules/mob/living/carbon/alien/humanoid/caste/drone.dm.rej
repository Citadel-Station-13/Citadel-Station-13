diff a/code/modules/mob/living/carbon/alien/humanoid/caste/drone.dm b/code/modules/mob/living/carbon/alien/humanoid/caste/drone.dm	(rejected hunks)
@@ -3,10 +3,10 @@
 	caste = "d"
 	maxHealth = 125
 	health = 125
-	icon_state = "aliend_s"
+	icon_state = "aliend"
 
 
-/mob/living/carbon/alien/humanoid/drone/New()
+/mob/living/carbon/alien/humanoid/drone/Initialize()
 	AddAbility(new/obj/effect/proc_holder/alien/evolve(null))
 	..()
 
@@ -30,19 +30,19 @@
 /obj/effect/proc_holder/alien/evolve/fire(mob/living/carbon/alien/humanoid/user)
 	var/obj/item/organ/alien/hivenode/node = user.getorgan(/obj/item/organ/alien/hivenode)
 	if(!node) //Players are Murphy's Law. We may not expect there to ever be a living xeno with no hivenode, but they _WILL_ make it happen.
-		user << "<span class='danger'>Without the hivemind, you can't possibly hold the responsibility of leadership!</span>"
+		to_chat(user, "<span class='danger'>Without the hivemind, you can't possibly hold the responsibility of leadership!</span>")
 		return 0
 	if(node.recent_queen_death)
-		user << "<span class='danger'>Your thoughts are still too scattered to take up the position of leadership.</span>"
+		to_chat(user, "<span class='danger'>Your thoughts are still too scattered to take up the position of leadership.</span>")
 		return 0
 
 	if(!isturf(user.loc))
-		user << "<span class='notice'>You can't evolve here!</span>"
+		to_chat(user, "<span class='notice'>You can't evolve here!</span>")
 		return 0
 	if(!get_alien_type(/mob/living/carbon/alien/humanoid/royal))
 		var/mob/living/carbon/alien/humanoid/royal/praetorian/new_xeno = new (user.loc)
 		user.alien_evolve(new_xeno)
 		return 1
 	else
-		user << "<span class='notice'>We already have a living royal!</span>"
+		to_chat(user, "<span class='notice'>We already have a living royal!</span>")
 		return 0
\ No newline at end of file
