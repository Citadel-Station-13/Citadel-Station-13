diff a/code/modules/mob/mob_transformation_simple.dm b/code/modules/mob/mob_transformation_simple.dm	(rejected hunks)
@@ -5,7 +5,7 @@
 /mob/proc/change_mob_type(new_type = null, turf/location = null, new_name = null as text, delete_old_mob = 0 as num)
 
 	if(isnewplayer(src))
-		usr << "<span class='danger'>Cannot convert players who have not entered yet.</span>"
+		to_chat(usr, "<span class='danger'>Cannot convert players who have not entered yet.</span>")
 		return
 
 	if(!new_type)
@@ -15,11 +15,11 @@
 		new_type = text2path(new_type)
 
 	if( !ispath(new_type) )
-		usr << "Invalid type path (new_type = [new_type]) in change_mob_type(). Contact a coder."
+		to_chat(usr, "Invalid type path (new_type = [new_type]) in change_mob_type(). Contact a coder.")
 		return
 
-	if(ispath(new_type, /mob/new_player))
-		usr << "<span class='danger'>Cannot convert into a new_player mob type.</span>"
+	if(ispath(new_type, /mob/dead/new_player))
+		to_chat(usr, "<span class='danger'>Cannot convert into a new_player mob type.</span>")
 		return
 
 	var/mob/M
@@ -29,7 +29,7 @@
 		M = new new_type( src.loc )
 
 	if(!M || !ismob(M))
-		usr << "Type path is not a mob (new_type = [new_type]) in change_mob_type(). Contact a coder."
+		to_chat(usr, "Type path is not a mob (new_type = [new_type]) in change_mob_type(). Contact a coder.")
 		qdel(M)
 		return
 
@@ -56,6 +56,5 @@
 		M.key = key
 
 	if(delete_old_mob)
-		spawn(1)
-			qdel(src)
+		QDEL_IN(src, 1)
 	return M
