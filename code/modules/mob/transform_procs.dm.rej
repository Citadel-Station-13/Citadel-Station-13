diff a/code/modules/mob/transform_procs.dm b/code/modules/mob/transform_procs.dm	(rejected hunks)
@@ -32,7 +32,7 @@
 		var/Itemlist = get_equipped_items()
 		Itemlist += held_items
 		for(var/obj/item/W in Itemlist)
-			unEquip(W)
+			dropItemToGround(W)
 
 	//Make mob invisible and spawn animation
 	notransform = 1
@@ -42,7 +42,7 @@
 	cut_overlays()
 	invisibility = INVISIBILITY_MAXIMUM
 
-	PoolOrNew(/obj/effect/overlay/temp/monkeyify, get_turf(src))
+	new /obj/effect/overlay/temp/monkeyify(get_turf(src))
 	sleep(22)
 	var/mob/living/carbon/monkey/O = new /mob/living/carbon/monkey( loc )
 
@@ -82,6 +82,7 @@
 		O.setOxyLoss(getOxyLoss(), 0)
 		O.setCloneLoss(getCloneLoss(), 0)
 		O.adjustFireLoss(getFireLoss(), 0)
+		O.setBrainLoss(getBrainLoss(), 0)
 		O.updatehealth()
 		O.radiation = radiation
 
@@ -125,7 +126,7 @@
 
 
 	if (tr_flags & TR_DEFAULTMSG)
-		O << "<B>You are now a monkey.</B>"
+		to_chat(O, "<B>You are now a monkey.</B>")
 
 	for(var/A in loc.vars)
 		if(loc.vars[A] == src)
@@ -173,14 +174,9 @@
 		var/Itemlist = get_equipped_items()
 		Itemlist += held_items
 		for(var/obj/item/W in Itemlist)
-			unEquip(W)
+			dropItemToGround(W, TRUE)
 			if (client)
 				client.screen -= W
-			if (W)
-				W.loc = loc
-				W.dropped(src)
-				W.layer = initial(W.layer)
-				W.plane = initial(W.plane)
 
 
 
@@ -191,7 +187,7 @@
 	icon = null
 	cut_overlays()
 	invisibility = INVISIBILITY_MAXIMUM
-	PoolOrNew(/obj/effect/overlay/temp/monkeyify/humanify, get_turf(src))
+	new /obj/effect/overlay/temp/monkeyify/humanify(get_turf(src))
 	sleep(22)
 	var/mob/living/carbon/human/O = new( loc )
 	for(var/obj/item/C in O.loc)
@@ -236,6 +232,7 @@
 		O.setOxyLoss(getOxyLoss(), 0)
 		O.setCloneLoss(getCloneLoss(), 0)
 		O.adjustFireLoss(getFireLoss(), 0)
+		O.setBrainLoss(getBrainLoss(), 0)
 		O.updatehealth()
 		O.radiation = radiation
 
@@ -279,7 +276,7 @@
 
 	O.a_intent = INTENT_HELP
 	if (tr_flags & TR_DEFAULTMSG)
-		O << "<B>You are now a human.</B>"
+		to_chat(O, "<B>You are now a human.</B>")
 
 	. = O
 
@@ -289,11 +286,6 @@
 
 	qdel(src)
 
-
-/mob/new_player/AIize()
-	spawning = 1
-	return ..()
-
 /mob/living/carbon/human/AIize()
 	if (notransform)
 		return
@@ -306,7 +298,7 @@
 	if (notransform)
 		return
 	for(var/obj/item/W in src)
-		unEquip(W)
+		dropItemToGround(W)
 	regenerate_icons()
 	notransform = 1
 	canmove = 0
@@ -314,7 +306,7 @@
 	invisibility = INVISIBILITY_MAXIMUM
 	return ..()
 
-/mob/proc/AIize()
+/mob/proc/AIize(transfer_after = TRUE)
 	if(client)
 		stopLobbySound()
 
@@ -332,25 +324,26 @@
 					continue
 				loc_landmark = tripai.loc
 	if(!loc_landmark)
-		src << "Oh god sorry we can't find an unoccupied AI spawn location, so we're spawning you on top of someone."
+		to_chat(src, "Oh god sorry we can't find an unoccupied AI spawn location, so we're spawning you on top of someone.")
 		for(var/obj/effect/landmark/start/sloc in landmarks_list)
 			if (sloc.name == "AI")
 				loc_landmark = sloc.loc
 
+	if(!transfer_after)
+		mind.active = FALSE
+
 	. = new /mob/living/silicon/ai(loc_landmark, null, src)
-	qdel(src)
-	return
 
+	qdel(src)
 
-//human -> robot
-/mob/living/carbon/human/proc/Robotize(delete_items = 0)
+/mob/living/carbon/human/proc/Robotize(delete_items = 0, transfer_after = TRUE)
 	if (notransform)
 		return
 	for(var/obj/item/W in src)
 		if(delete_items)
 			qdel(W)
 		else
-			unEquip(W)
+			dropItemToGround(W)
 	regenerate_icons()
 	notransform = 1
 	canmove = 0
@@ -370,12 +363,13 @@
 	R.gender = gender
 	R.invisibility = 0
 
-
 	if(mind)		//TODO
+		if(!transfer_after)
+			mind.active = FALSE
 		mind.transfer_to(R)
 		if(mind.special_role)
 			R.mind.store_memory("In case you look at this after being borged, the objectives are only here until I find a way to make them not show up for you, as I can't simply delete them without screwing up round-end reporting. --NeoFite")
-	else
+	else if(transfer_after)
 		R.key = key
 
 	if (config.rename_cyborg)
@@ -401,7 +395,7 @@
 	if (notransform)
 		return
 	for(var/obj/item/W in src)
-		unEquip(W)
+		dropItemToGround(W)
 	regenerate_icons()
 	notransform = 1
 	canmove = 0
@@ -423,7 +417,7 @@
 	new_xeno.a_intent = INTENT_HARM
 	new_xeno.key = key
 
-	new_xeno << "<B>You are now an alien.</B>"
+	to_chat(new_xeno, "<B>You are now an alien.</B>")
 	. = new_xeno
 	qdel(src)
 
@@ -431,7 +425,7 @@
 	if (notransform)
 		return
 	for(var/obj/item/W in src)
-		unEquip(W)
+		dropItemToGround(W)
 	regenerate_icons()
 	notransform = 1
 	canmove = 0
@@ -455,7 +449,7 @@
 	new_slime.a_intent = INTENT_HARM
 	new_slime.key = key
 
-	new_slime << "<B>You are now a slime. Skreee!</B>"
+	to_chat(new_slime, "<B>You are now a slime. Skreee!</B>")
 	. = new_slime
 	qdel(src)
 
@@ -473,7 +467,7 @@
 	if (notransform)
 		return
 	for(var/obj/item/W in src)
-		unEquip(W)
+		dropItemToGround(W)
 	regenerate_icons()
 	notransform = 1
 	canmove = 0
@@ -486,7 +480,7 @@
 	new_corgi.a_intent = INTENT_HARM
 	new_corgi.key = key
 
-	new_corgi << "<B>You are now a Corgi. Yap Yap!</B>"
+	to_chat(new_corgi, "<B>You are now a Corgi. Yap Yap!</B>")
 	. = new_corgi
 	qdel(src)
 
@@ -496,13 +490,13 @@
 	var/mobpath = input("Which type of mob should [src] turn into?", "Choose a type") in mobtypes
 
 	if(!safe_animal(mobpath))
-		usr << "<span class='danger'>Sorry but this mob type is currently unavailable.</span>"
+		to_chat(usr, "<span class='danger'>Sorry but this mob type is currently unavailable.</span>")
 		return
 
 	if(notransform)
 		return
 	for(var/obj/item/W in src)
-		unEquip(W)
+		dropItemToGround(W)
 
 	regenerate_icons()
 	notransform = 1
@@ -519,7 +513,7 @@
 	new_mob.a_intent = INTENT_HARM
 
 
-	new_mob << "You suddenly feel more... animalistic."
+	to_chat(new_mob, "You suddenly feel more... animalistic.")
 	. = new_mob
 	qdel(src)
 
@@ -529,14 +523,14 @@
 	var/mobpath = input("Which type of mob should [src] turn into?", "Choose a type") in mobtypes
 
 	if(!safe_animal(mobpath))
-		usr << "<span class='danger'>Sorry but this mob type is currently unavailable.</span>"
+		to_chat(usr, "<span class='danger'>Sorry but this mob type is currently unavailable.</span>")
 		return
 
 	var/mob/new_mob = new mobpath(src.loc)
 
 	new_mob.key = key
 	new_mob.a_intent = INTENT_HARM
-	new_mob << "You feel more... animalistic"
+	to_chat(new_mob, "You feel more... animalistic")
 
 	. = new_mob
 	qdel(src)
