diff a/code/modules/mining/fulton.dm b/code/modules/mining/fulton.dm	(rejected hunks)
@@ -24,7 +24,7 @@ var/list/total_extraction_beacons = list()
 			possible_beacons += EP
 
 	if(!possible_beacons.len)
-		user << "There are no extraction beacons in existance!"
+		to_chat(user, "There are no extraction beacons in existence!")
 		return
 
 	else
@@ -38,12 +38,12 @@ var/list/total_extraction_beacons = list()
 
 /obj/item/weapon/extraction_pack/afterattack(atom/movable/A, mob/living/carbon/human/user, flag, params)
 	if(!beacon)
-		user << "[src] is not linked to a beacon, and cannot be used."
+		to_chat(user, "[src] is not linked to a beacon, and cannot be used.")
 		return
 	if(!can_use_indoors)
 		var/area/area = get_area(A)
 		if(!area.outdoors)
-			user << "[src] can only be used on things that are outdoors!"
+			to_chat(user, "[src] can only be used on things that are outdoors!")
 			return
 	if(!flag)
 		return
@@ -51,15 +51,15 @@ var/list/total_extraction_beacons = list()
 		return
 	else
 		if(!safe_for_living_creatures && check_for_living_mobs(A))
-			user << "[src] is not safe for use with living creatures, they wouldn't survive the trip back!"
+			to_chat(user, "[src] is not safe for use with living creatures, they wouldn't survive the trip back!")
 			return
 		if(A.loc == user) // no extracting stuff you're holding
 			return
 		if(A.anchored)
 			return
-		user << "<span class='notice'>You start attaching the pack to [A]...</span>"
+		to_chat(user, "<span class='notice'>You start attaching the pack to [A]...</span>")
 		if(do_after(user,50,target=A))
-			user << "<span class='notice'>You attach the pack to [A] and activate it.</span>"
+			to_chat(user, "<span class='notice'>You attach the pack to [A] and activate it.</span>")
 			if(loc == user || istype(user.back, /obj/item/weapon/storage/backpack))
 				var/obj/item/weapon/storage/backpack/B = user.back
 				if(B.can_be_inserted(src,stop_messages = 1))
@@ -84,13 +84,13 @@ var/list/total_extraction_beacons = list()
 			balloon2 = image('icons/obj/fulton_balloon.dmi',"fulton_expand")
 			balloon2.pixel_y = 10
 			balloon2.appearance_flags = RESET_COLOR | RESET_ALPHA | RESET_TRANSFORM
-			holder_obj.overlays += balloon2
+			holder_obj.add_overlay(balloon2)
 			sleep(4)
 			balloon = image('icons/obj/fulton_balloon.dmi',"fulton_balloon")
 			balloon.pixel_y = 10
 			balloon.appearance_flags = RESET_COLOR | RESET_ALPHA | RESET_TRANSFORM
-			holder_obj.overlays -= balloon2
-			holder_obj.overlays += balloon
+			holder_obj.cut_overlay(balloon2)
+			holder_obj.add_overlay(balloon)
 			playsound(holder_obj.loc, 'sound/items/fulext_deploy.wav', 50, 1, -3)
 			animate(holder_obj, pixel_z = 10, time = 20)
 			sleep(20)
@@ -123,10 +123,10 @@ var/list/total_extraction_beacons = list()
 			balloon3 = image('icons/obj/fulton_balloon.dmi',"fulton_retract")
 			balloon3.pixel_y = 10
 			balloon3.appearance_flags = RESET_COLOR | RESET_ALPHA | RESET_TRANSFORM
-			holder_obj.overlays -= balloon
-			holder_obj.overlays += balloon3
+			holder_obj.cut_overlay(balloon)
+			holder_obj.add_overlay(balloon3)
 			sleep(4)
-			holder_obj.overlays -= balloon3
+			holder_obj.cut_overlay(balloon3)
 			A.anchored = 0 // An item has to be unanchored to be extracted in the first place.
 			A.density = initial(A.density)
 			animate(holder_obj, pixel_z = 0, time = 5)
@@ -139,12 +139,12 @@ var/list/total_extraction_beacons = list()
 
 /obj/item/fulton_core
 	name = "extraction beacon signaller"
-	desc = "Emits a signal which fulton recovery devices can lock on to. Activate in hand to create a beacon."
+	desc = "Emits a signal which fulton recovery devices can lock onto. Activate in hand to create a beacon."
 	icon = 'icons/obj/stock_parts.dmi'
 	icon_state = "subspace_amplifier"
 
 /obj/item/fulton_core/attack_self(mob/user)
-	if(do_after(user,15,target = user) && !qdeleted(src))
+	if(do_after(user,15,target = user) && !QDELETED(src))
 		new /obj/structure/extraction_point(get_turf(user))
 		qdel(src)
 
