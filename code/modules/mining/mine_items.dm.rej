diff a/code/modules/mining/mine_items.dm b/code/modules/mining/mine_items.dm	(rejected hunks)
@@ -10,7 +10,7 @@
 
 /obj/effect/light_emitter/New()
 	..()
-	SetLuminosity(set_luminosity, set_cap)
+	set_light(set_luminosity, set_cap)
 
 /**********************Miner Lockers**************************/
 
@@ -63,13 +63,13 @@
 	desc = "Used to call and send the mining shuttle."
 	circuit = /obj/item/weapon/circuitboard/computer/mining_shuttle
 	shuttleId = "mining"
-	possible_destinations = "mining_home;mining_away;landing_zone_dock"
+	possible_destinations = "mining_home;mining_away;landing_zone_dock;mining_public"
 	no_destination_swap = 1
 	var/global/list/dumb_rev_heads = list()
 
 /obj/machinery/computer/shuttle/mining/attack_hand(mob/user)
 	if(user.z == ZLEVEL_STATION && user.mind && (user.mind in ticker.mode.head_revolutionaries) && !(user.mind in dumb_rev_heads))
-		user << "<span class='warning'>You get a feeling that leaving the station might be a REALLY dumb idea...</span>"
+		to_chat(user, "<span class='warning'>You get a feeling that leaving the station might be a REALLY dumb idea...</span>")
 		dumb_rev_heads += user.mind
 		return
 	..()
@@ -198,13 +198,11 @@
 
 /obj/item/weapon/emptysandbag/attackby(obj/item/W, mob/user, params)
 	if(istype(W,/obj/item/weapon/ore/glass))
-		user << "<span class='notice'>You fill the sandbag.</span>"
+		to_chat(user, "<span class='notice'>You fill the sandbag.</span>")
 		var/obj/item/stack/sheet/mineral/sandbags/I = new /obj/item/stack/sheet/mineral/sandbags
-		user.unEquip(src)
+		qdel(src)
 		user.put_in_hands(I)
 		qdel(W)
-		qdel(src)
-		return
 	else
 		return ..()
 
@@ -238,7 +236,7 @@
 /obj/item/weapon/survivalcapsule/proc/get_template()
 	if(template)
 		return
-	template = shelter_templates[template_id]
+	template = SSmapping.shelter_templates[template_id]
 	if(!template)
 		throw EXCEPTION("Shelter template ([template_id]) not found!")
 		qdel(src)
@@ -250,8 +248,8 @@
 /obj/item/weapon/survivalcapsule/examine(mob/user)
 	. = ..()
 	get_template()
-	user << "This capsule has the [template.name] stored."
-	user << template.description
+	to_chat(user, "This capsule has the [template.name] stored.")
+	to_chat(user, template.description)
 
 /obj/item/weapon/survivalcapsule/attack_self()
 	// Can't grab when capsule is New() because templates aren't loaded then
@@ -285,7 +283,7 @@
 			message_admins("[key_name_admin(usr)] (<A HREF='?_src_=holder;adminmoreinfo=\ref[usr]'>?</A>) (<A HREF='?_src_=holder;adminplayerobservefollow=\ref[usr]'>FLW</A>) activated a bluespace capsule away from the mining level! (<A HREF='?_src_=holder;adminplayerobservecoodjump=1;X=[T.x];Y=[T.y];Z=[T.z]'>JMP</a>)")
 			log_admin("[key_name(usr)] activated a bluespace capsule away from the mining level at [T.x], [T.y], [T.z]")
 		template.load(deploy_location, centered = TRUE)
-		PoolOrNew(/obj/effect/particle_effect/smoke, get_turf(src))
+		new /obj/effect/particle_effect/smoke(get_turf(src))
 		qdel(src)
 
 
@@ -456,6 +454,12 @@
 	. = ..()
 	T.air_update_turf(1)
 
+//Inivisible, indestructible fans
+/obj/structure/fans/tiny/invisible
+	name = "air flow blocker"
+	resistance_flags = INDESTRUCTIBLE | LAVA_PROOF | FIRE_PROOF | UNACIDABLE | ACID_PROOF
+	invisibility = INVISIBILITY_ABSTRACT
+
 
 //Signs
 /obj/structure/sign/mining
@@ -477,223 +481,4 @@
 	name = "tubes"
 	anchored = 1
 	layer = BELOW_MOB_LAYER
-	density = 0
-
-///Mining Base////
-
-/area/shuttle/auxillary_base
-	name = "Auxillary Base"
-	luminosity = 0 //Lighting gets lost when it lands anyway
-
-/obj/machinery/computer/shuttle/auxillary_base
-	name = "auxillary base management console"
-	icon = 'icons/obj/terminals.dmi'
-	icon_state = "dorm_available"
-	shuttleId = "colony_drop"
-	desc = "Allows a deployable expedition base to be dropped from the station to a designated mining location. It can also \
-interface with the mining shuttle at the landing site if a mobile beacon is also deployed."
-	var/launch_warning = TRUE
-
-	req_one_access = list(access_cargo, access_construction, access_heads)
-	possible_destinations = null
-	clockwork = TRUE
-	var/obj/item/device/gps/internal/base/locator
-
-/obj/machinery/computer/shuttle/auxillary_base/New(location, obj/item/weapon/circuitboard/computer/shuttle/C)
-	..()
-	locator = new /obj/item/device/gps/internal/base(src)
-
-/obj/machinery/computer/shuttle/auxillary_base/Topic(href, href_list)
-	if(href_list["move"])
-		if(z != ZLEVEL_STATION && shuttleId == "colony_drop")
-			usr << "<span class='warning'>You can't move the base again!</span>"
-			return 0
-		if(launch_warning)
-			say("<span class='danger'>Launch sequence activated! Prepare for drop!</span>")
-			playsound(loc, 'sound/machines/warning-buzzer.ogg', 70, 0)
-			launch_warning = FALSE
-	..()
-
-
-
-/obj/machinery/computer/shuttle/auxillary_base/onShuttleMove(turf/T1, rotation)
-	..()
-	if(z == ZLEVEL_MINING) //Avoids double logging and landing on other Z-levels due to badminnery
-		feedback_add_details("colonies_dropped", "[x]|[y]|[z]") //Number of times a base has been dropped!
-
-/obj/machinery/computer/shuttle/auxillary_base/proc/set_mining_mode()
-	if(z == ZLEVEL_MINING) //The console switches to controlling the mining shuttle once landed.
-		req_access = list()
-		shuttleId = "mining" //The base can only be dropped once, so this gives the console a new purpose.
-		possible_destinations = "mining_home;mining_away;landing_zone_dock"
-
-/obj/item/device/assault_pod/mining
-	name = "Landing Field Designator"
-	icon_state = "gangtool-purple"
-	item_state = "electronic"
-	icon = 'icons/obj/device.dmi'
-	desc = "Deploy to designate the landing zone of the auxillary base."
-	w_class = WEIGHT_CLASS_SMALL
-	shuttle_id = "colony_drop"
-	var/setting = FALSE
-	var/no_restrictions = FALSE //Badmin variable to let you drop the colony ANYWHERE.
-
-/obj/item/device/assault_pod/mining/attack_self(mob/living/user)
-	if(setting)
-		return
-	var/turf/T = get_turf(user)
-	var/obj/docking_port/mobile/auxillary_base/base_dock = locate(/obj/docking_port/mobile/auxillary_base) in SSshuttle.mobile
-	if(!base_dock) //Not all maps have an Aux base. This object is useless in that case.
-		user << "<span class='warning'>This station is not equipped with an auxillary base. Please contact your Nanotrasen contractor.</span>"
-		return
-	if(!no_restrictions)
-		if(T.z != ZLEVEL_MINING)
-			user << "Wouldn't do much good dropping a mining base away from the mining area!"
-			return
-		var/colony_radius = max(width, height)*0.5
-		var/list/area_counter = get_areas_in_range(colony_radius, T)
-		if(area_counter.len > 1) //Avoid smashing ruins unless you are inside a really big one
-			user << "Unable to acquire a targeting lock. Find an area clear of stuctures or entirely within one."
-			return
-
-	user << "<span class='notice'>You begin setting the landing zone parameters...</span>"
-	setting = TRUE
-	if(!do_after(user, 50, target = user)) //You get a few seconds to cancel if you do not want to drop there.
-		setting = FALSE
-		return
-
-	var/area/A = get_area(T)
-
-	var/obj/docking_port/stationary/landing_zone = new /obj/docking_port/stationary(T)
-	landing_zone.id = "colony_drop(\ref[src])"
-	landing_zone.name = "Landing Zone ([T.x], [T.y])"
-	landing_zone.dwidth = base_dock.dwidth
-	landing_zone.dheight = base_dock.dheight
-	landing_zone.width = base_dock.width
-	landing_zone.height = base_dock.height
-	landing_zone.setDir(base_dock.dir)
-	landing_zone.turf_type = T.type
-	landing_zone.area_type = A.type
-
-	for(var/obj/machinery/computer/shuttle/S in machines)
-		if(S.shuttleId == shuttle_id)
-			S.possible_destinations += "[landing_zone.id];"
-
-//Serves as a nice mechanic to people get ready for the launch.
-	minor_announce("Auxiliary base landing zone coordinates locked in for [get_area(user)]. Launch command now available!")
-	user << "<span class='notice'>Landing zone set.</span>"
-
-	qdel(src)
-
-/obj/item/device/assault_pod/mining/unrestricted
-	name = "omni-locational landing field designator"
-	desc = "Allows the deployment of the mining base ANYWHERE. Use with caution."
-	no_restrictions = TRUE
-
-
-/obj/docking_port/mobile/auxillary_base
-	name = "auxillary base"
-	id = "colony_drop"
-	//Reminder to map-makers to set these values equal to the size of your base.
-	dheight = 4
-	dwidth = 4
-	width = 9
-	height = 9
-	var/anti_spam_cd = 0
-
-
-/obj/structure/mining_shuttle_beacon
-	name = "mining shuttle beacon"
-	desc = "A bluespace beacon calibrated to mark a landing spot for the mining shuttle when deployed near the auxillary mining base."
-	anchored = 0
-	density = 0
-	var/shuttle_ID = "landing_zone_dock"
-	icon = 'icons/obj/objects.dmi'
-	icon_state = "miningbeacon"
-	var/obj/docking_port/stationary/Mport //Linked docking port for the mining shuttle
-	pressure_resistance = 200 //So it does not get blown into lava.
-	var/anti_spam_cd = 0 //The linking process might be a bit intensive, so this here to prevent over use.
-	var/console_range = 15 //Wifi range of the beacon to find the aux base console
-
-/obj/structure/mining_shuttle_beacon/attack_hand(mob/user)
-	if(anchored)
-		user << "<span class='warning'>Landing zone already set.</span>"
-		return
-
-	if(anti_spam_cd)
-		user << "<span class='warning'>[src] is currently recalibrating. Please wait.</span>"
-		return
-
-	anti_spam_cd = 1
-	addtimer(src, "clear_cooldown", 100)
-
-	var/turf/landing_spot = get_turf(src)
-
-	if(landing_spot.z != ZLEVEL_MINING)
-		user << "<span class='warning'>This device is only to be used in a mining zone.</span>"
-		return
-	var/obj/machinery/computer/shuttle/auxillary_base/aux_base_console = locate(/obj/machinery/computer/shuttle/auxillary_base) in machines
-	if(!aux_base_console || get_dist(landing_spot, aux_base_console) > console_range)
-		user << "<span class='warning'>The auxillary base's console must be within [console_range] meters in order to interface.</span>"
-		return //Needs to be near the base to serve as its dock and configure it to control the mining shuttle.
-
-//Mining shuttles may not be created equal, so we find the map's shuttle dock and size accordingly.
-
-
-	for(var/S in SSshuttle.stationary)
-		var/obj/docking_port/stationary/SM = S //SM is declared outside so it can be checked for null
-		if(SM.id == "mining_home" || SM.id == "mining_away")
-
-			var/area/A = get_area(landing_spot)
-
-			Mport = new(landing_spot)
-			Mport.id = "landing_zone_dock"
-			Mport.name = "auxillary base landing site"
-			Mport.dwidth = SM.dwidth
-			Mport.dheight = SM.dheight
-			Mport.width = SM.width
-			Mport.height = SM.height
-			Mport.setDir(dir)
-			Mport.turf_type = landing_spot.type
-			Mport.area_type = A.type
-
-			break
-	if(!Mport)
-		user << "<span class='warning'>This station is not equipped with an approprite mining shuttle. Please contact Nanotrasen Support.</span>"
-		return
-	var/search_radius = max(Mport.width, Mport.height)*0.5
-	var/list/landing_areas = get_areas_in_range(search_radius, landing_spot)
-	for(var/area/shuttle/auxillary_base/AB in landing_areas) //You land NEAR the base, not IN it.
-		user << "<span class='warning'>The mining shuttle must not land within the mining base itself.</span>"
-		SSshuttle.stationary.Remove(Mport)
-		qdel(Mport)
-		return
-	var/obj/docking_port/mobile/mining_shuttle
-	for(var/S in SSshuttle.mobile)
-		var/obj/docking_port/mobile/MS = S
-		if(MS.id != "mining")
-			continue
-		mining_shuttle = MS
-
-	if(!mining_shuttle) //Not having a mining shuttle is a map issue
-		user << "<span class='warning'>No mining shuttle signal detected. Please contact Nanotrasen Support.</span>"
-		SSshuttle.stationary.Remove(Mport)
-		qdel(Mport)
-		return
-
-	if(!mining_shuttle.canDock(Mport))
-		user << "<span class='warning'>Unable to secure a valid docking zone. Please try again in an open area near, but not within the aux. mining base.</span>"
-		SSshuttle.stationary.Remove(Mport)
-		qdel(Mport)
-		return
-
-	aux_base_console.set_mining_mode() //Lets the colony park the shuttle there, now that it has a dock.
-	user << "<span class='notice'>Mining shuttle calibration successful! Shuttle interface available at base console.</span>"
-	anchored = 1 //Locks in place to mark the landing zone.
-	playsound(src.loc, 'sound/machines/ping.ogg', 50, 0)
-
-/obj/structure/mining_shuttle_beacon/proc/clear_cooldown()
-	anti_spam_cd = 0
-
-/obj/structure/mining_shuttle_beacon/attack_robot(mob/user)
-	return (attack_hand(user)) //So borgies can help
+	density = 0
\ No newline at end of file
