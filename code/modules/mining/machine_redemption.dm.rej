diff a/code/modules/mining/machine_redemption.dm b/code/modules/mining/machine_redemption.dm	(rejected hunks)
@@ -11,24 +11,27 @@
 	input_dir = NORTH
 	output_dir = SOUTH
 	req_access = list(access_mineral_storeroom)
+	var/req_access_reclaim = access_mining_station
 	var/stk_types = list()
 	var/stk_amt   = list()
-	var/stack_list[0] //Key: Type.  Value: Instance of type.
+	var/stack_list = list() //Key: Type.  Value: Instance of type.
 	var/obj/item/weapon/card/id/inserted_id
 	var/points = 0
 	var/ore_pickup_rate = 15
 	var/sheet_per_ore = 1
 	var/point_upgrade = 1
-	var/list/ore_values = list(("sand" = 1), ("iron" = 1), ("plasma" = 15), ("silver" = 16), ("gold" = 18), ("titanium" = 30), ("uranium" = 30), ("diamond" = 50), ("bluespace crystal" = 50), ("bananium" = 60))
+	var/list/ore_values = list("sand" = 1, "iron" = 1, "plasma" = 15, "silver" = 16, "gold" = 18, "titanium" = 30, "uranium" = 30, "diamond" = 50, "bluespace crystal" = 50, "bananium" = 60)
 	speed_process = 1
+	var/message_sent = FALSE
+	var/list/ore_buffer = list()
 
 /obj/machinery/mineral/ore_redemption/New()
 	..()
-	var/obj/item/weapon/circuitboard/machine/B = new /obj/item/weapon/circuitboard/machine/ore_redemption(null)
+	var/obj/item/weapon/circuitboard/machine/ore_redemption/B = new
 	B.apply_default_parts(src)
 
 /obj/item/weapon/circuitboard/machine/ore_redemption
-	name = "circuit board (Ore Redemption)"
+	name = "Ore Redemption (Machine Board)"
 	build_path = /obj/machinery/mineral/ore_redemption
 	origin_tech = "programming=1;engineering=2"
 	req_components = list(
@@ -55,51 +58,72 @@
 /obj/machinery/mineral/ore_redemption/proc/process_sheet(obj/item/weapon/ore/O)
 	var/obj/item/stack/sheet/processed_sheet = SmeltMineral(O)
 	if(processed_sheet)
-		if(!(processed_sheet in stack_list)) //It's the first of this sheet added
-			var/obj/item/stack/sheet/s = new processed_sheet(src,0)
+		var/obj/item/stack/sheet/s
+		if(!stack_list[processed_sheet])
+			s = new processed_sheet(src, FALSE)
 			s.amount = 0
 			stack_list[processed_sheet] = s
-		var/obj/item/stack/sheet/storage = stack_list[processed_sheet]
-		storage.amount += sheet_per_ore //Stack the sheets
-		O.loc = null //Let the old sheet...
+		s = stack_list[processed_sheet]
+		s.amount += sheet_per_ore //Stack the sheets
+		ore_buffer -= O
 		qdel(O) //... garbage collect
 
+/obj/machinery/mineral/ore_redemption/proc/process_ores(list/ores_to_process)
+	var/current_amount = 0
+	for(var/ore in ores_to_process)
+		if(current_amount >= ore_pickup_rate)
+			break
+		process_sheet(ore)
+
+/obj/machinery/mineral/ore_redemption/proc/send_console_message()
+	if(z != ZLEVEL_STATION || !LAZYLEN(stack_list))
+		return
+	message_sent = TRUE
+	var/area/A = get_area(src)
+	var/msg = "Now available in [A]:<br>"
+	for(var/s in stack_list)
+		var/obj/item/stack/sheet/sheet = stack_list[s]
+		msg += "[capitalize(sheet.name)]: [sheet.amount] sheets<br>"
+
+	for(var/obj/machinery/requests_console/D in allConsoles)
+		if(D.receive_ore_updates)
+			D.createmessage("Ore Redemption Machine", "New minerals available!", msg, 1, 0)
+
 /obj/machinery/mineral/ore_redemption/process()
-	if(!panel_open && powered()) //If the machine is partially disassembled and/or depowered, it should not process minerals
-		var/turf/T = get_step(src, input_dir)
-		var/i = 0
-		if(T)
-			for(var/obj/item/weapon/ore/O in T)
-				if (i >= ore_pickup_rate)
-					break
-				else if (!O || !O.refined_type)
-					continue
-				else
-					process_sheet(O)
-					i++
-		else
-			var/obj/structure/ore_box/B = locate() in T
-			if(B)
-				for(var/obj/item/weapon/ore/O in B.contents)
-					if (i >= ore_pickup_rate)
-						break
-					else if (!O || !O.refined_type)
-						continue
-					else
-						process_sheet(O)
-						i++
-		if(i > 0 && z == ZLEVEL_STATION)
-			var/area/orm_area = get_area(src)
-			var/msg = "Now available in [orm_area.map_name]:"
-			for(var/s in stack_list) // Making an announcement for cargo
-				var/obj/item/stack/sheet/mats = stack_list[s]
-				msg += "\n[capitalize(mats.name)]: [mats.amount] sheets"
-			for(var/obj/machinery/requests_console/D in allConsoles)
-				if(D.department == "Science" || D.department == "Robotics" || D.department == "Research Director's Desk" || D.department == "Chemistry" || D.department == "Bar")
-					D.createmessage("Ore Redemption Machine", "New minerals available!", msg, 1, 0)
+	if(panel_open || !powered())
+		return
+	var/atom/input = get_step(src, input_dir)
+	var/obj/structure/ore_box/OB = locate() in input
+	if(OB)
+		input = OB
+
+	for(var/obj/item/weapon/ore/O in input)
+		if(QDELETED(O))
+			continue
+		ore_buffer |= O
+		O.forceMove(src)
+		CHECK_TICK
+
+	if(LAZYLEN(ore_buffer))
+		message_sent = FALSE
+		process_ores(ore_buffer)
+	else if(!message_sent)
+		send_console_message()
 
 /obj/machinery/mineral/ore_redemption/attackby(obj/item/weapon/W, mob/user, params)
-	if (!powered())
+	if(exchange_parts(user, W))
+		return
+	if(default_pry_open(W))
+		return
+	if(default_unfasten_wrench(user, W))
+		return
+	if(default_deconstruction_screwdriver(user, "ore_redemption-open", "ore_redemption", W))
+		updateUsrDialog()
+		return
+	if(default_deconstruction_crowbar(W))
+		return
+
+	if(!powered())
 		return
 	if(istype(W,/obj/item/weapon/card/id))
 		var/obj/item/weapon/card/id/I = user.get_active_held_item()
@@ -110,18 +134,11 @@
 			inserted_id = I
 			interact(user)
 		return
-	if(exchange_parts(user, W))
-		return
 
-	if(default_pry_open(W))
-		return
-
-	if(default_unfasten_wrench(user, W))
-		return
-	if(default_deconstruction_screwdriver(user, "ore_redemption-open", "ore_redemption", W))
-		updateUsrDialog()
-		return
-	if(default_deconstruction_crowbar(W))
+	if(istype(W, /obj/item/device/multitool) && panel_open)
+		input_dir = turn(input_dir, -90)
+		output_dir = turn(output_dir, -90)
+		to_chat(user, "<span class='notice'>You change [src]'s I/O settings, setting the input to [dir2text(input_dir)] and the output to [dir2text(output_dir)].</span>")
 		return
 
 	return ..()
@@ -130,7 +147,7 @@
 	empty_content()
 
 /obj/machinery/mineral/ore_redemption/proc/SmeltMineral(obj/item/weapon/ore/O)
-	if(O.refined_type)
+	if(O && O.refined_type)
 		var/obj/item/stack/sheet/M = O.refined_type
 		points += O.points * point_upgrade
 		return M
@@ -143,24 +160,19 @@
 	interact(user)
 
 /obj/machinery/mineral/ore_redemption/interact(mob/user)
-	var/obj/item/stack/sheet/s
-	var/dat
+	var/dat = "This machine only accepts ore. Gibtonite and Slag are not accepted.<br><br>"
+	dat += "Current unclaimed points: [points]<br>"
 
-	dat += text("This machine only accepts ore. Gibtonite and Slag are not accepted.<br><br>")
-	dat += text("Current unclaimed points: [points]<br>")
-
-	if(istype(inserted_id))
-		dat += text("You have [inserted_id.mining_points] mining points collected. <A href='?src=\ref[src];choice=eject'>Eject ID.</A><br>")
-		dat += text("<A href='?src=\ref[src];choice=claim'>Claim points.</A><br>")
+	if(inserted_id)
+		dat += "You have [inserted_id.mining_points] mining points collected. <A href='?src=\ref[src];eject_id=1'>Eject ID.</A><br>"
+		dat += "<A href='?src=\ref[src];claim=1'>Claim points.</A><br><br>"
 	else
-		dat += text("No ID inserted.  <A href='?src=\ref[src];choice=insert'>Insert ID.</A><br>")
+		dat += "No ID inserted.  <A href='?src=\ref[src];insert_id=1'>Insert ID.</A><br><br>"
 
 	for(var/O in stack_list)
-		s = stack_list[O]
-		if(s.amount > 0)
-			if(O == stack_list[1])
-				dat += "<br>"		//just looks nicer
-			dat += text("[capitalize(s.name)]: [s.amount] <A href='?src=\ref[src];release=[s.type]'>Release</A><br>")
+		var/obj/item/stack/sheet/s = stack_list[O]
+		if(s.amount)
+			dat += "[capitalize(s.name)]: [s.amount] <A href='?src=\ref[src];release=[s.type]'>Release</A><br>"
 
 	var/obj/item/stack/sheet/metalstack
 	if(/obj/item/stack/sheet/metal in stack_list)
@@ -175,10 +187,10 @@
 		titaniumstack = stack_list[/obj/item/stack/sheet/mineral/titanium]
 
 	if(metalstack && plasmastack && min(metalstack.amount, plasmastack.amount))
-		dat += text("Plasteel Alloy (Metal + Plasma): <A href='?src=\ref[src];alloytype1=/obj/item/stack/sheet/metal;alloytype2=/obj/item/stack/sheet/mineral/plasma;alloytypeout=/obj/item/stack/sheet/plasteel'>Smelt</A><BR>")
+		dat += "Plasteel Alloy (Metal + Plasma): <A href='?src=\ref[src];alloytype1=/obj/item/stack/sheet/metal;alloytype2=/obj/item/stack/sheet/mineral/plasma;alloytypeout=/obj/item/stack/sheet/plasteel'>Smelt</A><BR>"
 	if(titaniumstack && plasmastack && min(titaniumstack.amount, plasmastack.amount))
-		dat += text("Plastitanium Alloy (Titanium + Plasma): <A href='?src=\ref[src];alloytype1=/obj/item/stack/sheet/mineral/titanium;alloytype2=/obj/item/stack/sheet/mineral/plasma;alloytypeout=/obj/item/stack/sheet/mineral/plastitanium'>Smelt</A><BR>")
-	dat += text("<br><div class='statusDisplay'><b>Mineral Value List:</b><BR>[get_ore_values()]</div>")
+		dat += "Plastitanium Alloy (Titanium + Plasma): <A href='?src=\ref[src];alloytype1=/obj/item/stack/sheet/mineral/titanium;alloytype2=/obj/item/stack/sheet/mineral/plasma;alloytypeout=/obj/item/stack/sheet/mineral/plastitanium'>Smelt</A><BR>"
+	dat += "<br><div class='statusDisplay'><b>Mineral Value List:</b><BR>[get_ore_values()]</div>"
 
 	var/datum/browser/popup = new(user, "console_stacking_machine", "Ore Redemption Machine", 400, 500)
 	popup.set_content(dat)
@@ -196,58 +208,67 @@
 /obj/machinery/mineral/ore_redemption/Topic(href, href_list)
 	if(..())
 		return
-	if(href_list["choice"])
-		if(istype(inserted_id))
-			if(href_list["choice"] == "eject")
-				inserted_id.loc = loc
-				inserted_id.verb_pickup()
-				inserted_id = null
-			if(href_list["choice"] == "claim")
-				if(access_mining_station in inserted_id.access)
-					inserted_id.mining_points += points
-					points = 0
-				else
-					usr << "<span class='warning'>Required access not found.</span>"
-		else if(href_list["choice"] == "insert")
-			var/obj/item/weapon/card/id/I = usr.get_active_held_item()
-			if(istype(I))
-				if(!usr.drop_item())
-					return
-				I.loc = src
-				inserted_id = I
-			else usr << "<span class='warning'>No valid ID.</span>"
+	if(href_list["eject_id"])
+		usr.put_in_hands(inserted_id)
+		inserted_id = null
+	if(href_list["claim"])
+		if(inserted_id)
+			if(req_access_reclaim in inserted_id.access)
+				inserted_id.mining_points += points
+				points = 0
+			else
+				to_chat(usr, "<span class='warning'>Required access not found.</span>")
+	else if(href_list["insert_id"])
+		var/obj/item/weapon/card/id/I = usr.get_active_held_item()
+		if(istype(I))
+			if(!usr.drop_item())
+				return
+			I.forceMove(src)
+			inserted_id = I
+		else
+			to_chat(usr, "<span class='warning'>Not a valid ID!</span>")
 	if(href_list["release"])
 		if(check_access(inserted_id) || allowed(usr)) //Check the ID inside, otherwise check the user.
-			if(!(text2path(href_list["release"]) in stack_list)) return
+			if(!(text2path(href_list["release"]) in stack_list))
+				return
 			var/obj/item/stack/sheet/inp = stack_list[text2path(href_list["release"])]
-			var/obj/item/stack/sheet/out = new inp.type()
-			var/desired = input("How much?", "How much to eject?", 1) as num
+			var/obj/item/stack/sheet/out = new inp.type(src,merge=FALSE)
+			var/desired = input("How many sheets?", "How many sheets to eject?", 1) as null|num
 			out.amount = round(min(desired,50,inp.amount))
-			if(out.amount >= 1)
+			if(out.amount)
 				inp.amount -= out.amount
 				unload_mineral(out)
 			if(inp.amount < 1)
 				stack_list -= text2path(href_list["release"])
+				qdel(inp)
 		else
-			usr << "<span class='warning'>Required access not found.</span>"
+			to_chat(usr, "<span class='warning'>Required access not found.</span>")
 	if(href_list["alloytype1"] && href_list["alloytype2"] && href_list["alloytypeout"])
 		var/alloytype1 = text2path(href_list["alloytype1"])
 		var/alloytype2 = text2path(href_list["alloytype2"])
 		var/alloytypeout = text2path(href_list["alloytypeout"])
 		if(check_access(inserted_id) || allowed(usr))
-			if(!(alloytype1 in stack_list)) return
-			if(!(alloytype2 in stack_list)) return
+			if(!(alloytype1 in stack_list))
+				return
+			if(!(alloytype2 in stack_list))
+				return
 			var/obj/item/stack/sheet/stack1 = stack_list[alloytype1]
 			var/obj/item/stack/sheet/stack2 = stack_list[alloytype2]
-			var/desired = input("How much?", "How much would you like to smelt?", 1) as num
+			var/desired = input("How many sheets?", "How many sheets would you like to smelt?", 1) as null|num
 			var/obj/item/stack/sheet/alloyout = new alloytypeout
 			alloyout.amount = round(min(desired,50,stack1.amount,stack2.amount))
 			if(alloyout.amount >= 1)
 				stack1.amount -= alloyout.amount
 				stack2.amount -= alloyout.amount
 				unload_mineral(alloyout)
+			if(stack1.amount < 1)
+				stack_list -= stack1
+				qdel(stack1)
+			if(stack2.amount < 1)
+				stack_list -= stack2
+				qdel(stack2)
 		else
-			usr << "<span class='warning'>Required access not found.</span>"
+			to_chat(usr, "<span class='warning'>Required access not found.</span>")
 	updateUsrDialog()
 	return
 
@@ -266,7 +287,7 @@
 		while(s.amount > s.max_amount)
 			new s.type(loc,s.max_amount)
 			s.use(s.max_amount)
-		s.loc = loc
+		s.forceMove(get_turf(src))
 		s.layer = initial(s.layer)
 		s.plane = initial(s.plane)
 
