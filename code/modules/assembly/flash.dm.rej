diff a/code/modules/assembly/flash.dm b/code/modules/assembly/flash.dm	(rejected hunks)
@@ -47,9 +47,12 @@
 	if(!crit_fail)
 		crit_fail = 1
 		update_icon()
+	if(ismob(loc))
+		var/mob/M = loc
+		M.visible_message("<span class='danger'>[src] burns out!</span>","<span class='userdanger'>[src] burns out!</span>")
+	else
 		var/turf/T = get_turf(src)
-		if(T)
-			T.visible_message("[src] burns out!")
+		T.visible_message("<span class='danger'>[src] burns out!</span>")
 
 
 /obj/item/device/assembly/flash/proc/flash_recharge(interval=10)
@@ -84,22 +87,17 @@
 /obj/item/device/assembly/flash/proc/flash_carbon(mob/living/carbon/M, mob/user = null, power = 15, targeted = 1)
 	add_logs(user, M, "flashed", src)
 	if(user && targeted)
-		if(M.weakeyes)
-			M.Weaken(3) //quick weaken bypasses eye protection but has no eye flash
 		if(M.flash_act(1, 1))
 			M.confused += power
 			terrible_conversion_proc(M, user)
-			M.Stun(1)
+			M.Weaken(rand(4,6))
 			visible_message("<span class='disarm'>[user] blinds [M] with the flash!</span>")
-			user << "<span class='danger'>You blind [M] with the flash!</span>"
-			M << "<span class='userdanger'>[user] blinds you with the flash!</span>"
-			if(M.weakeyes)
-				M.Stun(2)
-				M.visible_message("<span class='disarm'>[M] gasps and shields their eyes!</span>", "<span class='userdanger'>You gasp and shield your eyes!</span>")
+			to_chat(user, "<span class='danger'>You blind [M] with the flash!</span>")
+			to_chat(M, "<span class='userdanger'>[user] blinds you with the flash!</span>")
 		else
 			visible_message("<span class='disarm'>[user] fails to blind [M] with the flash!</span>")
-			user << "<span class='warning'>You fail to blind [M] with the flash!</span>"
-			M << "<span class='danger'>[user] fails to blind you with the flash!</span>"
+			to_chat(user, "<span class='warning'>You fail to blind [M] with the flash!</span>")
+			to_chat(M, "<span class='danger'>[user] fails to blind you with the flash!</span>")
 	else
 		if(M.flash_act())
 			M.confused += power
@@ -116,7 +114,7 @@
 		var/mob/living/silicon/robot/R = M
 		add_logs(user, R, "flashed", src)
 		update_icon(1)
-		M.Weaken(6)
+		M.Weaken(rand(4,6))
 		R.confused += 5
 		R.flash_act(affect_silicon = 1)
 		user.visible_message("<span class='disarm'>[user] overloads [R]'s sensors with the flash!</span>", "<span class='danger'>You overload [R]'s sensors with the flash!</span>")
@@ -162,11 +160,11 @@
 						resisted = 1
 
 					if(resisted)
-						user << "<span class='warning'>This mind seems resistant to the flash!</span>"
+						to_chat(user, "<span class='warning'>This mind seems resistant to the flash!</span>")
 				else
-					user << "<span class='warning'>They must be conscious before you can convert them!</span>"
+					to_chat(user, "<span class='warning'>They must be conscious before you can convert them!</span>")
 			else
-				user << "<span class='warning'>This mind is so vacant that it is not susceptible to influence!</span>"
+				to_chat(user, "<span class='warning'>This mind is so vacant that it is not susceptible to influence!</span>")
 
 
 /obj/item/device/assembly/flash/cyborg
@@ -174,11 +172,11 @@
 
 /obj/item/device/assembly/flash/cyborg/attack(mob/living/M, mob/user)
 	..()
-	PoolOrNew(/obj/effect/overlay/temp/borgflash, get_turf(src))
+	new /obj/effect/overlay/temp/borgflash(get_turf(src))
 
 /obj/item/device/assembly/flash/cyborg/attack_self(mob/user)
 	..()
-	PoolOrNew(/obj/effect/overlay/temp/borgflash, get_turf(src))
+	new /obj/effect/overlay/temp/borgflash(get_turf(src))
 
 /obj/item/device/assembly/flash/cyborg/attackby(obj/item/weapon/W, mob/user, params)
 	return
@@ -201,18 +199,18 @@
 
 /obj/item/device/assembly/flash/armimplant/burn_out()
 	if(I && I.owner)
-		I.owner << "<span class='warning'>Your photon projector implant overheats and deactivates!</span>"
+		to_chat(I.owner, "<span class='warning'>Your photon projector implant overheats and deactivates!</span>")
 		I.Retract()
 	overheat = FALSE
-	addtimer(src, "cooldown", flashcd * 2)
+	addtimer(CALLBACK(src, .proc/cooldown), flashcd * 2)
 
 /obj/item/device/assembly/flash/armimplant/try_use_flash(mob/user = null)
 	if(overheat)
 		if(I && I.owner)
-			I.owner << "<span class='warning'>Your photon projector is running too hot to be used again so quickly!</span>"
+			to_chat(I.owner, "<span class='warning'>Your photon projector is running too hot to be used again so quickly!</span>")
 		return FALSE
 	overheat = TRUE
-	addtimer(src, "cooldown", flashcd)
+	addtimer(CALLBACK(src, .proc/cooldown), flashcd)
 	playsound(src.loc, 'sound/weapons/flash.ogg', 100, 1)
 	update_icon(1)
 	return TRUE
@@ -249,12 +247,12 @@
 	if(istype(W, /obj/item/device/assembly/flash/handheld))
 		var/obj/item/device/assembly/flash/handheld/flash = W
 		if(flash.crit_fail)
-			user << "No sense replacing it with a broken bulb."
+			to_chat(user, "No sense replacing it with a broken bulb.")
 			return
 		else
-			user << "You begin to replace the bulb."
+			to_chat(user, "You begin to replace the bulb.")
 			if(do_after(user, 20, target = src))
-				if(flash.crit_fail || !flash || qdeleted(flash))
+				if(flash.crit_fail || !flash || QDELETED(flash))
 					return
 				crit_fail = FALSE
 				times_used = 0
@@ -275,7 +273,11 @@
 	else if(flash)
 		item_state = "flashshield_flash"
 		item_state = "flashshield_flash"
-		addtimer(src, "update_icon", 5)
+		addtimer(CALLBACK(src, .proc/update_icon), 5)
 
 	if(holder)
-		holder.update_icon()
\ No newline at end of file
+		holder.update_icon()
+
+/obj/item/device/assembly/flash/shield/hit_reaction(obj/item/weapon/W, mob/user, params)
+	activate()
+	return ..()
