diff a/code/modules/admin/DB_ban/functions.dm b/code/modules/admin/DB_ban/functions.dm	(rejected hunks)
@@ -1,17 +1,15 @@
 #define MAX_ADMIN_BANS_PER_ADMIN 1
 
 //Either pass the mob you wish to ban in the 'banned_mob' attribute, or the banckey, banip and bancid variables. If both are passed, the mob takes priority! If a mob is not passed, banckey is the minimum that needs to be passed! banip and bancid are optional.
-/datum/admins/proc/DB_ban_record(bantype, mob/banned_mob, duration = -1, reason, job = "", rounds = 0, banckey = null, banip = null, bancid = null)
+/datum/admins/proc/DB_ban_record(bantype, mob/banned_mob, duration = -1, reason, job = "", banckey = null, banip = null, bancid = null)
 
 	if(!check_rights(R_BAN))
 		return
 
-	establish_db_connection()
-	if(!dbcon.IsConnected())
-		src << "<span class='danger'>Failed to establish database connection.</span>"
+	if(!dbcon.Connect())
+		to_chat(src, "<span class='danger'>Failed to establish database connection.</span>")
 		return
 
-	var/serverip = "[world.internet_address]:[world.port]"
 	var/bantype_pass = 0
 	var/bantype_str
 	var/maxadminbancheck	//Used to limit the number of active bans of a certein type that each admin can give. Used to protect against abuse or mutiny.
@@ -73,10 +71,11 @@
 		computerid = bancid
 		ip = banip
 
-	var/DBQuery/query = dbcon.NewQuery("SELECT id FROM [format_table_name("player")] WHERE ckey = '[ckey]'")
-	query.Execute()
+	var/DBQuery/query_add_ban_get_id = dbcon.NewQuery("SELECT id FROM [format_table_name("player")] WHERE ckey = '[ckey]'")
+	if(!query_add_ban_get_id.warn_execute())
+		return
 	var/validckey = 0
-	if(query.NextRow())
+	if(query_add_ban_get_id.NextRow())
 		validckey = 1
 	if(!validckey)
 		if(!banned_mob || (banned_mob && !IsGuestKey(banned_mob.key)))
@@ -94,7 +93,7 @@
 
 	if(blockselfban)
 		if(a_ckey == ckey)
-			usr << "<span class='danger'>You cannot apply this ban type on yourself.</span>"
+			to_chat(usr, "<span class='danger'>You cannot apply this ban type on yourself.</span>")
 			return
 
 	var/who
@@ -114,18 +113,23 @@
 	reason = sanitizeSQL(reason)
 
 	if(maxadminbancheck)
-		var/DBQuery/adm_query = dbcon.NewQuery("SELECT count(id) AS num FROM [format_table_name("ban")] WHERE (a_ckey = '[a_ckey]') AND (bantype = 'ADMIN_PERMABAN'  OR (bantype = 'ADMIN_TEMPBAN' AND expiration_time > Now())) AND isnull(unbanned)")
-		adm_query.Execute()
-		if(adm_query.NextRow())
-			var/adm_bans = text2num(adm_query.item[1])
+		var/DBQuery/query_check_adminban_amt = dbcon.NewQuery("SELECT count(id) AS num FROM [format_table_name("ban")] WHERE (a_ckey = '[a_ckey]') AND (bantype = 'ADMIN_PERMABAN'  OR (bantype = 'ADMIN_TEMPBAN' AND expiration_time > Now())) AND isnull(unbanned)")
+		if(!query_check_adminban_amt.warn_execute())
+			return
+		if(query_check_adminban_amt.NextRow())
+			var/adm_bans = text2num(query_check_adminban_amt.item[1])
 			if(adm_bans >= MAX_ADMIN_BANS_PER_ADMIN)
-				usr << "<span class='danger'>You already logged [MAX_ADMIN_BANS_PER_ADMIN] admin ban(s) or more. Do not abuse this function!</span>"
+				to_chat(usr, "<span class='danger'>You already logged [MAX_ADMIN_BANS_PER_ADMIN] admin ban(s) or more. Do not abuse this function!</span>")
 				return
-
-	var/sql = "INSERT INTO [format_table_name("ban")] (`id`,`bantime`,`serverip`,`bantype`,`reason`,`job`,`duration`,`rounds`,`expiration_time`,`ckey`,`computerid`,`ip`,`a_ckey`,`a_computerid`,`a_ip`,`who`,`adminwho`,`edits`,`unbanned`,`unbanned_datetime`,`unbanned_ckey`,`unbanned_computerid`,`unbanned_ip`) VALUES (null, Now(), '[serverip]', '[bantype_str]', '[reason]', '[job]', [(duration)?"[duration]":"0"], [(rounds)?"[rounds]":"0"], Now() + INTERVAL [(duration>0) ? duration : 0] MINUTE, '[ckey]', '[computerid]', '[ip]', '[a_ckey]', '[a_computerid]', '[a_ip]', '[who]', '[adminwho]', '', null, null, null, null, null)"
-	var/DBQuery/query_insert = dbcon.NewQuery(sql)
-	query_insert.Execute()
-	usr << "<span class='adminnotice'>Ban saved to database.</span>"
+	if(!computerid)
+		computerid = "0"
+	if(!ip)
+		ip = "0.0.0.0"
+	var/sql = "INSERT INTO [format_table_name("ban")] (`bantime`,`server_ip`,`server_port`,`bantype`,`reason`,`job`,`duration`,`expiration_time`,`ckey`,`computerid`,`ip`,`a_ckey`,`a_computerid`,`a_ip`,`who`,`adminwho`) VALUES (Now(), INET_ATON('[world.internet_address]'), '[world.port]', '[bantype_str]', '[reason]', '[job]', [(duration)?"[duration]":"0"], Now() + INTERVAL [(duration>0) ? duration : 0] MINUTE, '[ckey]', '[computerid]', INET_ATON('[ip]'), '[a_ckey]', '[a_computerid]', INET_ATON('[a_ip]'), '[who]', '[adminwho]')"
+	var/DBQuery/query_add_ban = dbcon.NewQuery(sql)
+	if(!query_add_ban.warn_execute())
+		return
+	to_chat(usr, "<span class='adminnotice'>Ban saved to database.</span>")
 	message_admins("[key_name_admin(usr)] has added a [bantype_str] for [ckey] [(job)?"([job])":""] [(duration > 0)?"([duration] minutes)":""] with the reason: \"[reason]\" to the ban database.",1)
 
 	if(announceinirc)
@@ -183,31 +187,31 @@
 	if(job)
 		sql += " AND job = '[job]'"
 
-	establish_db_connection()
-	if(!dbcon.IsConnected())
+	if(!dbcon.Connect())
 		return
 
 	var/ban_id
 	var/ban_number = 0 //failsafe
 
-	var/DBQuery/query = dbcon.NewQuery(sql)
-	query.Execute()
-	while(query.NextRow())
-		ban_id = query.item[1]
+	var/DBQuery/query_unban_get_id = dbcon.NewQuery(sql)
+	if(!query_unban_get_id.warn_execute())
+		return
+	while(query_unban_get_id.NextRow())
+		ban_id = query_unban_get_id.item[1]
 		ban_number++;
 
 	if(ban_number == 0)
-		usr << "<span class='danger'>Database update failed due to no bans fitting the search criteria. If this is not a legacy ban you should contact the database admin.</span>"
+		to_chat(usr, "<span class='danger'>Database update failed due to no bans fitting the search criteria. If this is not a legacy ban you should contact the database admin.</span>")
 		return
 
 	if(ban_number > 1)
-		usr << "<span class='danger'>Database update failed due to multiple bans fitting the search criteria. Note down the ckey, job and current time and contact the database admin.</span>"
+		to_chat(usr, "<span class='danger'>Database update failed due to multiple bans fitting the search criteria. Note down the ckey, job and current time and contact the database admin.</span>")
 		return
 
 	if(istext(ban_id))
 		ban_id = text2num(ban_id)
 	if(!isnum(ban_id))
-		usr << "<span class='danger'>Database update failed due to a ban ID mismatch. Contact the database admin.</span>"
+		to_chat(usr, "<span class='danger'>Database update failed due to a ban ID mismatch. Contact the database admin.</span>")
 		return
 
 	DB_ban_unban_by_id(ban_id)
@@ -218,23 +222,24 @@
 		return
 
 	if(!isnum(banid) || !istext(param))
-		usr << "Cancelled"
+		to_chat(usr, "Cancelled")
 		return
 
-	var/DBQuery/query = dbcon.NewQuery("SELECT ckey, duration, reason FROM [format_table_name("ban")] WHERE id = [banid]")
-	query.Execute()
+	var/DBQuery/query_edit_ban_get_details = dbcon.NewQuery("SELECT ckey, duration, reason FROM [format_table_name("ban")] WHERE id = [banid]")
+	if(!query_edit_ban_get_details.warn_execute())
+		return
 
 	var/eckey = usr.ckey	//Editing admin ckey
 	var/pckey				//(banned) Player ckey
 	var/duration			//Old duration
 	var/reason				//Old reason
 
-	if(query.NextRow())
-		pckey = query.item[1]
-		duration = query.item[2]
-		reason = query.item[3]
+	if(query_edit_ban_get_details.NextRow())
+		pckey = query_edit_ban_get_details.item[1]
+		duration = query_edit_ban_get_details.item[2]
+		reason = query_edit_ban_get_details.item[3]
 	else
-		usr << "Invalid ban id. Contact the database admin"
+		to_chat(usr, "Invalid ban id. Contact the database admin")
 		return
 
 	reason = sanitizeSQL(reason)
@@ -246,31 +251,33 @@
 				value = input("Insert the new reason for [pckey]'s ban", "New Reason", "[reason]", null) as null|text
 				value = sanitizeSQL(value)
 				if(!value)
-					usr << "Cancelled"
+					to_chat(usr, "Cancelled")
 					return
 
-			var/DBQuery/update_query = dbcon.NewQuery("UPDATE [format_table_name("ban")] SET reason = '[value]', edits = CONCAT(edits,'- [eckey] changed ban reason from <cite><b>\\\"[reason]\\\"</b></cite> to <cite><b>\\\"[value]\\\"</b></cite><BR>') WHERE id = [banid]")
-			update_query.Execute()
+			var/DBQuery/query_edit_ban_reason = dbcon.NewQuery("UPDATE [format_table_name("ban")] SET reason = '[value]', edits = CONCAT(edits,'- [eckey] changed ban reason from <cite><b>\\\"[reason]\\\"</b></cite> to <cite><b>\\\"[value]\\\"</b></cite><BR>') WHERE id = [banid]")
+			if(!query_edit_ban_reason.warn_execute())
+				return
 			message_admins("[key_name_admin(usr)] has edited a ban for [pckey]'s reason from [reason] to [value]",1)
 		if("duration")
 			if(!value)
 				value = input("Insert the new duration (in minutes) for [pckey]'s ban", "New Duration", "[duration]", null) as null|num
 				if(!isnum(value) || !value)
-					usr << "Cancelled"
+					to_chat(usr, "Cancelled")
 					return
 
-			var/DBQuery/update_query = dbcon.NewQuery("UPDATE [format_table_name("ban")] SET duration = [value], edits = CONCAT(edits,'- [eckey] changed ban duration from [duration] to [value]<br>'), expiration_time = DATE_ADD(bantime, INTERVAL [value] MINUTE) WHERE id = [banid]")
+			var/DBQuery/query_edit_ban_duration = dbcon.NewQuery("UPDATE [format_table_name("ban")] SET duration = [value], edits = CONCAT(edits,'- [eckey] changed ban duration from [duration] to [value]<br>'), expiration_time = DATE_ADD(bantime, INTERVAL [value] MINUTE) WHERE id = [banid]")
+			if(!query_edit_ban_duration.warn_execute())
+				return
 			message_admins("[key_name_admin(usr)] has edited a ban for [pckey]'s duration from [duration] to [value]",1)
-			update_query.Execute()
 		if("unban")
 			if(alert("Unban [pckey]?", "Unban?", "Yes", "No") == "Yes")
 				DB_ban_unban_by_id(banid)
 				return
 			else
-				usr << "Cancelled"
+				to_chat(usr, "Cancelled")
 				return
 		else
-			usr << "Cancelled"
+			to_chat(usr, "Cancelled")
 			return
 
 /datum/admins/proc/DB_ban_unban_by_id(id)
@@ -280,25 +287,25 @@
 
 	var/sql = "SELECT ckey FROM [format_table_name("ban")] WHERE id = [id]"
 
-	establish_db_connection()
-	if(!dbcon.IsConnected())
+	if(!dbcon.Connect())
 		return
 
 	var/ban_number = 0 //failsafe
 
 	var/pckey
-	var/DBQuery/query = dbcon.NewQuery(sql)
-	query.Execute()
-	while(query.NextRow())
-		pckey = query.item[1]
+	var/DBQuery/query_unban_get_ckey = dbcon.NewQuery(sql)
+	if(!query_unban_get_ckey.warn_execute())
+		return
+	while(query_unban_get_ckey.NextRow())
+		pckey = query_unban_get_ckey.item[1]
 		ban_number++;
 
 	if(ban_number == 0)
-		usr << "<span class='danger'>Database update failed due to a ban id not being present in the database.</span>"
+		to_chat(usr, "<span class='danger'>Database update failed due to a ban id not being present in the database.</span>")
 		return
 
 	if(ban_number > 1)
-		usr << "<span class='danger'>Database update failed due to multiple bans having the same ID. Contact the database admin.</span>"
+		to_chat(usr, "<span class='danger'>Database update failed due to multiple bans having the same ID. Contact the database admin.</span>")
 		return
 
 	if(!src.owner || !istype(src.owner, /client))
@@ -308,13 +315,12 @@
 	var/unban_computerid = src.owner:computer_id
 	var/unban_ip = src.owner:address
 
-	var/sql_update = "UPDATE [format_table_name("ban")] SET unbanned = 1, unbanned_datetime = Now(), unbanned_ckey = '[unban_ckey]', unbanned_computerid = '[unban_computerid]', unbanned_ip = '[unban_ip]' WHERE id = [id]"
+	var/sql_update = "UPDATE [format_table_name("ban")] SET unbanned = 1, unbanned_datetime = Now(), unbanned_ckey = '[unban_ckey]', unbanned_computerid = '[unban_computerid]', unbanned_ip = INET_ATON('[unban_ip]') WHERE id = [id]"
+	var/DBQuery/query_unban = dbcon.NewQuery(sql_update)
+	if(!query_unban.warn_execute())
+		return
 	message_admins("[key_name_admin(usr)] has lifted [pckey]'s ban.",1)
 
-	var/DBQuery/query_update = dbcon.NewQuery(sql_update)
-	query_update.Execute()
-
-
 /client/proc/DB_ban_panel()
 	set category = "Admin"
 	set name = "Banning Panel"
@@ -326,16 +332,15 @@
 	holder.DB_ban_panel()
 
 
-/datum/admins/proc/DB_ban_panel(playerckey = null, adminckey = null)
+/datum/admins/proc/DB_ban_panel(playerckey = null, adminckey = null, page = 0)
 	if(!usr.client)
 		return
 
 	if(!check_rights(R_BAN))
 		return
 
-	establish_db_connection()
-	if(!dbcon.IsConnected())
-		usr << "<span class='danger'>Failed to establish database connection.</span>"
+	if(!dbcon.Connect())
+		to_chat(usr, "<span class='danger'>Failed to establish database connection.</span>")
 		return
 
 	var/output = "<div align='center'><table width='90%'><tr>"
@@ -388,7 +393,30 @@
 	output += "Please note that all jobban bans or unbans are in-effect the following round."
 
 	if(adminckey || playerckey)
-
+		playerckey = sanitizeSQL(ckey(playerckey))
+		adminckey = sanitizeSQL(ckey(adminckey))
+		var/playersearch = ""
+		var/adminsearch = ""
+		if(playerckey)
+			playersearch = "AND ckey = '[playerckey]' "
+		if(adminckey)
+			adminsearch = "AND a_ckey = '[adminckey]' "
+		var/bancount = 0
+		var/bansperpage = 15
+		var/pagecount = 0
+		page = text2num(page)
+		var/DBQuery/query_count_bans = dbcon.NewQuery("SELECT COUNT(id) FROM [format_table_name("ban")] WHERE 1 [playersearch] [adminsearch]")
+		if(!query_count_bans.warn_execute())
+			return
+		if(query_count_bans.NextRow())
+			bancount = text2num(query_count_bans.item[1])
+		if(bancount > bansperpage)
+			output += "<br><b>Page: </b>"
+			while(bancount > 0)
+				output+= "|<a href='?_src_=holder;dbsearchckey=[playerckey];dbsearchadmin=[adminckey];dbsearchpage=[pagecount]'>[pagecount == page ? "<b>\[[pagecount]\]</b>" : "\[[pagecount]\]"]</a>"
+				bancount -= bansperpage
+				pagecount++
+			output += "|"
 		var/blcolor = "#ffeeee" //banned light
 		var/bdcolor = "#ffdddd" //banned dark
 		var/ulcolor = "#eeffee" //unbanned light
@@ -402,33 +430,25 @@
 		output += "<th width='20%'><b>ADMIN</b></th>"
 		output += "<th width='15%'><b>OPTIONS</b></th>"
 		output += "</tr>"
+		var/limit = " LIMIT [bansperpage * page], [bansperpage]"
+		var/DBQuery/query_search_bans = dbcon.NewQuery("SELECT id, bantime, bantype, reason, job, duration, expiration_time, ckey, a_ckey, unbanned, unbanned_ckey, unbanned_datetime, edits FROM [format_table_name("ban")] WHERE 1 [playersearch] [adminsearch] ORDER BY bantime DESC[limit]")
+		if(!query_search_bans.warn_execute())
+			return
 
-		adminckey = ckey(adminckey)
-		playerckey = ckey(playerckey)
-		var/adminsearch = ""
-		var/playersearch = ""
-		if(adminckey)
-			adminsearch = "AND a_ckey = '[adminckey]' "
-		if(playerckey)
-			playersearch = "AND ckey = '[playerckey]' "
-
-		var/DBQuery/select_query = dbcon.NewQuery("SELECT id, bantime, bantype, reason, job, duration, expiration_time, ckey, a_ckey, unbanned, unbanned_ckey, unbanned_datetime, edits FROM [format_table_name("ban")] WHERE 1 [playersearch] [adminsearch] ORDER BY bantime DESC")
-		select_query.Execute()
-
-		while(select_query.NextRow())
-			var/banid = select_query.item[1]
-			var/bantime = select_query.item[2]
-			var/bantype  = select_query.item[3]
-			var/reason = select_query.item[4]
-			var/job = select_query.item[5]
-			var/duration = select_query.item[6]
-			var/expiration = select_query.item[7]
-			var/ckey = select_query.item[8]
-			var/ackey = select_query.item[9]
-			var/unbanned = select_query.item[10]
-			var/unbanckey = select_query.item[11]
-			var/unbantime = select_query.item[12]
-			var/edits = select_query.item[13]
+		while(query_search_bans.NextRow())
+			var/banid = query_search_bans.item[1]
+			var/bantime = query_search_bans.item[2]
+			var/bantype  = query_search_bans.item[3]
+			var/reason = query_search_bans.item[4]
+			var/job = query_search_bans.item[5]
+			var/duration = query_search_bans.item[6]
+			var/expiration = query_search_bans.item[7]
+			var/ckey = query_search_bans.item[8]
+			var/ackey = query_search_bans.item[9]
+			var/unbanned = query_search_bans.item[10]
+			var/unbanckey = query_search_bans.item[11]
+			var/unbantime = query_search_bans.item[12]
+			var/edits = query_search_bans.item[13]
 
 			var/lcolor = blcolor
 			var/dcolor = bdcolor
