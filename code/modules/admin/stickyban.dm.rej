diff a/code/modules/admin/stickyban.dm b/code/modules/admin/stickyban.dm	(rejected hunks)
@@ -21,7 +21,7 @@
 			ban["ckey"] = ckey
 
 			if (get_stickyban_from_ckey(ckey))
-				usr << "<span class='adminnotice'>Error: Can not add a stickyban: User already has a current sticky ban</span>"
+				to_chat(usr, "<span class='adminnotice'>Error: Can not add a stickyban: User already has a current sticky ban</span>")
 
 			if (data["reason"])
 				ban["message"] = data["reason"]
@@ -33,7 +33,7 @@
 
 			world.SetConfig("ban",ckey,list2stickyban(ban))
 
-			log_admin("[key_name(usr)] has stickybanned [ckey].\nReason: [ban["message"]]")
+			log_admin_private("[key_name(usr)] has stickybanned [ckey].\nReason: [ban["message"]]")
 			message_admins("<span class='adminnotice'>[key_name_admin(usr)] has stickybanned [ckey].\nReason: [ban["message"]]</span>")
 
 		if ("remove")
@@ -43,16 +43,16 @@
 
 			var/ban = get_stickyban_from_ckey(ckey)
 			if (!ban)
-				usr << "<span class='adminnotice'>Error: No sticky ban for [ckey] found!</span>"
+				to_chat(usr, "<span class='adminnotice'>Error: No sticky ban for [ckey] found!</span>")
 				return
 			if (alert("Are you sure you want to remove the sticky ban on [ckey]?","Are you sure","Yes","No") == "No")
 				return
 			if (!get_stickyban_from_ckey(ckey))
-				usr << "<span class='adminnotice'>Error: The ban disappeared.</span>"
+				to_chat(usr, "<span class='adminnotice'>Error: The ban disappeared.</span>")
 				return
 			world.SetConfig("ban",ckey, null)
 
-			log_admin("[key_name(usr)] removed [ckey]'s stickyban")
+			log_admin_private("[key_name(usr)] removed [ckey]'s stickyban")
 			message_admins("<span class='adminnotice'>[key_name_admin(usr)] removed [ckey]'s stickyban</span>")
 
 		if ("remove_alt")
@@ -64,7 +64,7 @@
 			var/alt = ckey(data["alt"])
 			var/ban = get_stickyban_from_ckey(ckey)
 			if (!ban)
-				usr << "<span class='adminnotice'>Error: No sticky ban for [ckey] found!</span>"
+				to_chat(usr, "<span class='adminnotice'>Error: No sticky ban for [ckey] found!</span>")
 				return
 
 			var/found = 0
@@ -75,7 +75,7 @@
 					break
 
 			if (!found)
-				usr << "<span class='adminnotice'>Error: [alt] is not linked to [ckey]'s sticky ban!</span>"
+				to_chat(usr, "<span class='adminnotice'>Error: [alt] is not linked to [ckey]'s sticky ban!</span>")
 				return
 
 			if (alert("Are you sure you want to disassociate [alt] from [ckey]'s sticky ban? \nNote: Nothing stops byond from re-linking them","Are you sure","Yes","No") == "No")
@@ -84,7 +84,7 @@
 			//we have to do this again incase something changes
 			ban = get_stickyban_from_ckey(ckey)
 			if (!ban)
-				usr << "<span class='adminnotice'>Error: The ban disappeared.</span>"
+				to_chat(usr, "<span class='adminnotice'>Error: The ban disappeared.</span>")
 				return
 
 			found = 0
@@ -95,12 +95,12 @@
 					break
 
 			if (!found)
-				usr << "<span class='adminnotice'>Error: [alt] link to [ckey]'s sticky ban disappeared.</span>"
+				to_chat(usr, "<span class='adminnotice'>Error: [alt] link to [ckey]'s sticky ban disappeared.</span>")
 				return
 
 			world.SetConfig("ban",ckey,list2stickyban(ban))
 
-			log_admin("[key_name(usr)] has disassociated [alt] from [ckey]'s sticky ban")
+			log_admin_private("[key_name(usr)] has disassociated [alt] from [ckey]'s sticky ban")
 			message_admins("<span class='adminnotice'>[key_name_admin(usr)] has disassociated [alt] from [ckey]'s sticky ban</span>")
 
 		if ("edit")
@@ -109,7 +109,7 @@
 			var/ckey = data["ckey"]
 			var/ban = get_stickyban_from_ckey(ckey)
 			if (!ban)
-				usr << "<span class='adminnotice'>Error: No sticky ban for [ckey] found!"
+				to_chat(usr, "<span class='adminnotice'>Error: No sticky ban for [ckey] found!")
 				return
 			var/oldreason = ban["message"]
 			var/reason = input(usr,"Reason","Reason","[ban["message"]]") as text|null
@@ -118,13 +118,13 @@
 			//we have to do this again incase something changed while we waited for input
 			ban = get_stickyban_from_ckey(ckey)
 			if (!ban)
-				usr << "<span class='adminnotice'>Error: The ban disappeared.</span>"
+				to_chat(usr, "<span class='adminnotice'>Error: The ban disappeared.</span>")
 				return
 			ban["message"] = "[reason]"
 
 			world.SetConfig("ban",ckey,list2stickyban(ban))
 
-			log_admin("[key_name(usr)] has edited [ckey]'s sticky ban reason from [oldreason] to [reason]")
+			log_admin_private("[key_name(usr)] has edited [ckey]'s sticky ban reason from [oldreason] to [reason]")
 			message_admins("<span class='adminnotice'>[key_name_admin(usr)] has edited [ckey]'s sticky ban reason from [oldreason] to [reason]</span>")
 
 		if ("revert")
@@ -135,14 +135,14 @@
 				return
 			var/ban = get_stickyban_from_ckey(ckey)
 			if (!ban)
-				usr << "<span class='adminnotice'>Error: No sticky ban for [ckey] found!"
+				to_chat(usr, "<span class='adminnotice'>Error: No sticky ban for [ckey] found!")
 				return
 			var/cached_ban = SSstickyban.cache[ckey]
 			if (!cached_ban)
-				usr << "<span class='adminnotice'>Error: No cached sticky ban for [ckey] found!"
+				to_chat(usr, "<span class='adminnotice'>Error: No cached sticky ban for [ckey] found!")
 			world.SetConfig("ban",ckey,null)
 
-			log_admin("[key_name(usr)] has reverted [ckey]'s sticky ban to it's state at round start.")
+			log_admin_private("[key_name(usr)] has reverted [ckey]'s sticky ban to it's state at round start.")
 			message_admins("<span class='adminnotice'>[key_name_admin(usr)] has reverted [ckey]'s sticky ban to it's state at round start.</span>")
 			//revert is mostly used when shit goes rouge, so we have to set it to null
 			//	and wait a byond tick before assigning it to ensure byond clears its shit.
