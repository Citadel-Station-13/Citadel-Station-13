diff a/code/modules/client/preferences_toggles.dm b/code/modules/client/preferences_toggles.dm	(rejected hunks)
@@ -4,7 +4,7 @@
 	set category = "Preferences"
 	set desc = ".Toggle Between seeing all mob speech, and only speech of nearby mobs"
 	prefs.chat_toggles ^= CHAT_GHOSTEARS
-	src << "As a ghost, you will now [(prefs.chat_toggles & CHAT_GHOSTEARS) ? "see all speech in the world" : "only see speech from nearby mobs"]."
+	to_chat(src, "As a ghost, you will now [(prefs.chat_toggles & CHAT_GHOSTEARS) ? "see all speech in the world" : "only see speech from nearby mobs"].")
 	prefs.save_preferences()
 	feedback_add_details("admin_verb","TGE") //If you are copy-pasting this, ensure the 2nd parameter is unique to the new proc!
 
@@ -13,7 +13,7 @@
 	set category = "Preferences"
 	set desc = ".Toggle Between seeing all mob emotes, and only emotes of nearby mobs"
 	prefs.chat_toggles ^= CHAT_GHOSTSIGHT
-	src << "As a ghost, you will now [(prefs.chat_toggles & CHAT_GHOSTSIGHT) ? "see all emotes in the world" : "only see emotes from nearby mobs"]."
+	to_chat(src, "As a ghost, you will now [(prefs.chat_toggles & CHAT_GHOSTSIGHT) ? "see all emotes in the world" : "only see emotes from nearby mobs"].")
 	prefs.save_preferences()
 	feedback_add_details("admin_verb","TGS") //If you are copy-pasting this, ensure the 2nd parameter is unique to the new proc!
 
@@ -22,7 +22,7 @@
 	set category = "Preferences"
 	set desc = ".Toggle between hearing all whispers, and only whispers of nearby mobs"
 	prefs.chat_toggles ^= CHAT_GHOSTWHISPER
-	src << "As a ghost, you will now [(prefs.chat_toggles & CHAT_GHOSTWHISPER) ? "see all whispers in the world" : "only see whispers from nearby mobs"]."
+	to_chat(src, "As a ghost, you will now [(prefs.chat_toggles & CHAT_GHOSTWHISPER) ? "see all whispers in the world" : "only see whispers from nearby mobs"].")
 	prefs.save_preferences()
 	feedback_add_details("admin_verb","TGW") //If you are copy-pasting this, ensure the 2nd parameter is unique to the new proc!
 
@@ -31,7 +31,7 @@
 	set category = "Preferences"
 	set desc = ".Enable or disable hearing radio chatter as a ghost"
 	prefs.chat_toggles ^= CHAT_GHOSTRADIO
-	src << "As a ghost, you will now [(prefs.chat_toggles & CHAT_GHOSTRADIO) ? "see radio chatter" : "not see radio chatter"]."
+	to_chat(src, "As a ghost, you will now [(prefs.chat_toggles & CHAT_GHOSTRADIO) ? "see radio chatter" : "not see radio chatter"].")
 	prefs.save_preferences()
 	feedback_add_details("admin_verb","TGR") //If you are copy-pasting this, ensure the 2nd parameter is unique to the new proc! //social experiment, increase the generation whenever you copypaste this shamelessly GENERATION 1
 
@@ -40,7 +40,7 @@
 	set category = "Preferences"
 	set desc = ".Toggle Between seeing all mob pda messages, and only pda messages of nearby mobs"
 	prefs.chat_toggles ^= CHAT_GHOSTPDA
-	src << "As a ghost, you will now [(prefs.chat_toggles & CHAT_GHOSTPDA) ? "see all pda messages in the world" : "only see pda messages from nearby mobs"]."
+	to_chat(src, "As a ghost, you will now [(prefs.chat_toggles & CHAT_GHOSTPDA) ? "see all pda messages in the world" : "only see pda messages from nearby mobs"].")
 	prefs.save_preferences()
 	feedback_add_details("admin_verb","TGP") //If you are copy-pasting this, ensure the 2nd parameter is unique to the new proc!
 
@@ -51,7 +51,7 @@
 	if(!holder) return
 	prefs.chat_toggles ^= CHAT_RADIO
 	prefs.save_preferences()
-	usr << "You will [(prefs.chat_toggles & CHAT_RADIO) ? "now" : "no longer"] see radio chatter from nearby radios or speakers"
+	to_chat(usr, "You will [(prefs.chat_toggles & CHAT_RADIO) ? "now" : "no longer"] see radio chatter from nearby radios or speakers")
 	feedback_add_details("admin_verb","THR") //If you are copy-pasting this, ensure the 2nd parameter is unique to the new proc!
 
 /client/verb/toggle_deathrattle()
@@ -61,9 +61,7 @@
 		die."
 	prefs.toggles ^= DISABLE_DEATHRATTLE
 	prefs.save_preferences()
-	usr << "You will \
-		[(prefs.toggles & DISABLE_DEATHRATTLE) ? "no longer" : "now"] get \
-		messages when a sentient mob dies."
+	to_chat(usr, "You will [(prefs.toggles & DISABLE_DEATHRATTLE) ? "no longer" : "now"] get messages when a sentient mob dies.")
 	feedback_add_details("admin_verb", "TDR") // If you are copy-pasting this, maybe you should spend some time reading the comments.
 
 /client/verb/toggle_arrivalrattle()
@@ -72,9 +70,7 @@
 	set desc = "Toggle recieving a message in deadchat when someone joins \
 		the station."
 	prefs.toggles ^= DISABLE_ARRIVALRATTLE
-	usr << "You will \
-		[(prefs.toggles & DISABLE_ARRIVALRATTLE) ? "no longer" : "now"] get \
-		messages when someone joins the station."
+	to_chat(usr, "You will [(prefs.toggles & DISABLE_ARRIVALRATTLE) ? "no longer" : "now"] get messages when someone joins the station.")
 	prefs.save_preferences()
 	feedback_add_details("admin_verb", "TAR") // If you are copy-pasting this, maybe you should rethink where your life went so wrong.
 
@@ -86,7 +82,7 @@
 		return
 	prefs.toggles ^= SOUND_ADMINHELP
 	prefs.save_preferences()
-	usr << "You will [(prefs.toggles & SOUND_ADMINHELP) ? "now" : "no longer"] hear a sound when adminhelps arrive."
+	to_chat(usr, "You will [(prefs.toggles & SOUND_ADMINHELP) ? "now" : "no longer"] hear a sound when adminhelps arrive.")
 	feedback_add_details("admin_verb","AHS") //If you are copy-pasting this, ensure the 2nd parameter is unique to the new proc!
 
 /client/proc/toggleannouncelogin()
@@ -97,7 +93,7 @@
 		return
 	prefs.toggles ^= ANNOUNCE_LOGIN
 	prefs.save_preferences()
-	usr << "You will [(prefs.toggles & ANNOUNCE_LOGIN) ? "now" : "no longer"] have an announcement to other admins when you login."
+	to_chat(usr, "You will [(prefs.toggles & ANNOUNCE_LOGIN) ? "now" : "no longer"] have an announcement to other admins when you login.")
 	feedback_add_details("admin_verb","TAL") //If you are copy-pasting this, ensure the 2nd parameter is unique to the new proc!
 
 /client/proc/deadchat()
@@ -106,7 +102,7 @@
 	set desc ="Toggles seeing deadchat"
 	prefs.chat_toggles ^= CHAT_DEAD
 	prefs.save_preferences()
-	src << "You will [(prefs.chat_toggles & CHAT_DEAD) ? "now" : "no longer"] see deadchat."
+	to_chat(src, "You will [(prefs.chat_toggles & CHAT_DEAD) ? "now" : "no longer"] see deadchat.")
 	feedback_add_details("admin_verb","TDV") //If you are copy-pasting this, ensure the 2nd parameter is unique to the new proc!
 
 /client/proc/toggleprayers()
@@ -115,7 +111,7 @@
 	set desc = "Toggles seeing prayers"
 	prefs.chat_toggles ^= CHAT_PRAYER
 	prefs.save_preferences()
-	src << "You will [(prefs.chat_toggles & CHAT_PRAYER) ? "now" : "no longer"] see prayerchat."
+	to_chat(src, "You will [(prefs.chat_toggles & CHAT_PRAYER) ? "now" : "no longer"] see prayerchat.")
 	feedback_add_details("admin_verb","TP") //If you are copy-pasting this, ensure the 2nd parameter is unique to the new proc!
 
 /client/verb/toggleprayersounds()
@@ -125,9 +121,9 @@
 	prefs.toggles ^= SOUND_PRAYERS
 	prefs.save_preferences()
 	if(prefs.toggles & SOUND_PRAYERS)
-		src << "You will now hear prayer sounds."
+		to_chat(src, "You will now hear prayer sounds.")
 	else
-		src << "You will no longer prayer sounds."
+		to_chat(src, "You will no longer prayer sounds.")
 	feedback_add_details("admin_verb", "PSounds")
 
 /client/verb/togglemidroundantag()
@@ -136,7 +132,7 @@
 	set desc = "Toggles whether or not you will be considered for antagonist status given during a round."
 	prefs.toggles ^= MIDROUND_ANTAG
 	prefs.save_preferences()
-	src << "You will [(prefs.toggles & MIDROUND_ANTAG) ? "now" : "no longer"] be considered for midround antagonist positions."
+	to_chat(src, "You will [(prefs.toggles & MIDROUND_ANTAG) ? "now" : "no longer"] be considered for midround antagonist positions.")
 	feedback_add_details("admin_verb","TMidroundA") //If you are copy-pasting this, ensure the 2nd parameter is unique to the new proc!
 
 /client/verb/toggletitlemusic()
@@ -146,11 +142,11 @@
 	prefs.toggles ^= SOUND_LOBBY
 	prefs.save_preferences()
 	if(prefs.toggles & SOUND_LOBBY)
-		src << "You will now hear music in the game lobby."
+		to_chat(src, "You will now hear music in the game lobby.")
 		if(isnewplayer(mob))
 			playtitlemusic()
 	else
-		src << "You will no longer hear music in the game lobby."
+		to_chat(src, "You will no longer hear music in the game lobby.")
 		if(isnewplayer(mob))
 			mob.stopLobbySound()
 	feedback_add_details("admin_verb","TLobby") //If you are copy-pasting this, ensure the 2nd parameter is unique to the new proc!
@@ -162,14 +158,14 @@
 	prefs.toggles ^= SOUND_MIDI
 	prefs.save_preferences()
 	if(prefs.toggles & SOUND_MIDI)
-		src << "You will now hear any sounds uploaded by admins."
+		to_chat(src, "You will now hear any sounds uploaded by admins.")
 		if(admin_sound)
-			src << admin_sound
+			to_chat(src, admin_sound)
 	else
-		src << "You will no longer hear sounds uploaded by admins; any currently playing midis have been disabled."
+		to_chat(src, "You will no longer hear sounds uploaded by admins; any currently playing midis have been disabled.")
 		if(admin_sound && !(admin_sound.status & SOUND_PAUSED))
 			admin_sound.status |= SOUND_PAUSED
-			src << admin_sound
+			to_chat(src, admin_sound)
 			admin_sound.status ^= SOUND_PAUSED
 	feedback_add_details("admin_verb","TMidi") //If you are copy-pasting this, ensure the 2nd parameter is unique to the new proc!
 
@@ -186,7 +182,7 @@
 	set desc = "Toggles seeing OutOfCharacter chat"
 	prefs.chat_toggles ^= CHAT_OOC
 	prefs.save_preferences()
-	src << "You will [(prefs.chat_toggles & CHAT_OOC) ? "now" : "no longer"] see messages on the OOC channel."
+	to_chat(src, "You will [(prefs.chat_toggles & CHAT_OOC) ? "now" : "no longer"] see messages on the OOC channel.")
 	feedback_add_details("admin_verb","TOOC") //If you are copy-pasting this, ensure the 2nd parameter is unique to the new proc!
 
 /client/verb/Toggle_Soundscape() //All new ambience should be added here so it works with this verb until someone better at things comes up with a fix that isn't awful
@@ -196,9 +192,9 @@
 	prefs.toggles ^= SOUND_AMBIENCE
 	prefs.save_preferences()
 	if(prefs.toggles & SOUND_AMBIENCE)
-		src << "You will now hear ambient sounds."
+		to_chat(src, "You will now hear ambient sounds.")
 	else
-		src << "You will no longer hear ambient sounds."
+		to_chat(src, "You will no longer hear ambient sounds.")
 		src << sound(null, repeat = 0, wait = 0, volume = 0, channel = 1)
 		src << sound(null, repeat = 0, wait = 0, volume = 0, channel = 2)
 	feedback_add_details("admin_verb","TAmbi") //If you are copy-pasting this, ensure the 2nd parameter is unique to the new proc!
@@ -211,9 +207,9 @@
 	prefs.toggles ^= SOUND_INSTRUMENTS
 	prefs.save_preferences()
 	if(prefs.toggles & SOUND_INSTRUMENTS)
-		src << "You will now hear people playing musical instruments."
+		to_chat(src, "You will now hear people playing musical instruments.")
 	else
-		src << "You will no longer hear musical instruments."
+		to_chat(src, "You will no longer hear musical instruments.")
 	feedback_add_details("admin_verb","TInstru") //If you are copy-pasting this, ensure the 2nd parameter is unique to the new proc!
 
 //Lots of people get headaches from the normal ship ambience, this is to prevent that
@@ -224,9 +220,9 @@
 	prefs.toggles ^= SOUND_SHIP_AMBIENCE
 	prefs.save_preferences()
 	if(prefs.toggles & SOUND_SHIP_AMBIENCE)
-		src << "You will now hear ship ambience."
+		to_chat(src, "You will now hear ship ambience.")
 	else
-		src << "You will no longer hear ship ambience."
+		to_chat(src, "You will no longer hear ship ambience.")
 		src << sound(null, repeat = 0, wait = 0, volume = 0, channel = 2)
 		src.ambience_playing = 0
 	feedback_add_details("admin_verb", "SAmbi") //If you are copy-pasting this, I bet you read this comment expecting to see the same thing :^)
@@ -315,7 +311,7 @@ var/global/list/ghost_orbits = list(GHOST_ORBIT_CIRCLE,GHOST_ORBIT_TRIANGLE,GHOS
 	set category = "Preferences"
 	set desc = "Toggle between directly clicking the desired intent or clicking to rotate through."
 	prefs.toggles ^= INTENT_STYLE
-	src << "[(prefs.toggles & INTENT_STYLE) ? "Clicking directly on intents selects them." : "Clicking on intents rotates selection clockwise."]"
+	to_chat(src, "[(prefs.toggles & INTENT_STYLE) ? "Clicking directly on intents selects them." : "Clicking on intents rotates selection clockwise."]")
 	prefs.save_preferences()
 	feedback_add_details("admin_verb","ITENTS") //If you are copy-pasting this, ensure the 2nd parameter is unique to the new proc!
 
@@ -332,7 +328,7 @@ var/global/list/ghost_orbits = list(GHOST_ORBIT_CIRCLE,GHOST_ORBIT_TRIANGLE,GHOS
 	set desc = "Hide/Show Ghost HUD"
 
 	prefs.ghost_hud = !prefs.ghost_hud
-	src << "Ghost HUD will now be [prefs.ghost_hud ? "visible" : "hidden"]."
+	to_chat(src, "Ghost HUD will now be [prefs.ghost_hud ? "visible" : "hidden"].")
 	prefs.save_preferences()
 	if(isobserver(mob))
 		mob.hud_used.show_hud()
@@ -345,15 +341,15 @@ var/global/list/ghost_orbits = list(GHOST_ORBIT_CIRCLE,GHOST_ORBIT_TRIANGLE,GHOS
 	prefs.inquisitive_ghost = !prefs.inquisitive_ghost
 	prefs.save_preferences()
 	if(prefs.inquisitive_ghost)
-		src << "<span class='notice'>You will now examine everything you click on.</span>"
+		to_chat(src, "<span class='notice'>You will now examine everything you click on.</span>")
 	else
-		src << "<span class='notice'>You will no longer examine things you click on.</span>"
+		to_chat(src, "<span class='notice'>You will no longer examine things you click on.</span>")
 
 /client/verb/toggle_announcement_sound()
 	set name = "Hear/Silence Announcements"
 	set category = "Preferences"
 	set desc = ".Toggles hearing Central Command, Captain, VOX, and other announcement sounds"
 	prefs.toggles ^= SOUND_ANNOUNCEMENTS
-	src << "You will now [(prefs.toggles & SOUND_ANNOUNCEMENTS) ? "hear announcement sounds" : "no longer hear announcements"]."
+	to_chat(src, "You will now [(prefs.toggles & SOUND_ANNOUNCEMENTS) ? "hear announcement sounds" : "no longer hear announcements"].")
 	prefs.save_preferences()
 	feedback_add_details("admin_verb","TAS") //If you are copy-pasting this, ensure the 2nd parameter is unique to the new proc!
