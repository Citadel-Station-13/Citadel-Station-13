diff a/code/modules/research/xenobiology/xenobio_camera.dm b/code/modules/research/xenobiology/xenobio_camera.dm	(rejected hunks)
@@ -3,11 +3,16 @@
 	visible_icon = 1
 	icon = 'icons/obj/abductor.dmi'
 	icon_state = "camera_target"
+	var/allowed_area = null
 
+/mob/camera/aiEye/remote/xenobio/Initialize()
+	var/area/A = get_area(loc)
+	allowed_area = A.name
+	..()
 
 /mob/camera/aiEye/remote/xenobio/setLoc(var/t)
 	var/area/new_area = get_area(t)
-	if(new_area && new_area.name == "Xenobiology Lab" || istype(new_area, /area/toxins/xenobiology ))
+	if(new_area && new_area.name == allowed_area || istype(new_area, /area/toxins/xenobiology ))
 		return ..()
 	else
 		return
@@ -16,6 +21,7 @@
 	name = "Slime management console"
 	desc = "A computer used for remotely handling slimes."
 	networks = list("SS13")
+	circuit = /obj/item/weapon/circuitboard/computer/xenobiology
 	off_action = new/datum/action/innate/camera_off/xenobio
 	var/datum/action/innate/slime_place/slime_place_action = new
 	var/datum/action/innate/slime_pick_up/slime_up_action = new
@@ -29,15 +35,16 @@
 	icon_screen = "slime_comp"
 	icon_keyboard = "rd_key"
 
+	light_color = LIGHT_COLOR_PINK
+
 /obj/machinery/computer/camera_advanced/xenobio/CreateEye()
-	eyeobj = new /mob/camera/aiEye/remote/xenobio()
-	eyeobj.loc = get_turf(src)
+	eyeobj = new /mob/camera/aiEye/remote/xenobio(get_turf(src))
 	eyeobj.origin = src
 	eyeobj.visible_icon = 1
 	eyeobj.icon = 'icons/obj/abductor.dmi'
 	eyeobj.icon_state = "camera_target"
 
-/obj/machinery/computer/camera_advanced/xenobio/GrantActions(mob/living/carbon/user)
+/obj/machinery/computer/camera_advanced/xenobio/GrantActions(mob/living/user)
 	off_action.target = user
 	off_action.Grant(user)
 
@@ -56,16 +63,10 @@
 	monkey_recycle_action.target = src
 	monkey_recycle_action.Grant(user)
 
-
-/obj/machinery/computer/camera_advanced/xenobio/attack_hand(mob/user)
-	if(!ishuman(user)) //AIs using it might be weird
-		return
-	return ..()
-
 /obj/machinery/computer/camera_advanced/xenobio/attackby(obj/item/O, mob/user, params)
 	if(istype(O, /obj/item/weapon/reagent_containers/food/snacks/monkeycube))
 		monkeys++
-		user << "<span class='notice'>You feed [O] to [src]. It now has [monkeys] monkey cubes stored.</span>"
+		to_chat(user, "<span class='notice'>You feed [O] to [src]. It now has [monkeys] monkey cubes stored.</span>")
 		user.drop_item()
 		qdel(O)
 		return
@@ -78,13 +79,14 @@
 				monkeys++
 				qdel(G)
 		if (loaded)
-			user << "<span class='notice'>You fill [src] with the monkey cubes stored in [O]. [src] now has [monkeys] monkey cubes stored.</span>"
+			to_chat(user, "<span class='notice'>You fill [src] with the monkey cubes stored in [O]. [src] now has [monkeys] monkey cubes stored.</span>")
+		return
 	..()
 
 /datum/action/innate/camera_off/xenobio/Activate()
-	if(!target || !ishuman(target))
+	if(!target || !isliving(target))
 		return
-	var/mob/living/carbon/C = target
+	var/mob/living/C = target
 	var/mob/camera/aiEye/remote/xenobio/remote_eye = C.remote_control
 	var/obj/machinery/computer/camera_advanced/xenobio/origin = remote_eye.origin
 	origin.current_user = null
@@ -110,9 +112,9 @@
 	button_icon_state = "slime_down"
 
 /datum/action/innate/slime_place/Activate()
-	if(!target || !ishuman(owner))
+	if(!target || !isliving(owner))
 		return
-	var/mob/living/carbon/human/C = owner
+	var/mob/living/C = owner
 	var/mob/camera/aiEye/remote/xenobio/remote_eye = C.remote_control
 	var/obj/machinery/computer/camera_advanced/xenobio/X = target
 
@@ -122,16 +124,16 @@
 			S.visible_message("[S] warps in!")
 			X.stored_slimes -= S
 	else
-		owner << "<span class='notice'>Target is not near a camera. Cannot proceed.</span>"
+		to_chat(owner, "<span class='notice'>Target is not near a camera. Cannot proceed.</span>")
 
 /datum/action/innate/slime_pick_up
 	name = "Pick up Slime"
 	button_icon_state = "slime_up"
 
 /datum/action/innate/slime_pick_up/Activate()
-	if(!target || !ishuman(owner))
+	if(!target || !isliving(owner))
 		return
-	var/mob/living/carbon/human/C = owner
+	var/mob/living/C = owner
 	var/mob/camera/aiEye/remote/xenobio/remote_eye = C.remote_control
 	var/obj/machinery/computer/camera_advanced/xenobio/X = target
 
@@ -146,7 +148,7 @@
 				S.loc = X
 				X.stored_slimes += S
 	else
-		owner << "<span class='notice'>Target is not near a camera. Cannot proceed.</span>"
+		to_chat(owner, "<span class='notice'>Target is not near a camera. Cannot proceed.</span>")
 
 
 /datum/action/innate/feed_slime
@@ -154,9 +156,9 @@
 	button_icon_state = "monkey_down"
 
 /datum/action/innate/feed_slime/Activate()
-	if(!target || !ishuman(owner))
+	if(!target || !isliving(owner))
 		return
-	var/mob/living/carbon/human/C = owner
+	var/mob/living/C = owner
 	var/mob/camera/aiEye/remote/xenobio/remote_eye = C.remote_control
 	var/obj/machinery/computer/camera_advanced/xenobio/X = target
 
@@ -165,9 +167,9 @@
 			var/mob/living/carbon/monkey/food = new /mob/living/carbon/monkey(remote_eye.loc)
 			food.LAssailant = C
 			X.monkeys --
-			owner << "[X] now has [X.monkeys] monkeys left."
+			to_chat(owner, "[X] now has [X.monkeys] monkeys left.")
 	else
-		owner << "<span class='notice'>Target is not near a camera. Cannot proceed.</span>"
+		to_chat(owner, "<span class='notice'>Target is not near a camera. Cannot proceed.</span>")
 
 
 /datum/action/innate/monkey_recycle
@@ -175,9 +177,9 @@
 	button_icon_state = "monkey_up"
 
 /datum/action/innate/monkey_recycle/Activate()
-	if(!target || !ishuman(owner))
+	if(!target || !isliving(owner))
 		return
-	var/mob/living/carbon/human/C = owner
+	var/mob/living/C = owner
 	var/mob/camera/aiEye/remote/xenobio/remote_eye = C.remote_control
 	var/obj/machinery/computer/camera_advanced/xenobio/X = target
 
@@ -188,4 +190,4 @@
 				X.monkeys = round(X.monkeys + 0.2,0.1)
 				qdel(M)
 	else
-		owner << "<span class='notice'>Target is not near a camera. Cannot proceed.</span>"
+		to_chat(owner, "<span class='notice'>Target is not near a camera. Cannot proceed.</span>")
