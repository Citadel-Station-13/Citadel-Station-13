diff a/code/modules/research/xenobiology/xenobiology.dm b/code/modules/research/xenobiology/xenobiology.dm	(rejected hunks)
@@ -18,7 +18,7 @@
 /obj/item/slime_extract/attackby(obj/item/O, mob/user)
 	if(istype(O, /obj/item/slimepotion/enhancer))
 		if(Uses >= 5)
-			user << "<span class='warning'>You cannot enhance this extract further!</span>"
+			to_chat(user, "<span class='warning'>You cannot enhance this extract further!</span>")
 			return ..()
 		user <<"<span class='notice'>You apply the enhancer to the slime extract. It may now be reused one more time.</span>"
 		Uses++
@@ -127,7 +127,7 @@
 
 /obj/item/slimepotion/afterattack(obj/item/weapon/reagent_containers/target, mob/user , proximity)
 	if (istype(target))
-		user << "<span class='notice'>You cannot transfer [src] to [target]! It appears the potion must be given directly to a slime to absorb.</span>" // le fluff faec
+		to_chat(user, "<span class='notice'>You cannot transfer [src] to [target]! It appears the potion must be given directly to a slime to absorb.</span>" )
 		return
 
 /obj/item/slimepotion/docility
@@ -138,10 +138,10 @@
 
 /obj/item/slimepotion/docility/attack(mob/living/simple_animal/slime/M, mob/user)
 	if(!isslime(M))
-		user << "<span class='warning'>The potion only works on slimes!</span>"
+		to_chat(user, "<span class='warning'>The potion only works on slimes!</span>")
 		return ..()
 	if(M.stat)
-		user << "<span class='warning'>The slime is dead!</span>"
+		to_chat(user, "<span class='warning'>The slime is dead!</span>")
 		return ..()
 
 	M.docile = 1
@@ -170,19 +170,19 @@
 	if(being_used || !ismob(M))
 		return
 	if(!isanimal(M) || M.ckey) //only works on animals that aren't player controlled
-		user << "<span class='warning'>[M] is already too intelligent for this to work!</span>"
+		to_chat(user, "<span class='warning'>[M] is already too intelligent for this to work!</span>")
 		return ..()
 	if(M.stat)
-		user << "<span class='warning'>[M] is dead!</span>"
+		to_chat(user, "<span class='warning'>[M] is dead!</span>")
 		return ..()
 	var/mob/living/simple_animal/SM = M
 	if(SM.sentience_type != sentience_type)
-		user << "<span class='warning'>The potion won't work on [SM].</span>"
+		to_chat(user, "<span class='warning'>The potion won't work on [SM].</span>")
 		return ..()
 
 
 
-	user << "<span class='notice'>You offer the sentience potion to [SM]...</span>"
+	to_chat(user, "<span class='notice'>You offer the sentience potion to [SM]...</span>")
 	being_used = 1
 
 	var/list/candidates = pollCandidatesForMob("Do you want to play as [SM.name]?", ROLE_ALIEN, null, ROLE_ALIEN, 50, SM, POLL_IGNORE_SENTIENCE_POTION) // see poll_ignore.dm
@@ -194,12 +194,12 @@
 		SM.languages_understood |= HUMAN
 		SM.mind.enslave_mind_to_creator(user)
 		SM.sentience_act()
-		SM << "<span class='warning'>All at once it makes sense: you know what you are and who you are! Self awareness is yours!</span>"
-		SM << "<span class='userdanger'>You are grateful to be self aware and owe [user] a great debt. Serve [user], and assist [user.p_them()] in completing [user.p_their()] goals at any cost.</span>"
-		user << "<span class='notice'>[SM] accepts the potion and suddenly becomes attentive and aware. It worked!</span>"
+		to_chat(SM, "<span class='warning'>All at once it makes sense: you know what you are and who you are! Self awareness is yours!</span>")
+		to_chat(SM, "<span class='userdanger'>You are grateful to be self aware and owe [user] a great debt. Serve [user], and assist [user.p_them()] in completing [user.p_their()] goals at any cost.</span>")
+		to_chat(user, "<span class='notice'>[SM] accepts the potion and suddenly becomes attentive and aware. It worked!</span>")
 		qdel(src)
 	else
-		user << "<span class='notice'>[SM] looks interested for a moment, but then looks back down. Maybe you should try again later.</span>"
+		to_chat(user, "<span class='notice'>[SM] looks interested for a moment, but then looks back down. Maybe you should try again later.</span>")
 		being_used = 0
 		..()
 
@@ -216,17 +216,17 @@
 	if(prompted || !ismob(M))
 		return
 	if(!isanimal(M) || M.ckey) //much like sentience, these will not work on something that is already player controlled
-		user << "<span class='warning'>[M] already has a higher consciousness!</span>"
+		to_chat(user, "<span class='warning'>[M] already has a higher consciousness!</span>")
 		return ..()
 	if(M.stat)
-		user << "<span class='warning'>[M] is dead!</span>"
+		to_chat(user, "<span class='warning'>[M] is dead!</span>")
 		return ..()
 	var/mob/living/simple_animal/SM = M
 	if(SM.sentience_type != animal_type)
-		user << "<span class='warning'>You cannot transfer your consciousness to [SM].</span>" //no controlling machines
+		to_chat(user, "<span class='warning'>You cannot transfer your consciousness to [SM].</span>" )
 		return ..()
 	if(jobban_isbanned(user, ROLE_ALIEN)) //ideally sentience and trasnference potions should be their own unique role.
-		user << "<span class='warning'>Your mind goes blank as you attempt to use the potion.</span>"
+		to_chat(user, "<span class='warning'>Your mind goes blank as you attempt to use the potion.</span>")
 		return
 
 	prompted = 1
@@ -234,7 +234,7 @@
 		prompted = 0
 		return
 
-	user << "<span class='notice'>You drink the potion then place your hands on [SM]...</span>"
+	to_chat(user, "<span class='notice'>You drink the potion then place your hands on [SM]...</span>")
 
 
 	user.mind.transfer_to(SM)
@@ -243,8 +243,8 @@
 	SM.faction = user.faction.Copy()
 	SM.sentience_act() //Same deal here as with sentience
 	user.death()
-	SM << "<span class='notice'>In a quick flash, you feel your consciousness flow into [SM]!</span>"
-	SM << "<span class='warning'>You are now [SM]. Your allegiances, alliances, and role is still the same as it was prior to consciousness transfer!</span>"
+	to_chat(SM, "<span class='notice'>In a quick flash, you feel your consciousness flow into [SM]!</span>")
+	to_chat(SM, "<span class='warning'>You are now [SM]. Your allegiances, alliances, and role is still the same as it was prior to consciousness transfer!</span>")
 	SM.name = "[SM.name] as [user.real_name]"
 	qdel(src)
 
@@ -256,13 +256,13 @@
 
 /obj/item/slimepotion/steroid/attack(mob/living/simple_animal/slime/M, mob/user)
 	if(!isslime(M))//If target is not a slime.
-		user << "<span class='warning'>The steroid only works on baby slimes!</span>"
+		to_chat(user, "<span class='warning'>The steroid only works on baby slimes!</span>")
 		return ..()
 	if(M.is_adult) //Can't steroidify adults
-		user << "<span class='warning'>Only baby slimes can use the steroid!</span>"
+		to_chat(user, "<span class='warning'>Only baby slimes can use the steroid!</span>")
 		return ..()
 	if(M.stat)
-		user << "<span class='warning'>The slime is dead!</span>"
+		to_chat(user, "<span class='warning'>The slime is dead!</span>")
 		return ..()
 	if(M.cores >= 5)
 		user <<"<span class='warning'>The slime already has the maximum amount of extract!</span>"
@@ -286,10 +286,10 @@
 
 /obj/item/slimepotion/stabilizer/attack(mob/living/simple_animal/slime/M, mob/user)
 	if(!isslime(M))
-		user << "<span class='warning'>The stabilizer only works on slimes!</span>"
+		to_chat(user, "<span class='warning'>The stabilizer only works on slimes!</span>")
 		return ..()
 	if(M.stat)
-		user << "<span class='warning'>The slime is dead!</span>"
+		to_chat(user, "<span class='warning'>The slime is dead!</span>")
 		return ..()
 	if(M.mutation_chance == 0)
 		user <<"<span class='warning'>The slime already has no chance of mutating!</span>"
@@ -307,13 +307,13 @@
 
 /obj/item/slimepotion/mutator/attack(mob/living/simple_animal/slime/M, mob/user)
 	if(!isslime(M))
-		user << "<span class='warning'>The mutator only works on slimes!</span>"
+		to_chat(user, "<span class='warning'>The mutator only works on slimes!</span>")
 		return ..()
 	if(M.stat)
-		user << "<span class='warning'>The slime is dead!</span>"
+		to_chat(user, "<span class='warning'>The slime is dead!</span>")
 		return ..()
 	if(M.mutator_used)
-		user << "<span class='warning'>This slime has already consumed a mutator, any more would be far too unstable!</span>"
+		to_chat(user, "<span class='warning'>This slime has already consumed a mutator, any more would be far too unstable!</span>")
 		return ..()
 	if(M.mutation_chance == 100)
 		user <<"<span class='warning'>The slime is already guaranteed to mutate!</span>"
@@ -334,21 +334,23 @@
 /obj/item/slimepotion/speed/afterattack(obj/C, mob/user)
 	..()
 	if(!istype(C))
-		user << "<span class='warning'>The potion can only be used on items or vehicles!</span>"
+		to_chat(user, "<span class='warning'>The potion can only be used on items or vehicles!</span>")
 		return
 	if(istype(C, /obj/item))
 		var/obj/item/I = C
 		if(I.slowdown <= 0)
-			user << "<span class='warning'>The [C] can't be made any faster!</span>"
+			to_chat(user, "<span class='warning'>The [C] can't be made any faster!</span>")
 			return ..()
 		I.slowdown = 0
 
 	if(istype(C, /obj/vehicle))
 		var/obj/vehicle/V = C
-		if(V.vehicle_move_delay <= 0)
-			user << "<span class='warning'>The [C] can't be made any faster!</span>"
-			return ..()
-		V.vehicle_move_delay = 0
+		var/datum/riding/R = V.riding_datum
+		if(V.riding_datum)
+			if(R.vehicle_move_delay <= 0 )
+				to_chat(user, "<span class='warning'>The [C] can't be made any faster!</span>")
+				return ..()
+			R.vehicle_move_delay = 0
 
 	user <<"<span class='notice'>You slather the red gunk over the [C], making it faster.</span>"
 	C.remove_atom_colour(WASHABLE_COLOUR_PRIORITY)
@@ -370,10 +372,10 @@
 		qdel(src)
 		return
 	if(!istype(C))
-		user << "<span class='warning'>The potion can only be used on clothing!</span>"
+		to_chat(user, "<span class='warning'>The potion can only be used on clothing!</span>")
 		return
 	if(C.max_heat_protection_temperature == FIRE_IMMUNITY_SUIT_MAX_TEMP_PROTECT)
-		user << "<span class='warning'>The [C] is already fireproof!</span>"
+		to_chat(user, "<span class='warning'>The [C] is already fireproof!</span>")
 		return ..()
 	user <<"<span class='notice'>You slather the blue gunk over the [C], fireproofing it.</span>"
 	C.name = "fireproofed [C.name]"
@@ -394,11 +396,11 @@
 
 /obj/item/slimepotion/genderchange/attack(mob/living/L, mob/user)
 	if(!istype(L) || L.stat == DEAD)
-		user << "<span class='warning'>The potion can only be used on living things!</span>"
+		to_chat(user, "<span class='warning'>The potion can only be used on living things!</span>")
 		return
 
 	if(L.gender != MALE && L.gender != FEMALE)
-		user << "<span class='warning'>The potion can only be used on gendered things!</span>"
+		to_chat(user, "<span class='warning'>The potion can only be used on gendered things!</span>")
 		return
 
 	if(L.gender == MALE)
@@ -516,7 +518,7 @@
 		ghost = O
 		break
 	if(!ghost)
-		user << "<span class='warning'>The rune fizzles uselessly! There is no spirit nearby.</span>"
+		to_chat(user, "<span class='warning'>The rune fizzles uselessly! There is no spirit nearby.</span>")
 		return
 	var/mob/living/carbon/human/G = new /mob/living/carbon/human
 	G.set_species(/datum/species/golem/adamantine)
@@ -527,8 +529,8 @@
 	G.dna.species.auto_equip(G)
 	G.loc = src.loc
 	G.key = ghost.key
-	G << "You are an adamantine golem. You move slowly, but are highly resistant to heat and cold as well as blunt trauma. You are unable to wear clothes, but can still use most tools. \
-	Serve [user], and assist [user.p_them()] in completing their goals at any cost."
+	to_chat(G, "You are an adamantine golem. You move slowly, but are highly resistant to heat and cold as well as blunt trauma. You are unable to wear clothes, but can still use most tools. \
+	Serve [user], and assist [user.p_them()] in completing their goals at any cost.")
 	G.mind.store_memory("<b>Serve [user.real_name], your creator.</b>")
 
 	G.mind.enslave_mind_to_creator(user)
