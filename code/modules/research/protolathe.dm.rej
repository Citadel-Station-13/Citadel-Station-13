diff a/code/modules/research/protolathe.dm b/code/modules/research/protolathe.dm	(rejected hunks)
@@ -11,7 +11,7 @@ Note: Must be placed west/left of and R&D console to function.
 	name = "Protolathe"
 	desc = "Converts raw materials into useful objects."
 	icon_state = "protolathe"
-	flags = OPENCONTAINER
+	container_type = OPENCONTAINER
 
 	var/datum/material_container/materials
 	var/efficiency_coeff
@@ -34,12 +34,12 @@ Note: Must be placed west/left of and R&D console to function.
 /obj/machinery/r_n_d/protolathe/New()
 	..()
 	create_reagents(0)
-	materials = new(src, list(MAT_METAL, MAT_GLASS, MAT_SILVER, MAT_GOLD, MAT_DIAMOND, MAT_PLASMA, MAT_URANIUM, MAT_BANANIUM, MAT_TITANIUM))
+	materials = new(src, list(MAT_METAL, MAT_GLASS, MAT_SILVER, MAT_GOLD, MAT_DIAMOND, MAT_PLASMA, MAT_URANIUM, MAT_BANANIUM, MAT_TITANIUM, MAT_BLUESPACE))
 	var/obj/item/weapon/circuitboard/machine/B = new /obj/item/weapon/circuitboard/machine/protolathe(null)
 	B.apply_default_parts(src)
 
 /obj/item/weapon/circuitboard/machine/protolathe
-	name = "circuit board (Protolathe)"
+	name = "Protolathe (Machine Board)"
 	build_path = /obj/machinery/r_n_d/protolathe
 	origin_tech = "engineering=2;programming=2"
 	req_components = list(
@@ -67,7 +67,7 @@ Note: Must be placed west/left of and R&D console to function.
 	efficiency_coeff = min(max(0, T), 1)
 
 /obj/machinery/r_n_d/protolathe/proc/check_mat(datum/design/being_built, M)	// now returns how many times the item can be built with the material
-	var/list/all_materials = being_built.reagents + being_built.materials
+	var/list/all_materials = being_built.reagents_list + being_built.materials
 
 	var/A = materials.amount(M)
 	if(!A)
@@ -98,7 +98,7 @@ Note: Must be placed west/left of and R&D console to function.
 			return
 
 		if(!materials.has_space(sheet_material))
-			user << "<span class='warning'>The [src.name]'s material bin is full! Please remove material before adding more.</span>"
+			to_chat(user, "<span class='warning'>The [src.name]'s material bin is full! Please remove material before adding more.</span>")
 			return 1
 
 		var/obj/item/stack/sheet/stack = O
@@ -110,17 +110,40 @@ Note: Must be placed west/left of and R&D console to function.
 			return 1
 		else
 			var/stack_name = stack.name
-			busy = 1
+			busy = TRUE
 			use_power(max(1000, (MINERAL_MATERIAL_AMOUNT*amount_inserted/10)))
-			user << "<span class='notice'>You add [amount_inserted] sheets to the [src.name].</span>"
+			to_chat(user, "<span class='notice'>You add [amount_inserted] sheets to the [src.name].</span>")
 			add_overlay("protolathe_[stack_name]")
 			sleep(10)
-			overlays -= "protolathe_[stack_name]"
-			busy = 0
+			cut_overlay("protolathe_[stack_name]")
+			busy = FALSE
+		updateUsrDialog()
+
+	else if(istype(O, /obj/item/weapon/ore/bluespace_crystal)) //Bluespace crystals can be either a stack or an item
+		. = 1
+		if(!is_insertion_ready(user))
+			return
+		var/bs_material = materials.get_item_material_amount(O)
+		if(!bs_material)
+			return
+
+		if(!materials.has_space(bs_material))
+			to_chat(user, "<span class='warning'>The [src.name]'s material bin is full! Please remove material before adding more.</span>")
+			return 1
+
+		materials.insert_item(O)
+		busy = TRUE
+		use_power(MINERAL_MATERIAL_AMOUNT/10)
+		to_chat(user, "<span class='notice'>You add [O] to the [src.name].</span>")
+		qdel(O)
+		add_overlay("protolathe_bluespace")
+		sleep(10)
+		cut_overlay("protolathe_bluespace")
+		busy = FALSE
 		updateUsrDialog()
 
 	else if(user.a_intent != INTENT_HARM)
-		user << "<span class='warning'>You cannot insert this item into the [name]!</span>"
+		to_chat(user, "<span class='warning'>You cannot insert this item into the [name]!</span>")
 		return 1
 	else
 		return 0
