diff a/code/modules/surgery/organs/organ_internal.dm b/code/modules/surgery/organs/organ_internal.dm	(rejected hunks)
@@ -51,7 +51,7 @@
 /obj/item/organ/examine(mob/user)
 	..()
 	if(status == ORGAN_ROBOTIC && crit_fail)
-		user << "<span class='warning'>[src] seems to be broken!</span>"
+		to_chat(user, "<span class='warning'>[src] seems to be broken!</span>")
 
 
 /obj/item/organ/proc/prepare_eat()
@@ -104,6 +104,7 @@
 	zone = "chest"
 	slot = "heart"
 	origin_tech = "biotech=5"
+	// Heart attack code is in code/modules/mob/living/carbon/human/life.dm
 	var/beating = 1
 	var/icon_base = "heart"
 	attack_verb = list("beat", "thumped")
@@ -116,15 +117,8 @@
 
 /obj/item/organ/heart/Remove(mob/living/carbon/M, special = 0)
 	..()
-	if(ishuman(M))
-		var/mob/living/carbon/human/H = M
-		if(H.stat == DEAD || H.heart_attack)
-			Stop()
-			return
-		if(!special)
-			H.heart_attack = 1
-
-	addtimer(src, "stop_if_unowned", 120)
+	if(!special)
+		addtimer(CALLBACK(src, .proc/stop_if_unowned), 120)
 
 /obj/item/organ/heart/proc/stop_if_unowned()
 	if(!owner)
@@ -134,17 +128,10 @@
 	..()
 	if(!beating)
 		visible_message("<span class='notice'>[user] squeezes [src] to \
-			make it beat again!</span>")
+			make it beat again!</span>", "<span class='notice'>You squeeze \
+			[src] to make it beat again!</span>")
 		Restart()
-		addtimer(src, "stop_if_unowned", 80)
-
-/obj/item/organ/heart/Insert(mob/living/carbon/M, special = 0)
-	..()
-	if(ishuman(M) && beating)
-		var/mob/living/carbon/human/H = M
-		if(H.heart_attack)
-			H.heart_attack = 0
-			return
+		addtimer(CALLBACK(src, .proc/stop_if_unowned), 80)
 
 /obj/item/organ/heart/proc/Stop()
 	beating = 0
@@ -194,7 +181,7 @@
 			var/mob/living/carbon/human/H = owner
 			if(H.dna && !(NOBLOOD in H.dna.species.species_traits))
 				H.blood_volume = max(H.blood_volume - blood_loss, 0)
-				H << "<span class = 'userdanger'>You have to keep pumping your blood!</span>"
+				to_chat(H, "<span class = 'userdanger'>You have to keep pumping your blood!</span>")
 				if(add_colour)
 					H.add_client_colour(/datum/client_colour/cursed_heart_blood) //bloody screen so real
 					add_colour = FALSE
@@ -204,7 +191,7 @@
 /obj/item/organ/heart/cursed/Insert(mob/living/carbon/M, special = 0)
 	..()
 	if(owner)
-		owner << "<span class ='userdanger'>Your heart has been replaced with a cursed one, you have to pump this one manually otherwise you'll die!</span>"
+		to_chat(owner, "<span class ='userdanger'>Your heart has been replaced with a cursed one, you have to pump this one manually otherwise you'll die!</span>")
 
 /datum/action/item_action/organ_action/cursed_heart
 	name = "Pump your blood"
@@ -216,12 +203,12 @@
 		var/obj/item/organ/heart/cursed/cursed_heart = target
 
 		if(world.time < (cursed_heart.last_pump + (cursed_heart.pump_delay-10))) //no spam
-			owner << "<span class='userdanger'>Too soon!</span>"
+			to_chat(owner, "<span class='userdanger'>Too soon!</span>")
 			return
 
 		cursed_heart.last_pump = world.time
 		playsound(owner,'sound/effects/singlebeat.ogg',40,1)
-		owner << "<span class = 'notice'>Your heart beats.</span>"
+		to_chat(owner, "<span class = 'notice'>Your heart beats.</span>")
 
 		var/mob/living/carbon/human/H = owner
 		if(istype(H))
@@ -520,8 +507,9 @@
 	icon_state = "tonguenormal"
 	zone = "mouth"
 	slot = "tongue"
-	var/say_mod = null
 	attack_verb = list("licked", "slobbered", "slapped", "frenched", "tongued")
+	var/say_mod = null
+	var/taste_sensitivity = 15 // lower is more sensitive.
 
 /obj/item/organ/tongue/get_spans()
 	return list()
@@ -544,6 +532,7 @@
 	desc = "A thin and long muscle typically found in reptilian races, apparently moonlights as a nose."
 	icon_state = "tonguelizard"
 	say_mod = "hisses"
+	taste_sensitivity = 10 // combined nose + tongue, extra sensitive
 
 /obj/item/organ/tongue/lizard/TongueSpeech(var/message)
 	var/regex/lizard_hiss = new("s+", "g")
@@ -558,6 +547,7 @@
 	desc = "A freakish looking meat tube that apparently can take in liquids."
 	icon_state = "tonguefly"
 	say_mod = "buzzes"
+	taste_sensitivity = 25 // you eat vomit, this is a mercy
 
 /obj/item/organ/tongue/fly/TongueSpeech(var/message)
 	var/regex/fly_buzz = new("z+", "g")
@@ -572,6 +562,7 @@
 	desc = "A mysterious structure that allows for instant communication between users. Pretty impressive until you need to eat something."
 	icon_state = "tongueayylmao"
 	say_mod = "gibbers"
+	taste_sensitivity = 101 // ayys cannot taste anything.
 
 /obj/item/organ/tongue/abductor/TongueSpeech(var/message)
 	//Hacks
@@ -586,10 +577,10 @@
 			var/datum/species/abductor/Byy = H.dna.species
 			if(Ayy.team != Byy.team)
 				continue
-		H << rendered
+		to_chat(H, rendered)
 	for(var/mob/M in dead_mob_list)
 		var/link = FOLLOW_LINK(M, user)
-		M << "[link] [rendered]"
+		to_chat(M, "[link] [rendered]")
 	return ""
 
 /obj/item/organ/tongue/zombie
@@ -597,6 +588,7 @@
 	desc = "Between the decay and the fact that it's just lying there you doubt a tongue has ever seemed less sexy."
 	icon_state = "tonguezombie"
 	say_mod = "moans"
+	taste_sensitivity = 32
 
 /obj/item/organ/tongue/zombie/TongueSpeech(var/message)
 	var/list/message_list = splittext(message, " ")
@@ -618,7 +610,8 @@
 	name = "alien tongue"
 	desc = "According to leading xenobiologists the evolutionary benefit of having a second mouth in your mouth is \"that it looks badass\"."
 	icon_state = "tonguexeno"
-	say_mod = "hiss"
+	say_mod = "hisses"
+	taste_sensitivity = 10 // LIZARDS ARE ALIENS CONFIRMED
 
 /obj/item/organ/tongue/alien/TongueSpeech(var/message)
 	playsound(owner, "hiss", 25, 1, 1)
@@ -632,6 +625,7 @@
 	icon_state = "tonguebone"
 	say_mod = "rattles"
 	attack_verb = list("bitten", "chattered", "chomped", "enamelled", "boned")
+	taste_sensitivity = 101 // skeletons cannot taste anything
 
 	var/chattering = FALSE
 	var/phomeme_type = "sans"
@@ -661,6 +655,18 @@
 	name = "chattering bone \"tongue\""
 	chattering = TRUE
 
+/obj/item/organ/tongue/robot
+	name = "robotic voicebox"
+	desc = "A voice synthesizer that can interface with organic lifeforms."
+	status = ORGAN_ROBOTIC
+	icon_state = "tonguerobot"
+	say_mod = "states"
+	attack_verb = list("beeped", "booped")
+	taste_sensitivity = 25 // not as good as an organic tongue
+
+/obj/item/organ/tongue/robot/get_spans()
+	return ..() | SPAN_ROBOT
+
 /obj/item/organ/appendix
 	name = "appendix"
 	icon_state = "appendix"
@@ -691,5 +697,173 @@
 /obj/item/organ/appendix/prepare_eat()
 	var/obj/S = ..()
 	if(inflamed)
-		S.reagents.add_reagent("????", 5)
+		S.reagents.add_reagent("bad_food", 5)
 	return S
+
+/mob/living/proc/regenerate_organs()
+	return 0
+
+/mob/living/carbon/regenerate_organs()
+	CHECK_DNA_AND_SPECIES(src)
+
+	if(!(NOBREATH in dna.species.species_traits) && !getorganslot("lungs"))
+		var/obj/item/organ/lungs/L = new()
+		L.Insert(src)
+
+	if(!(NOBLOOD in dna.species.species_traits) && !getorganslot("heart"))
+		var/obj/item/organ/heart/H = new()
+		H.Insert(src)
+
+	if(!getorganslot("tongue"))
+		var/obj/item/organ/tongue/T
+
+		for(var/tongue_type in dna.species.mutant_organs)
+			if(ispath(tongue_type, /obj/item/organ/tongue))
+				T = new tongue_type()
+				T.Insert(src)
+
+		// if they have no mutant tongues, give them a regular one
+		if(!T)
+			T = new()
+			T.Insert(src)
+
+	if(!getorganslot("eye_sight"))
+		var/obj/item/organ/eyes/E
+
+		if(dna && dna.species && dna.species.mutanteyes)
+			E = new dna.species.mutanteyes()
+
+		else
+			E = new()
+		E.Insert(src)
+
+//Eyes
+
+/obj/item/organ/eyes
+	name = "eyes"
+	icon_state = "eyeballs"
+	desc = "I see you!"
+	zone = "eyes"
+	slot = "eye_sight"
+
+	var/sight_flags = 0
+	var/see_in_dark = 2
+	var/tint = 0
+	var/eye_color = "" //set to a hex code to override a mob's eye color
+	var/old_eye_color = "fff"
+	var/flash_protect = 0
+	var/see_invisible = SEE_INVISIBLE_LIVING
+
+/obj/item/organ/eyes/Insert(mob/living/carbon/M, special = 0)
+	..()
+	if(ishuman(owner))
+		var/mob/living/carbon/human/HMN = owner
+		old_eye_color = HMN.eye_color
+		if(eye_color)
+			HMN.eye_color = eye_color
+			HMN.regenerate_icons()
+		else
+			eye_color = HMN.eye_color
+	M.update_tint()
+	owner.update_sight()
+
+/obj/item/organ/eyes/Remove(mob/living/carbon/M, special = 0)
+	..()
+	if(ishuman(M) && eye_color)
+		var/mob/living/carbon/human/HMN = M
+		HMN.eye_color = old_eye_color
+		HMN.regenerate_icons()
+	M.update_tint()
+	M.update_sight()
+
+/obj/item/organ/eyes/night_vision
+	name = "shadow eyes"
+	desc = "A spooky set of eyes that can see in the dark."
+	see_in_dark = 8
+	see_invisible = SEE_INVISIBLE_MINIMUM
+	actions_types = list(/datum/action/item_action/organ_action/use)
+	var/night_vision = TRUE
+
+/obj/item/organ/eyes/night_vision/ui_action_click()
+	if(night_vision)
+		see_in_dark = 4
+		see_invisible = SEE_INVISIBLE_LIVING
+		night_vision = FALSE
+	else
+		see_in_dark = 8
+		see_invisible = SEE_INVISIBLE_MINIMUM
+		night_vision = TRUE
+	owner.update_sight()
+
+/obj/item/organ/eyes/night_vision/alien
+	name = "alien eyes"
+	desc = "It turned out they had them after all!"
+	see_in_dark = 8
+	see_invisible = SEE_INVISIBLE_MINIMUM
+	sight_flags = SEE_MOBS
+
+
+///Robotic
+
+/obj/item/organ/eyes/robotic
+	name = "robotic eyes"
+	icon_state = "cybernetic_eyeballs"
+	desc = "Your vision is augmented."
+	status = ORGAN_ROBOTIC
+
+/obj/item/organ/eyes/robotic/emp_act(severity)
+	if(!owner)
+		return
+	if(severity > 1)
+		if(prob(10 * severity))
+			return
+	to_chat(owner, "<span class='warning'>Static obfuscates your vision!</span>")
+	owner.flash_act(visual = 1)
+
+/obj/item/organ/eyes/robotic/xray
+	name = "X-ray eyes"
+	desc = "These cybernetic eyes will give you X-ray vision. Blinking is futile."
+	eye_color = "000"
+	see_in_dark = 8
+	sight_flags = SEE_MOBS | SEE_OBJS | SEE_TURFS
+
+/obj/item/organ/eyes/robotic/thermals
+	name = "Thermals eyes"
+	desc = "These cybernetic eye implants will give you Thermal vision. Vertical slit pupil included."
+	eye_color = "FC0"
+	origin_tech = "materials=5;programming=4;biotech=4;magnets=4;syndicate=1"
+	sight_flags = SEE_MOBS
+	see_invisible = SEE_INVISIBLE_MINIMUM
+	flash_protect = -1
+	see_in_dark = 8
+
+/obj/item/organ/eyes/robotic/flashlight
+	name = "flashlight eyes"
+	desc = "It's two flashlights rigged together with some wire. Why would you put these in someones head?"
+	eye_color ="fee5a3"
+	icon = 'icons/obj/lighting.dmi'
+	icon_state = "flashlight_eyes"
+	flash_protect = 2
+	tint = INFINITY
+
+/obj/item/organ/eyes/robotic/flashlight/emp_act(severity)
+	return
+
+/obj/item/organ/eyes/robotic/flashlight/Insert(var/mob/living/carbon/M, var/special = 0)
+	..()
+	set_light(15)
+
+
+/obj/item/organ/eyes/robotic/flashlight/Remove(var/mob/living/carbon/M, var/special = 0)
+	set_light(-15)
+	..()
+
+// Welding shield implant
+/obj/item/organ/eyes/robotic/shield
+	name = "shielded robotic eyes"
+	desc = "These reactive micro-shields will protect you from welders and flashes without obscuring your vision."
+	origin_tech = "materials=4;biotech=3;engineering=4;plasmatech=3"
+	flash_protect = 2
+
+/obj/item/organ/eyes/robotic/shield/emp_act(severity)
+	return
