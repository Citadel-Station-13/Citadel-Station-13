diff a/code/modules/surgery/limb_augmentation.dm b/code/modules/surgery/limb_augmentation.dm	(rejected hunks)
@@ -23,8 +23,11 @@
 
 /datum/surgery_step/add_limb/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
 	var/obj/item/bodypart/aug = tool
-	if(aug.status != BODYPART_ROBOTIC && aug.body_zone != target_zone)
-		user << "<span class='warning'>[tool] isn't the right type for [parse_zone(target_zone)].</span>"
+	if(aug.status != BODYPART_ROBOTIC)
+		to_chat(user, "<span class='warning'>that's not an augment silly!</span>")
+		return -1
+	if(aug.body_zone != target_zone)
+		to_chat(user, "<span class='warning'>[tool] isn't the right type for [parse_zone(target_zone)].</span>")
 		return -1
 	L = surgery.operated_bodypart
 	if(L)
@@ -53,70 +56,5 @@
 		target.updatehealth()
 		add_logs(user, target, "augmented", addition="by giving him new [parse_zone(target_zone)] INTENT: [uppertext(user.a_intent)]")
 	else
-		user << "<span class='warning'>[target] has no organic [parse_zone(target_zone)] there!</span>"
-	return 1
-
-
-
-
-
-
-
-
-
-/datum/surgery/chainsaw
-	name = "chainsaw augmentation"
-	steps = list(/datum/surgery_step/incise, /datum/surgery_step/retract_skin, /datum/surgery_step/saw, /datum/surgery_step/clamp_bleeders,
-	/datum/surgery_step/incise, /datum/surgery_step/chainsaw)
-	species = list(/mob/living/carbon/human)
-	possible_locs = list("r_arm", "l_arm")
-	requires_organic_bodypart = 0
-
-
-/datum/surgery_step/chainsaw
-	time = 64
-	name = "insert chainsaw"
-	implements = list(/obj/item/weapon/twohanded/required/chainsaw = 100)
-
-/datum/surgery_step/chainsaw/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
-	user.visible_message("[user] begins to install the chainsaw onto [target].", "<span class='notice'>You begin to install the chainsaw onto [target]...</span>")
-
-/datum/surgery_step/chainsaw/success(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
-	if(!target.get_empty_held_indexes())
-		user << "<span class='warning'>You can't fit the chainsaw in while [target]'s hands are full!</span>"
-		return 0
-	else
-		user.visible_message("[user] finishes installing the chainsaw!", "<span class='notice'>You install the chainsaw.</span>")
-		user.unEquip(tool)
-		qdel(tool)
-		var/obj/item/weapon/mounted_chainsaw/sawarms = new(target)
-		target.put_in_hands(sawarms)
-
-		return 1
-
-/datum/surgery/chainsaw_removal
-	name = "chainsaw removal"
-	steps = list(/datum/surgery_step/chainsaw_removal)
-	species = list(/mob/living/carbon/human)
-	possible_locs = list("r_arm", "l_arm")
-	requires_organic_bodypart = 0
-
-/datum/surgery/chainsaw_removal/can_start(mob/user, mob/living/carbon/target)
-	if(target.is_holding_item_of_type(/obj/item/weapon/mounted_chainsaw))
-		return 1//can continue surgery
-	else
-		return 0//surgery will never be available
-
-/datum/surgery_step/chainsaw_removal
-	time = 128
-	name = "saw off chainsaw"
-	implements = list(/obj/item/weapon/circular_saw = 100, /obj/item/weapon/melee/energy/sword/cyborg/saw = 100, /obj/item/weapon/melee/arm_blade = 75, /obj/item/weapon/mounted_chainsaw = 65, /obj/item/weapon/twohanded/fireaxe = 50, /obj/item/weapon/twohanded/required/chainsaw = 50, /obj/item/weapon/hatchet = 35, /obj/item/weapon/kitchen/knife/butcher = 25)
-
-/datum/surgery_step/chainsaw_removal/preop(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
-	user.visible_message("[user] begins sawing the chainsaw off of [target]'s arms.", "<span class='notice'>You begin removing [target]'s chainsaw...</span>")
-
-/datum/surgery_step/chainsaw_removal/success(mob/user, mob/living/carbon/target, target_zone, obj/item/tool, datum/surgery/surgery)
-	for(var/obj/item/weapon/mounted_chainsaw/V in target.held_items)
-		target.unEquip(V, 1)
-		user.visible_message("[user] carefully saws [target]'s arm free of the chainsaw.", "<span class='notice'>You remove the chainsaw.</span>")
-		return 1
+		to_chat(user, "<span class='warning'>[target] has no organic [parse_zone(target_zone)] there!</span>")
+	return 1
\ No newline at end of file
