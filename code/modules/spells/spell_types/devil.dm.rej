diff a/code/modules/spells/spell_types/devil.dm b/code/modules/spells/spell_types/devil.dm	(rejected hunks)
@@ -66,10 +66,10 @@
 						contract = new /obj/item/weapon/paper/contract/infernal/knowledge(C.loc, C.mind, user.mind)
 				C.put_in_hands(contract)
 		else
-			user << "<span class='notice'>[C] seems to not be sentient.  You cannot summon a contract for [C.p_them()].</span>"
+			to_chat(user, "<span class='notice'>[C] seems to not be sentient.  You cannot summon a contract for [C.p_them()].</span>")
 
 
-/obj/effect/proc_holder/spell/fireball/hellish
+/obj/effect/proc_holder/spell/aimed/fireball/hellish
 	name = "Hellfire"
 	desc = "This spell launches hellfire at the target."
 
@@ -80,7 +80,7 @@
 	invocation_type = "shout"
 	range = 2
 
-	fireball_type = /obj/item/projectile/magic/fireball/infernal
+	projectile_type = /obj/item/projectile/magic/aoe/fireball/infernal
 
 	action_background_icon_state = "bg_demon"
 
@@ -110,21 +110,21 @@
 						continuing = 1
 						break
 			if(continuing)
-				user << "<span class='warning'>You are now phasing in.</span>"
+				to_chat(user, "<span class='warning'>You are now phasing in.</span>")
 				if(do_mob(user,user,150))
 					user.infernalphasein()
 			else
-				user << "<span class='warning'>You can only re-appear near a potential signer."
+				to_chat(user, "<span class='warning'>You can only re-appear near a potential signer.")
 				revert_cast()
 				return ..()
 		else
 			user.notransform = 1
 			user.fakefire()
-			src << "<span class='warning'>You begin to phase back into sinful flames.</span>"
+			to_chat(src, "<span class='warning'>You begin to phase back into sinful flames.</span>")
 			if(do_mob(user,user,150))
 				user.infernalphaseout()
 			else
-				user << "<span class='warning'>You must remain still while exiting.</span>"
+				to_chat(user, "<span class='warning'>You must remain still while exiting.</span>")
 				user.ExtinguishMob()
 		start_recharge()
 		return
@@ -136,7 +136,7 @@
 	spawn_dust()
 	src.visible_message("<span class='warning'>[src] disappears in a flashfire!</span>")
 	playsound(get_turf(src), 'sound/magic/enter_blood.ogg', 100, 1, -1)
-	var/obj/effect/dummy/slaughter/holder = PoolOrNew(/obj/effect/dummy/slaughter,loc)
+	var/obj/effect/dummy/slaughter/holder = new /obj/effect/dummy/slaughter(loc)
 	src.ExtinguishMob()
 	if(buckled)
 		buckled.unbuckle_mob(src,force=1)
@@ -153,14 +153,14 @@
 
 /mob/living/proc/infernalphasein()
 	if(src.notransform)
-		src << "<span class='warning'>You're too busy to jaunt in.</span>"
+		to_chat(src, "<span class='warning'>You're too busy to jaunt in.</span>")
 		return 0
 	fakefire()
 	src.loc = get_turf(src)
 	src.client.eye = src
-	src.visible_message("<span class='warning'><B>[src] appears in a firey blaze!</B>")
+	src.visible_message("<span class='warning'><B>[src] appears in a fiery blaze!</B>")
 	playsound(get_turf(src), 'sound/magic/exit_blood.ogg', 100, 1, -1)
-	addtimer(src, "fakefireextinguish", 15, TIMER_UNIQUE)
+	addtimer(CALLBACK(src, .proc/fakefireextinguish), 15, TIMER_UNIQUE)
 
 /obj/effect/proc_holder/spell/targeted/sintouch
 	name = "Sin Touch"
@@ -232,9 +232,12 @@
 			var/turf/T = dancefloor_turfs[i]
 			T.ChangeTurf(dancefloor_turfs_types[i])
 	else
+		var/list/funky_turfs = RANGE_TURFS(1, user)
+		for(var/turf/closed/solid in funky_turfs)
+			user << "<span class='warning'>You're too close to a wall.</span>"
+			return
 		dancefloor_exists = TRUE
 		var/i = 1
-		var/list/funky_turfs = RANGE_TURFS(1, user)
 		dancefloor_turfs.len = funky_turfs.len
 		dancefloor_turfs_types.len = funky_turfs.len
 		for(var/t in funky_turfs)
