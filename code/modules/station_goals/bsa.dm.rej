diff a/code/modules/station_goals/bsa.dm b/code/modules/station_goals/bsa.dm	(rejected hunks)
@@ -9,7 +9,7 @@
 	return {"Our military presence is inadequate in your sector.
 	 We need you to construct BSA-[rand(1,99)] Artillery position aboard your station.
 
-	 Base parts should be availible for shipping by your cargo shuttle.
+	 Base parts are available for shipping via cargo.
 	 -Nanotrasen Naval Command"}
 
 /datum/station_goal/bluespace_cannon/on_report()
@@ -39,7 +39,10 @@
 	if(istype(W, /obj/item/device/multitool))
 		var/obj/item/device/multitool/M = W
 		M.buffer = src
-		user << "<span class='notice'>You store linkage information in [W]'s buffer.</span>"
+		to_chat(user, "<span class='notice'>You store linkage information in [W]'s buffer.</span>")
+	else if(istype(W, /obj/item/weapon/wrench))
+		default_unfasten_wrench(user, W, 10)
+		return TRUE
 	else
 		return ..()
 
@@ -52,7 +55,10 @@
 	if(istype(W, /obj/item/device/multitool))
 		var/obj/item/device/multitool/M = W
 		M.buffer = src
-		user << "<span class='notice'>You store linkage information in [W]'s buffer.</span>"
+		to_chat(user, "<span class='notice'>You store linkage information in [W]'s buffer.</span>")
+	else if(istype(W, /obj/item/weapon/wrench))
+		default_unfasten_wrench(user, W, 10)
+		return TRUE
 	else
 		return ..()
 
@@ -70,17 +76,22 @@
 			if(istype(M.buffer,/obj/machinery/bsa/back))
 				back = M.buffer
 				M.buffer = null
-				user << "<span class='notice'>You link [src] with [back].</span>"
+				to_chat(user, "<span class='notice'>You link [src] with [back].</span>")
 			else if(istype(M.buffer,/obj/machinery/bsa/front))
 				front = M.buffer
 				M.buffer = null
-				user << "<span class='notice'>You link [src] with [front].</span>"
+				to_chat(user, "<span class='notice'>You link [src] with [front].</span>")
+	else if(istype(W, /obj/item/weapon/wrench))
+		default_unfasten_wrench(user, W, 10)
+		return TRUE
 	else
 		return ..()
 
 /obj/machinery/bsa/middle/proc/check_completion()
 	if(!front || !back)
 		return "No linked parts detected!"
+	if(!front.anchored || !back.anchored || !anchored)
+		return "Linked parts unwrenched!"
 	if(front.y != y || back.y != y || !(front.x > x && back.x < x || front.x < x && back.x > x) || front.z != z || back.z != z)
 		return "Parts misaligned!"
 	if(!has_space())
@@ -181,7 +192,7 @@
 /obj/machinery/bsa/full/proc/reload()
 	ready = FALSE
 	use_power(power_used_per_shot)
-	addtimer(src,"ready_cannon",600)
+	addtimer(CALLBACK(src,"ready_cannon"),600)
 
 /obj/machinery/bsa/full/proc/ready_cannon()
 	ready = TRUE
@@ -197,7 +208,7 @@
 	return
 
 /obj/item/weapon/circuitboard/machine/bsa/back
-	name = "circuit board (Bluespace Artillery Generator)"
+	name = "Bluespace Artillery Generator (Machine Board)"
 	build_path = /obj/machinery/bsa/back
 	origin_tech = "engineering=2;combat=2;bluespace=2" //No freebies!
 	req_components = list(
@@ -205,7 +216,7 @@
 							/obj/item/stack/cable_coil = 2)
 
 /obj/item/weapon/circuitboard/machine/bsa/middle
-	name = "circuit board (Bluespace Artillery Fusor)"
+	name = "Bluespace Artillery Fusor (Machine Board)"
 	build_path = /obj/machinery/bsa/middle
 	origin_tech = "engineering=2;combat=2;bluespace=2"
 	req_components = list(
@@ -213,15 +224,15 @@
 							/obj/item/stack/cable_coil = 2)
 
 /obj/item/weapon/circuitboard/machine/bsa/front
-	name = "circuit board (Bluespace Artillery Bore)"
+	name = "Bluespace Artillery Bore (Machine Board)"
 	build_path = /obj/machinery/bsa/front
 	origin_tech = "engineering=2;combat=2;bluespace=2"
 	req_components = list(
 							/obj/item/weapon/stock_parts/manipulator/femto = 5,
 							/obj/item/stack/cable_coil = 2)
 
-/obj/item/weapon/circuitboard/machine/computer/bsa_control
-	name = "circuit board (Bluespace Artillery Controls)"
+/obj/item/weapon/circuitboard/computer/bsa_control
+	name = "Bluespace Artillery Controls (Computer Board)"
 	build_path = /obj/machinery/computer/bsa_control
 	origin_tech = "engineering=2;combat=2;bluespace=2"
 
@@ -231,7 +242,7 @@
 	var/notice
 	var/target
 	use_power = 0
-	circuit = /obj/item/weapon/circuitboard/machine/computer/bsa_control
+	circuit = /obj/item/weapon/circuitboard/computer/bsa_control
 	icon = 'icons/obj/machines/particle_accelerator.dmi'
 	icon_state = "control_boxp"
 	var/area_aim = FALSE //should also show areas for targeting
@@ -245,7 +256,7 @@
 
 /obj/machinery/computer/bsa_control/ui_data()
 	var/list/data = list()
-	data["ready"] = cannon.ready
+	data["ready"] = cannon ? cannon.ready : FALSE
 	data["connected"] = cannon
 	data["notice"] = notice
 	if(target)
@@ -314,7 +325,7 @@
 		return null
 	//Totally nanite construction system not an immersion breaking spawning
 	var/datum/effect_system/smoke_spread/s = new
-	s.set_up(4, 1, get_turf(centerpiece), 0)
+	s.set_up(4,get_turf(centerpiece))
 	s.start()
 	var/obj/machinery/bsa/full/cannon = new(get_turf(centerpiece),cannon_direction=centerpiece.get_cannon_direction())
 	qdel(centerpiece.front)
