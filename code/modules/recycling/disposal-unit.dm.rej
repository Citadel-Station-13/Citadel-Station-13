diff a/code/modules/recycling/disposal-unit.dm b/code/modules/recycling/disposal-unit.dm	(rejected hunks)
@@ -12,8 +12,10 @@
 	obj_integrity = 200
 	max_integrity = 200
 	resistance_flags = FIRE_PROOF
+	interact_open = TRUE
 	var/datum/gas_mixture/air_contents	// internal reservoir
-	var/mode = PRESSURE_ON
+	var/full_pressure = FALSE
+	var/pressure_charging = TRUE
 	var/flush = 0	// true if flush handle is pulled
 	var/obj/structure/disposalpipe/trunk/trunk = null // the attached pipe trunk
 	var/flushing = 0	// true if flushing in progress
@@ -43,11 +45,11 @@
 /obj/machinery/disposal/proc/trunk_check()
 	trunk = locate() in loc
 	if(!trunk)
-		mode = PRESSURE_OFF
-		flush = 0
+		pressure_charging = FALSE
+		flush = FALSE
 	else
-		if(initial(mode))
-			mode = PRESSURE_ON
+		if(initial(pressure_charging))
+			pressure_charging = TRUE
 		flush = initial(flush)
 		trunk.linked = src // link the pipe trunk to self
 
@@ -76,21 +78,18 @@
 
 /obj/machinery/disposal/attackby(obj/item/I, mob/user, params)
 	add_fingerprint(user)
-	if(mode != PRESSURE_ON && mode != PRESSURE_MAXED && !flush)
+	if(!pressure_charging && !full_pressure && !flush)
 		if(istype(I, /obj/item/weapon/screwdriver))
-			if(mode == PRESSURE_OFF)
-				mode = SCREWS_OUT
-			else
-				mode = PRESSURE_OFF
-			playsound(src.loc, I.usesound, 50, 1)
-			to_chat(user, "<span class='notice'>You [mode == SCREWS_OUT ? "remove":"attach"] the screws around the power connection.</span>")
+			panel_open = !panel_open
+			playsound(get_turf(src), I.usesound, 50, 1)
+			to_chat(user, "<span class='notice'>You [panel_open ? "remove":"attach"] the screws around the power connection.</span>")
 			return
-		else if(istype(I,/obj/item/weapon/weldingtool) && mode == SCREWS_OUT)
+		else if(istype(I,/obj/item/weapon/weldingtool) && panel_open)
 			var/obj/item/weapon/weldingtool/W = I
 			if(W.remove_fuel(0,user))
 				playsound(src.loc, 'sound/items/Welder2.ogg', 100, 1)
 				to_chat(user, "<span class='notice'>You start slicing the floorweld off \the [src]...</span>")
-				if(do_after(user,20*I.toolspeed, target = src) && mode == SCREWS_OUT)
+				if(do_after(user,20*I.toolspeed, target = src) && panel_open)
 					if(!W.isOn())
 						return
 					to_chat(user, "<span class='notice'>You slice the floorweld off \the [src].</span>")
@@ -190,7 +189,7 @@
 	return
 
 /obj/machinery/disposal/proc/flush()
-	flushing = 1
+	flushing = TRUE
 	flushAnimation()
 	sleep(10)
 	if(last_sound < world.time + 1)
@@ -204,8 +203,8 @@
 	H.init(src)
 	air_contents = new()
 	H.start(src)
-	flushing = 0
-	flush = 0
+	flushing = FALSE
+	flush = FALSE
 
 /obj/machinery/disposal/proc/newHolderDestination(obj/structure/disposalholder/H)
 	for(var/obj/item/smallDelivery/O in src)
@@ -300,7 +299,9 @@
 /obj/machinery/disposal/bin/ui_data(mob/user)
 	var/list/data = list()
 	data["flush"] = flush
-	data["mode"] = mode
+	data["full_pressure"] = full_pressure
+	data["pressure_charging"] = pressure_charging
+	data["panel_open"] = panel_open
 	var/per = Clamp(100* air_contents.return_pressure() / (SEND_PRESSURE), 0, 100)
 	data["per"] = round(per, 1)
 	data["isai"] = isAI(user)
@@ -311,22 +312,22 @@
 		return
 	switch(action)
 		if("handle-0")
-			flush = 0
+			flush = FALSE
 			update_icon()
 			. = TRUE
 		if("handle-1")
-			if(mode != SCREWS_OUT)
-				flush = 1
+			if(!panel_open)
+				flush = TRUE
 				update_icon()
 			. = TRUE
 		if("pump-0")
-			if(mode == PRESSURE_ON)
-				mode = PRESSURE_OFF
+			if(pressure_charging)
+				pressure_charging = FALSE
 				update_icon()
 			. = TRUE
 		if("pump-1")
-			if(mode == PRESSURE_OFF)
-				mode = PRESSURE_ON
+			if(!pressure_charging)
+				pressure_charging = TRUE
 				update_icon()
 			. = TRUE
 		if("eject")
@@ -350,15 +351,15 @@
 
 /obj/machinery/disposal/bin/flush()
 	..()
-	if(mode == PRESSURE_MAXED)
-		mode = PRESSURE_ON
+	full_pressure = FALSE
+	pressure_charging = TRUE
 	update_icon()
 
 /obj/machinery/disposal/bin/update_icon()
 	cut_overlays()
 	if(stat & BROKEN)
-		mode = PRESSURE_OFF
-		flush = 0
+		pressure_charging = FALSE
+		flush = FALSE
 		return
 
 	//flush handle
@@ -366,7 +367,7 @@
 		add_overlay(image('icons/obj/atmospherics/pipes/disposal.dmi', "dispover-handle"))
 
 	//only handle is shown if no power
-	if(stat & NOPOWER || mode == SCREWS_OUT)
+	if(stat & NOPOWER || panel_open)
 		return
 
 	//check for items in disposal - occupied light
@@ -374,9 +375,9 @@
 		add_overlay(image('icons/obj/atmospherics/pipes/disposal.dmi', "dispover-full"))
 
 	//charging and ready light
-	if(mode == PRESSURE_ON)
+	if(pressure_charging)
 		add_overlay(image('icons/obj/atmospherics/pipes/disposal.dmi', "dispover-charge"))
-	else if(mode == PRESSURE_MAXED)
+	else if(full_pressure)
 		add_overlay(image('icons/obj/atmospherics/pipes/disposal.dmi', "dispover-ready"))
 
 //timed process
@@ -388,7 +389,7 @@
 	flush_count++
 	if(flush_count >= flush_every_ticks)
 		if(contents.len)
-			if(mode == PRESSURE_MAXED)
+			if(full_pressure)
 				spawn(0)
 					feedback_inc("disposal_auto_flush",1)
 					flush()
@@ -404,7 +405,7 @@
 
 	use_power(100) // base power usage
 
-	if(mode != PRESSURE_ON) // if off or ready, no need to charge
+	if(!pressure_charging) // if off or ready, no need to charge
 		return
 
 	// otherwise charge
@@ -426,7 +427,8 @@
 
 	//if full enough, switch to ready mode
 	if(air_contents.return_pressure() >= SEND_PRESSURE)
-		mode = PRESSURE_MAXED
+		full_pressure = TRUE
+		pressure_charging = FALSE
 		update_icon()
 	return
 
@@ -441,7 +443,7 @@
 	desc = "A chute for big and small packages alike!"
 	density = 1
 	icon_state = "intake"
-	mode = PRESSURE_OFF // the chute doesn't need charging and always works
+	pressure_charging = FALSE // the chute doesn't need charging and always works
 
 /obj/machinery/disposal/deliveryChute/New(loc,var/obj/structure/disposalconstruct/make_from)
 	..()
