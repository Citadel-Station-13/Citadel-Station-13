diff a/code/modules/atmospherics/machinery/components/unary_devices/cryo.dm b/code/modules/atmospherics/machinery/components/unary_devices/cryo.dm	(rejected hunks)
@@ -22,14 +22,24 @@
 	var/obj/item/weapon/reagent_containers/glass/beaker = null
 	var/reagent_transfer = 0
 
+	var/obj/item/device/radio/radio
+	var/radio_key = /obj/item/device/encryptionkey/headset_med
+	var/radio_channel = "Medical"
+
 /obj/machinery/atmospherics/components/unary/cryo_cell/New()
 	..()
 	initialize_directions = dir
 	var/obj/item/weapon/circuitboard/machine/B = new /obj/item/weapon/circuitboard/machine/cryo_tube(null)
 	B.apply_default_parts(src)
 
+	radio = new(src)
+	radio.keyslot = new radio_key
+	radio.subspace_transmission = 1
+	radio.canhear_range = 0
+	radio.recalculateChannels()
+
 /obj/item/weapon/circuitboard/machine/cryo_tube
-	name = "circuit board (Cryotube)"
+	name = "Cryotube (Machine Board)"
 	build_path = /obj/machinery/atmospherics/components/unary/cryo_cell
 	origin_tech = "programming=4;biotech=3;engineering=4;plasmatech=3"
 	req_components = list(
@@ -53,6 +63,8 @@
 	conduction_coefficient = initial(conduction_coefficient) * C
 
 /obj/machinery/atmospherics/components/unary/cryo_cell/Destroy()
+	qdel(radio)
+	radio = null
 	if(beaker)
 		qdel(beaker)
 		beaker = null
@@ -89,6 +101,7 @@
 
 /obj/machinery/atmospherics/components/unary/cryo_cell/process()
 	..()
+
 	if(!on)
 		return
 	if(!is_operational())
@@ -96,16 +109,22 @@
 		update_icon()
 		return
 	var/datum/gas_mixture/air1 = AIR1
+	var/turf/T = get_turf(src)
 	if(occupant)
 		if(occupant.health >= 100) // Don't bother with fully healed people.
 			on = FALSE
 			update_icon()
-			playsound(src.loc, 'sound/machines/ding.ogg', volume, 1) // Bug the doctors.
+			playsound(T, 'sound/machines/cryo_warning.ogg', volume) // Bug the doctors.
+			radio.talk_into(src, "Patient fully restored", radio_channel)
 			if(autoeject) // Eject if configured.
+				radio.talk_into(src, "Auto ejecting patient now", radio_channel)
 				open_machine()
 			return
 		else if(occupant.stat == DEAD) // We don't bother with dead people.
 			return
+			if(autoeject) // Eject if configured.
+				open_machine()
+			return
 		if(air1.gases.len)
 			if(occupant.bodytemperature < T0C) // Sleepytime. Why? More cryo magic.
 				occupant.Sleeping((occupant.bodytemperature / sleep_factor) * 100)
@@ -153,12 +172,16 @@
 /obj/machinery/atmospherics/components/unary/cryo_cell/relaymove(mob/user)
 	container_resist(user)
 
-/obj/machinery/atmospherics/components/unary/cryo_cell/open_machine()
+/obj/machinery/atmospherics/components/unary/cryo_cell/open_machine(drop = 0)
 	if(!state_open && !panel_open)
 		on = FALSE
 		..()
-		if(beaker)
-			beaker.forceMove(src)
+	for(var/mob/M in contents) //only drop mobs
+		M.forceMove(get_turf(src))
+		if(isliving(M))
+			var/mob/living/L = M
+			L.update_canmove()
+	occupant = null
 
 /obj/machinery/atmospherics/components/unary/cryo_cell/close_machine(mob/living/carbon/user)
 	if((isnull(user) || istype(user)) && state_open && !panel_open)
@@ -166,7 +189,7 @@
 		return occupant
 
 /obj/machinery/atmospherics/components/unary/cryo_cell/container_resist(mob/living/user)
-	user << "<span class='notice'>You struggle inside the cryotube, kicking the release with your foot... (This will take around 30 seconds.)</span>"
+	to_chat(user, "<span class='notice'>You struggle inside the cryotube, kicking the release with your foot... (This will take around 30 seconds.)</span>")
 	audible_message("<span class='notice'>You hear a thump from [src].</span>")
 	if(do_after(user, 300))
 		if(occupant == user) // Check they're still here.
@@ -176,11 +199,11 @@
 	..()
 	if(occupant)
 		if(on)
-			user << "Someone's inside [src]!"
+			to_chat(user, "Someone's inside [src]!")
 		else
-			user << "You can barely make out a form floating in [src]."
+			to_chat(user, "You can barely make out a form floating in [src].")
 	else
-		user << "[src] seems empty."
+		to_chat(user, "[src] seems empty.")
 
 /obj/machinery/atmospherics/components/unary/cryo_cell/MouseDrop_T(mob/target, mob/user)
 	if(user.stat || user.lying || !Adjacent(user) || !user.Adjacent(target) || !iscarbon(target) || !user.IsAdvancedToolUser())
@@ -190,15 +213,17 @@
 /obj/machinery/atmospherics/components/unary/cryo_cell/attackby(obj/item/I, mob/user, params)
 	if(istype(I, /obj/item/weapon/reagent_containers/glass))
 		. = 1 //no afterattack
-		if(!user.drop_item())
-			return
 		if(beaker)
-			user << "<span class='warning'>A beaker is already loaded into [src]!</span>"
+			to_chat(user, "<span class='warning'>A beaker is already loaded into [src]!</span>")
+			return
+		if(!user.drop_item())
 			return
 		beaker = I
 		I.loc = src
 		user.visible_message("[user] places [I] in [src].", \
 							"<span class='notice'>You place [I] in [src].</span>")
+		var/reagentlist = pretty_string_from_reagent_list(I.reagents.reagent_list)
+		log_game("[key_name(user)] added an [I] to cyro containing [reagentlist]")
 		return
 	if(!on && !occupant && !state_open)
 		if(default_deconstruction_screwdriver(user, "cell-o", "cell-off", I))
