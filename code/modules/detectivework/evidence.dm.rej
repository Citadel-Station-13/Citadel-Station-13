diff a/code/modules/detectivework/evidence.dm b/code/modules/detectivework/evidence.dm	(rejected hunks)
@@ -22,15 +22,15 @@
 		return
 
 	if(istype(I, /obj/item/weapon/evidencebag))
-		user << "<span class='notice'>You find putting an evidence bag in another evidence bag to be slightly absurd.</span>"
+		to_chat(user, "<span class='notice'>You find putting an evidence bag in another evidence bag to be slightly absurd.</span>")
 		return 1 //now this is podracing
 
 	if(I.w_class > WEIGHT_CLASS_NORMAL)
-		user << "<span class='notice'>[I] won't fit in [src].</span>"
+		to_chat(user, "<span class='notice'>[I] won't fit in [src].</span>")
 		return
 
 	if(contents.len)
-		user << "<span class='notice'>[src] already has something inside it.</span>"
+		to_chat(user, "<span class='notice'>[src] already has something inside it.</span>")
 		return
 
 	if(!isturf(I.loc)) //If it isn't on the floor. Do some checks to see if it's in our hands or a box. Otherwise give up.
@@ -38,7 +38,7 @@
 			var/obj/item/weapon/storage/U = I.loc
 			U.remove_from_storage(I, src)
 		if(user.is_holding(I))
-			user.unEquip(I)
+			user.dropItemToGround(I)
 		else
 			return
 
@@ -52,6 +52,7 @@
 	I.pixel_x = 0		//then remove it so it'll stay within the evidence bag
 	I.pixel_y = 0
 	var/image/img = image("icon"=I, "layer"=FLOAT_LAYER)	//take a snapshot. (necessary to stop the underlays appearing under our inventory-HUD slots ~Carn
+	img.plane = FLOAT_PLANE
 	I.pixel_x = xx		//and then return it
 	I.pixel_y = yy
 	add_overlay(img)
@@ -74,7 +75,7 @@
 		desc = "An empty evidence bag."
 
 	else
-		user << "[src] is empty."
+		to_chat(user, "[src] is empty.")
 		icon_state = "evidenceobj"
 	return
 
