diff a/code/modules/detectivework/footprints_and_rag.dm b/code/modules/detectivework/footprints_and_rag.dm	(rejected hunks)
@@ -12,7 +12,8 @@
 	w_class = WEIGHT_CLASS_TINY
 	icon = 'icons/obj/toy.dmi'
 	icon_state = "rag"
-	flags = OPENCONTAINER | NOBLUDGEON
+	flags = NOBLUDGEON
+	container_type = OPENCONTAINER
 	amount_per_transfer_from_this = 5
 	possible_transfer_amounts = list()
 	volume = 5
@@ -27,16 +28,18 @@
 		return
 	if(iscarbon(A) && A.reagents && reagents.total_volume)
 		var/mob/living/carbon/C = A
+		var/reagentlist = pretty_string_from_reagent_list(reagents)
 		if(user.a_intent == INTENT_HARM && !C.is_mouth_covered())
 			reagents.reaction(C, INGEST)
 			reagents.trans_to(C, reagents.total_volume)
 			C.visible_message("<span class='danger'>[user] has smothered \the [C] with \the [src]!</span>", "<span class='userdanger'>[user] has smothered you with \the [src]!</span>", "<span class='italics'>You hear some struggling and muffled cries of surprise.</span>")
-			var/reagentlist = pretty_string_from_reagent_list(A.reagents)
 			log_game("[key_name(user)] smothered [key_name(A)] with a damp rag containing [reagentlist]")
 			log_attack("[key_name(user)] smothered [key_name(A)] with a damp rag containing [reagentlist]")
 		else
 			reagents.reaction(C, TOUCH)
 			reagents.clear_reagents()
+			log_game("[key_name(user)] touched [key_name(A)] with a damp rag containing [reagentlist]")
+			log_attack("[key_name(user)] touched [key_name(A)] with a damp rag containing [reagentlist]")
 			C.visible_message("<span class='notice'>[user] has touched \the [C] with \the [src].</span>")
 
 	else if(istype(A) && src in user)
