diff a/code/modules/modular_computers/computers/item/computer.dm b/code/modules/modular_computers/computers/item/computer.dm	(rejected hunks)
@@ -62,8 +62,10 @@
 	for(var/H in all_components)
 		var/obj/item/weapon/computer_hardware/CH = all_components[H]
 		if(CH.holder == src)
+			CH.on_remove(src)
 			CH.holder = null
 			qdel(CH)
+	physical = null
 	return ..()
 
 
@@ -73,6 +75,8 @@
 			verbs += /obj/item/device/modular_computer/proc/eject_id
 		if(MC_SDD)
 			verbs += /obj/item/device/modular_computer/proc/eject_disk
+		if(MC_AI)
+			verbs += /obj/item/device/modular_computer/proc/eject_card
 
 /obj/item/device/modular_computer/proc/remove_verb(path)
 	switch(path)
@@ -80,6 +84,8 @@
 			verbs -= /obj/item/device/modular_computer/proc/eject_id
 		if(MC_SDD)
 			verbs -= /obj/item/device/modular_computer/proc/eject_disk
+		if(MC_AI)
+			verbs -= /obj/item/device/modular_computer/proc/eject_card
 
 // Eject ID card from computer, if it has ID slot with card inside.
 /obj/item/device/modular_computer/proc/eject_id()
@@ -91,13 +97,24 @@
 		return
 	var/obj/item/weapon/computer_hardware/card_slot/card_slot = all_components[MC_CARD]
 	if(usr.canUseTopic(src))
-		card_slot.try_eject(, usr)
+		card_slot.try_eject(null, usr)
+
+// Eject ID card from computer, if it has ID slot with card inside.
+/obj/item/device/modular_computer/proc/eject_card()
+	set name = "Eject Intellicard"
+	set category = "Object"
+
+	if(issilicon(usr))
+		return
+	var/obj/item/weapon/computer_hardware/ai_slot/ai_slot = all_components[MC_AI]
+	if(usr.canUseTopic(src))
+		ai_slot.try_eject(null, usr,1)
+
 
 // Eject ID card from computer, if it has ID slot with card inside.
 /obj/item/device/modular_computer/proc/eject_disk()
 	set name = "Eject Data Disk"
 	set category = "Object"
-	set src in view(1)
 
 	if(issilicon(usr))
 		return
@@ -114,12 +131,16 @@
 
 	if(user.canUseTopic(src))
 		var/obj/item/weapon/computer_hardware/card_slot/card_slot = all_components[MC_CARD]
+		var/obj/item/weapon/computer_hardware/ai_slot/ai_slot = all_components[MC_AI]
 		var/obj/item/weapon/computer_hardware/hard_drive/portable/portable_drive = all_components[MC_SDD]
 		if(portable_drive)
 			if(uninstall_component(portable_drive, user))
 				portable_drive.verb_pickup()
-		else if(card_slot)
-			card_slot.try_eject(, user)
+		else
+			if(card_slot && card_slot.try_eject(null, user))
+				return
+			if(ai_slot)
+				ai_slot.try_eject(null, user)
 
 
 // Gets IDs/access levels from card slot. Would be useful when/if PDAs would become modular PCs.
