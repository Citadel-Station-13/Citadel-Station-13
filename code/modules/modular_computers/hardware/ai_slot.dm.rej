diff a/code/modules/modular_computers/hardware/ai_slot.dm b/code/modules/modular_computers/hardware/ai_slot.dm	(rejected hunks)
@@ -14,7 +14,7 @@
 /obj/item/weapon/computer_hardware/ai_slot/examine(mob/user)
 	..()
 	if(stored_card)
-		user << "There appears to be an intelliCard loaded. There appears to be a pinhole protecting a manual eject button. A screwdriver could probably press it"
+		to_chat(user, "There appears to be an intelliCard loaded. There appears to be a pinhole protecting a manual eject button. A screwdriver could probably press it")
 
 /obj/item/weapon/computer_hardware/ai_slot/on_install(obj/item/device/modular_computer/M, mob/living/user = null)
 	M.add_verb(device_type)
@@ -30,27 +30,24 @@
 		return FALSE
 
 	if(stored_card)
-		user << "<span class='warning'>You try to insert \the [I] into \the [src], but the slot is occupied.</span>"
+		to_chat(user, "<span class='warning'>You try to insert \the [I] into \the [src], but the slot is occupied.</span>")
 		return FALSE
-	if(user && !user.unEquip(I))
+	if(user && !user.transferItemToLoc(I, src))
 		return FALSE
 
-
 	stored_card = I
-
-	I.forceMove(src)
-	user << "<span class='notice'>You insert \the [I] into \the [src].</span>"
+	to_chat(user, "<span class='notice'>You insert \the [I] into \the [src].</span>")
 
 	return TRUE
 
 
 /obj/item/weapon/computer_hardware/ai_slot/try_eject(slot=0,mob/living/user = null,forced = 0)
 	if(!stored_card)
-		user << "<span class='warning'>There is no card in \the [src].</span>"
+		to_chat(user, "<span class='warning'>There is no card in \the [src].</span>")
 		return FALSE
 
 	if(locked && !forced)
-		user << "<span class='warning'>Safeties prevent you from removing the card until reconstruction is complete...</span>"
+		to_chat(user, "<span class='warning'>Safeties prevent you from removing the card until reconstruction is complete...</span>")
 		return FALSE
 
 	if(stored_card)
@@ -59,7 +56,7 @@
 		stored_card.verb_pickup()
 		stored_card = null
 
-		user << "<span class='notice'>You remove the card from \the [src].</span>"
+		to_chat(user, "<span class='notice'>You remove the card from \the [src].</span>")
 		return TRUE
 	return FALSE
 
@@ -67,6 +64,6 @@
 	if(..())
 		return
 	if(istype(I, /obj/item/weapon/screwdriver))
-		user << "<span class='notice'>You press down on the manual eject button with \the [I].</span>"
+		to_chat(user, "<span class='notice'>You press down on the manual eject button with \the [I].</span>")
 		try_eject(,user,1)
 		return
\ No newline at end of file
