diff a/code/modules/modular_computers/hardware/card_slot.dm b/code/modules/modular_computers/hardware/card_slot.dm	(rejected hunks)
@@ -44,36 +44,42 @@
 		return FALSE
 
 	if(stored_card && stored_card2)
-		user << "<span class='warning'>You try to insert \the [I] into \the [src], but its slots are occupied.</span>"
-		return FALSE
-	if(user && !user.unEquip(I))
+		to_chat(user, "<span class='warning'>You try to insert \the [I] into \the [src], but its slots are occupied.</span>")
 		return FALSE
+	if(user)
+		if(!user.transferItemToLoc(I, src))
+			return FALSE
+	else
+		I.forceMove(src)
 
 	if(!stored_card)
 		stored_card = I
 	else
 		stored_card2 = I
-	I.forceMove(src)
-	user << "<span class='notice'>You insert \the [I] into \the [src].</span>"
+	to_chat(user, "<span class='notice'>You insert \the [I] into \the [src].</span>")
 
 	return TRUE
 
 
 /obj/item/weapon/computer_hardware/card_slot/try_eject(slot=0, mob/living/user = null, forced = 0)
 	if(!stored_card && !stored_card2)
-		user << "<span class='warning'>There are no cards in \the [src].</span>"
+		to_chat(user, "<span class='warning'>There are no cards in \the [src].</span>")
 		return FALSE
 
 	var/ejected = 0
 	if(stored_card && (!slot || slot == 1))
-		stored_card.forceMove(get_turf(src))
-		stored_card.verb_pickup()
+		if(user)
+			user.put_in_hands(stored_card)
+		else
+			stored_card.forceMove(get_turf(src))
 		stored_card = null
 		ejected++
 
 	if(stored_card2 && (!slot || slot == 2))
-		stored_card2.forceMove(get_turf(src))
-		stored_card2.verb_pickup()
+		if(user)
+			user.put_in_hands(stored_card2)
+		else
+			stored_card2.forceMove(get_turf(src))
 		stored_card2 = null
 		ejected++
 
@@ -86,7 +92,7 @@
 				var/datum/computer_file/program/P = I
 				P.event_idremoved(1, slot)
 
-		user << "<span class='notice'>You remove the card[ejected>1 ? "s" : ""] from \the [src].</span>"
+		to_chat(user, "<span class='notice'>You remove the card[ejected>1 ? "s" : ""] from \the [src].</span>")
 		return TRUE
 	return FALSE
 
@@ -94,11 +100,11 @@
 	if(..())
 		return
 	if(istype(I, /obj/item/weapon/screwdriver))
-		user << "<span class='notice'>You press down on the manual eject button with \the [I].</span>"
+		to_chat(user, "<span class='notice'>You press down on the manual eject button with \the [I].</span>")
 		try_eject(0,user)
 		return
 
 /obj/item/weapon/computer_hardware/card_slot/examine(mob/user)
 	..()
 	if(stored_card || stored_card2)
-		user << "There appears to be something loaded in the card slots."
\ No newline at end of file
+		to_chat(user, "There appears to be something loaded in the card slots.")
