diff a/code/modules/clothing/clothing.dm b/code/modules/clothing/clothing.dm	(rejected hunks)
@@ -5,12 +5,14 @@
 	max_integrity = 200
 	integrity_failure = 80
 	var/damaged_clothes = 0 //similar to machine's BROKEN stat and structure's broken var
-	var/flash_protect = 0		//Malk: What level of bright light protection item has. 1 = Flashers, Flashes, & Flashbangs | 2 = Welding | -1 = OH GOD WELDING BURNT OUT MY RETINAS
-	var/tint = 0				//Malk: Sets the item's level of visual impairment tint, normally set to the same as flash_protect
-	var/up = 0					//	   but seperated to allow items to protect but not impair vision, like space helmets
-	var/visor_flags = 0			// flags that are added/removed when an item is adjusted up/down
-	var/visor_flags_inv = 0		// same as visor_flags, but for flags_inv
-	var/visor_flags_cover = 0	// same as above, but for flags_cover
+	var/flash_protect = 0		//What level of bright light protection item has. 1 = Flashers, Flashes, & Flashbangs | 2 = Welding | -1 = OH GOD WELDING BURNT OUT MY RETINAS
+	var/tint = 0				//Sets the item's level of visual impairment tint, normally set to the same as flash_protect
+	var/up = 0					//but seperated to allow items to protect but not impair vision, like space helmets
+	var/visor_flags = 0			//flags that are added/removed when an item is adjusted up/down
+	var/visor_flags_inv = 0		//same as visor_flags, but for flags_inv
+	var/visor_flags_cover = 0	//same as above, but for flags_cover
+//what to toggle when toggled with weldingvisortoggle()
+	var/visor_vars_to_toggle = VISOR_FLASHPROTECT | VISOR_TINT | VISOR_VISIONFLAGS | VISOR_DARKNESSVIEW | VISOR_INVISVIEW
 	lefthand_file = 'icons/mob/inhands/clothing_lefthand.dmi'
 	righthand_file = 'icons/mob/inhands/clothing_righthand.dmi'
 	var/alt_desc = null
@@ -30,6 +32,13 @@
 
 	var/obj/item/weapon/storage/internal/pocket/pockets = null
 
+	//These allow head/mask items to dynamically alter the user's hair
+	// and facial hair, checking hair_extensions.dmi and facialhair_extensions.dmi
+	// for a state matching hair_state+dynamic_hair_suffix
+	// THESE OVERRIDE THE HIDEHAIR FLAGS
+	var/dynamic_hair_suffix = ""//head > mask for head hair
+	var/dynamic_fhair_suffix = ""//mask > head for facial hair
+
 /obj/item/clothing/New()
 	..()
 	if(ispath(pockets))
@@ -44,14 +53,12 @@
 	if(istype(usr.loc,/obj/mecha)) // stops inventory actions in a mech
 		return
 
-	if(!M.restrained() && !M.stat && loc == M && istype(over_object, /obj/screen/inventory/hand))
+	if(!M.incapacitated() && loc == M && istype(over_object, /obj/screen/inventory/hand))
 		var/obj/screen/inventory/hand/H = over_object
-		if(!M.unEquip(src))
-			return
-		M.put_in_hand(src, H.held_index)
-		add_fingerprint(usr)
+		if(M.putItemFromInventoryInHandIfPossible(src, H.held_index))
+			add_fingerprint(usr)
 
-/obj/item/clothing/throw_at(atom/target, range, speed, mob/thrower, spin=1, diagonals_first = 0)
+/obj/item/clothing/throw_at(atom/target, range, speed, mob/thrower, spin=1, diagonals_first = 0, datum/callback/callback)
 	if(pockets)
 		pockets.close_all()
 	return ..()
@@ -76,12 +83,13 @@
 		C.use(1)
 		update_clothes_damaged_state(FALSE)
 		obj_integrity = max_integrity
-		user << "<span class='notice'>You fix the damages on [src] with [C].</span>"
+		to_chat(user, "<span class='notice'>You fix the damages on [src] with [C].</span>")
 		return 1
 	if(pockets)
-		return pockets.attackby(W, user, params)
-	else
-		return ..()
+		var/i = pockets.attackby(W, user, params)
+		if(i)
+			return i
+	return ..()
 
 /obj/item/clothing/AltClick(mob/user)
 	if(pockets && pockets.quickdraw && pockets.contents.len && !user.incapacitated())
@@ -91,7 +99,7 @@
 		pockets.remove_from_storage(I, get_turf(src))
 
 		if(!user.put_in_hands(I))
-			user << "<span class='notice'>You fumble for [I] and it falls on the floor.</span>"
+			to_chat(user, "<span class='notice'>You fumble for [I] and it falls on the floor.</span>")
 			return 1
 		user.visible_message("<span class='warning'>[user] draws [I] from [src]!</span>", "<span class='notice'>You draw [I] from [src].</span>")
 		return 1
@@ -132,7 +140,7 @@
 /obj/item/clothing/examine(mob/user)
 	..()
 	if(damaged_clothes)
-		user <<  "<span class='warning'>It looks damaged!</span>"
+		to_chat(user,  "<span class='warning'>It looks damaged!</span>")
 
 /obj/item/clothing/obj_break(damage_flag)
 	if(!damaged_clothes)
@@ -154,8 +162,7 @@ var/list/damaged_clothes_icons = list()
 		add_overlay(damaged_clothes_icon, 1)
 	else
 		damaged_clothes = 0
-		overlays -= damaged_clothes_icons[index]
-		priority_overlays -= damaged_clothes_icons[index]
+		cut_overlay(damaged_clothes_icons[index], TRUE)
 
 
 //Ears: currently only used for headsets and earmuffs
@@ -171,11 +178,14 @@ var/list/damaged_clothes_icons = list()
 	desc = "Protects your hearing from loud noises, and quiet ones as well."
 	icon_state = "earmuffs"
 	item_state = "earmuffs"
-	flags = EARBANGPROTECT
 	strip_delay = 15
 	put_on_delay = 25
 	resistance_flags = FLAMMABLE
 
+/obj/item/clothing/ears/earmuffs/Initialize(mapload)
+	..()
+	SET_SECONDARY_FLAG(src, BANG_PROTECT)
+
 //Glasses
 /obj/item/clothing/glasses
 	name = "glasses"
@@ -325,11 +335,11 @@ BLIND     // can't see anything
 		flags |= visor_flags
 		flags_inv |= visor_flags_inv
 		flags_cover |= visor_flags_cover
-		user << "<span class='notice'>You push \the [src] back into place.</span>"
+		to_chat(user, "<span class='notice'>You push \the [src] back into place.</span>")
 		slot_flags = initial(slot_flags)
 	else
 		icon_state += "_up"
-		user << "<span class='notice'>You push \the [src] out of the way.</span>"
+		to_chat(user, "<span class='notice'>You push \the [src] out of the way.</span>")
 		gas_transfer_coefficient = null
 		permeability_coefficient = null
 		flags &= ~visor_flags
@@ -359,6 +369,8 @@ BLIND     // can't see anything
 	slowdown = SHOES_SLOWDOWN
 	var/blood_state = BLOOD_STATE_NOT_BLOODY
 	var/list/bloody_shoes = list(BLOOD_STATE_HUMAN = 0,BLOOD_STATE_XENO = 0, BLOOD_STATE_OIL = 0, BLOOD_STATE_NOT_BLOODY = 0)
+	var/offset = 0
+	var/equipped_before_drop = FALSE
 
 /obj/item/clothing/shoes/worn_overlays(isinhands = FALSE)
 	. = list()
@@ -374,6 +386,24 @@ BLIND     // can't see anything
 		if(bloody)
 			. += image("icon"='icons/effects/blood.dmi', "icon_state"="shoeblood")
 
+/obj/item/clothing/shoes/equipped(mob/user, slot)
+	. = ..()
+	if(offset && slot_flags & slotdefine2slotbit(slot))
+		user.pixel_y += offset
+		worn_y_dimension -= (offset * 2)
+		user.update_inv_shoes()
+		equipped_before_drop = TRUE
+
+/obj/item/clothing/shoes/proc/restore_offsets(mob/user)
+	equipped_before_drop = FALSE
+	user.pixel_y -= offset
+	worn_y_dimension = world.icon_size
+
+/obj/item/clothing/shoes/dropped(mob/user)
+	if(offset && equipped_before_drop)
+		restore_offsets(user)
+	. = ..()
+
 /obj/item/clothing/shoes/update_clothes_damaged_state(damaging = TRUE)
 	..()
 	if(ismob(loc))
@@ -525,7 +555,7 @@ BLIND     // can't see anything
 			adjusted = DIGITIGRADE_STYLE
 		H.update_inv_w_uniform()
 
-	if(hastie)
+	if(hastie && slot != slot_hands)
 		hastie.on_uniform_equip(src, user)
 
 /obj/item/clothing/under/dropped(mob/user)
@@ -542,7 +572,7 @@ BLIND     // can't see anything
 		var/obj/item/clothing/tie/T = I
 		if(hastie)
 			if(user)
-				user << "<span class='warning'>[src] already has an accessory.</span>"
+				to_chat(user, "<span class='warning'>[src] already has an accessory.</span>")
 			return 0
 		else
 			if(user && !user.drop_item())
@@ -551,7 +581,7 @@ BLIND     // can't see anything
 				return
 
 			if(user && notifyAttach)
-				user << "<span class='notice'>You attach [I] to [src].</span>"
+				to_chat(user, "<span class='notice'>You attach [I] to [src].</span>")
 
 			if(ishuman(loc))
 				var/mob/living/carbon/human/H = loc
@@ -569,9 +599,9 @@ BLIND     // can't see anything
 		var/obj/item/clothing/tie/T = hastie
 		hastie.detach(src, user)
 		if(user.put_in_hands(T))
-			user << "<span class='notice'>You detach [T] from [src].</span>"
+			to_chat(user, "<span class='notice'>You detach [T] from [src].</span>")
 		else
-			user << "<span class='notice'>You detach [T] from [src] and it falls on the floor.</span>"
+			to_chat(user, "<span class='notice'>You detach [T] from [src] and it falls on the floor.</span>")
 
 		if(ishuman(loc))
 			var/mob/living/carbon/human/H = loc
@@ -580,21 +610,22 @@ BLIND     // can't see anything
 
 /obj/item/clothing/under/examine(mob/user)
 	..()
-	if(adjusted == ALT_STYLE)
-		user << "Alt-click on [src] to wear it normally."
-	else
-		user << "Alt-click on [src] to wear it casually."
+	if(can_adjust)
+		if(adjusted == ALT_STYLE)
+			to_chat(user, "Alt-click on [src] to wear it normally.")
+		else
+			to_chat(user, "Alt-click on [src] to wear it casually.")
 	switch(sensor_mode)
 		if(0)
-			user << "Its sensors appear to be disabled."
+			to_chat(user, "Its sensors appear to be disabled.")
 		if(1)
-			user << "Its binary life sensors appear to be enabled."
+			to_chat(user, "Its binary life sensors appear to be enabled.")
 		if(2)
-			user << "Its vital tracker appears to be enabled."
+			to_chat(user, "Its vital tracker appears to be enabled.")
 		if(3)
-			user << "Its vital tracker and tracking beacon appear to be enabled."
+			to_chat(user, "Its vital tracker and tracking beacon appear to be enabled.")
 	if(hastie)
-		user << "\A [hastie] is attached to it."
+		to_chat(user, "\A [hastie] is attached to it.")
 
 /proc/generate_female_clothing(index,t_color,icon,type)
 	var/icon/female_clothing_icon	= icon("icon"=icon, "icon_state"=t_color)
@@ -613,29 +644,29 @@ BLIND     // can't see anything
 	if (!can_use(M))
 		return
 	if(src.has_sensor >= 2)
-		usr << "The controls are locked."
+		to_chat(usr, "The controls are locked.")
 		return 0
 	if(src.has_sensor <= 0)
-		usr << "This suit does not have any sensors."
+		to_chat(usr, "This suit does not have any sensors.")
 		return 0
 
 	var/list/modes = list("Off", "Binary vitals", "Exact vitals", "Tracking beacon")
 	var/switchMode = input("Select a sensor mode:", "Suit Sensor Mode", modes[sensor_mode + 1]) in modes
 	if(get_dist(usr, src) > 1)
-		usr << "<span class='warning'>You have moved too far away!</span>"
+		to_chat(usr, "<span class='warning'>You have moved too far away!</span>")
 		return
 	sensor_mode = modes.Find(switchMode) - 1
 
 	if (src.loc == usr)
 		switch(sensor_mode)
 			if(0)
-				usr << "<span class='notice'>You disable your suit's remote sensing equipment.</span>"
+				to_chat(usr, "<span class='notice'>You disable your suit's remote sensing equipment.</span>")
 			if(1)
-				usr << "<span class='notice'>Your suit will now only report whether you are alive or dead.</span>"
+				to_chat(usr, "<span class='notice'>Your suit will now only report whether you are alive or dead.</span>")
 			if(2)
-				usr << "<span class='notice'>Your suit will now only report your exact vital lifesigns.</span>"
+				to_chat(usr, "<span class='notice'>Your suit will now only report your exact vital lifesigns.</span>")
 			if(3)
-				usr << "<span class='notice'>Your suit will now report your exact vital lifesigns as well as your coordinate position.</span>"
+				to_chat(usr, "<span class='notice'>Your suit will now report your exact vital lifesigns as well as your coordinate position.</span>")
 
 	if(ishuman(loc))
 		var/mob/living/carbon/human/H = loc
@@ -649,7 +680,7 @@ BLIND     // can't see anything
 		return 1
 
 	if(!user.canUseTopic(src, be_close=TRUE))
-		user << "<span class='warning'>You can't do that right now!</span>"
+		to_chat(user, "<span class='warning'>You can't do that right now!</span>")
 		return
 	else
 		if(hastie)
@@ -667,12 +698,12 @@ BLIND     // can't see anything
 	if(!can_use(usr))
 		return
 	if(!can_adjust)
-		usr << "<span class='warning'>You cannot wear this suit any differently!</span>"
+		to_chat(usr, "<span class='warning'>You cannot wear this suit any differently!</span>")
 		return
 	if(toggle_jumpsuit_adjust())
-		usr << "<span class='notice'>You adjust the suit to wear it more casually.</span>"
+		to_chat(usr, "<span class='notice'>You adjust the suit to wear it more casually.</span>")
 	else
-		usr << "<span class='notice'>You adjust the suit back to normal.</span>"
+		to_chat(usr, "<span class='notice'>You adjust the suit back to normal.</span>")
 	if(ishuman(usr))
 		var/mob/living/carbon/human/H = usr
 		H.update_inv_w_uniform()
@@ -699,7 +730,7 @@ BLIND     // can't see anything
 
 	visor_toggling()
 
-	user << "<span class='notice'>You adjust \the [src] [up ? "up" : "down"].</span>"
+	to_chat(user, "<span class='notice'>You adjust \the [src] [up ? "up" : "down"].</span>")
 
 	if(iscarbon(user))
 		var/mob/living/carbon/C = user
@@ -715,8 +746,10 @@ BLIND     // can't see anything
 	flags_inv ^= visor_flags_inv
 	flags_cover ^= initial(flags_cover)
 	icon_state = "[initial(icon_state)][up ? "up" : ""]"
-	flash_protect ^= initial(flash_protect)
-	tint ^= initial(tint)
+	if(visor_vars_to_toggle & VISOR_FLASHPROTECT)
+		flash_protect ^= initial(flash_protect)
+	if(visor_vars_to_toggle & VISOR_TINT)
+		tint ^= initial(tint)
 
 
 /obj/item/clothing/proc/can_use(mob/user)
