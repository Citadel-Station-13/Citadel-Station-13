diff a/code/modules/shuttle/computer.dm b/code/modules/shuttle/computer.dm	(rejected hunks)
@@ -2,6 +2,7 @@
 	name = "Shuttle Console"
 	icon_screen = "shuttle"
 	icon_keyboard = "tech_key"
+	light_color = LIGHT_COLOR_CYAN
 	req_access = list( )
 	circuit = /obj/item/weapon/circuitboard/computer/shuttle
 	var/shuttleId
@@ -50,29 +51,29 @@
 	usr.set_machine(src)
 	src.add_fingerprint(usr)
 	if(!allowed(usr))
-		usr << "<span class='danger'>Access denied.</span>"
+		to_chat(usr, "<span class='danger'>Access denied.</span>")
 		return
 
 	if(href_list["move"])
 		var/obj/docking_port/mobile/M = SSshuttle.getShuttle(shuttleId)
 		if(M.launch_status == ENDGAME_LAUNCHED)
-			usr << "<span class='warning'>You've already escaped. Never going back to that place again!</span>"
+			to_chat(usr, "<span class='warning'>You've already escaped. Never going back to that place again!</span>")
 			return
 		if(no_destination_swap)
 			if(M.mode != SHUTTLE_IDLE)
-				usr << "<span class='warning'>Shuttle already in transit.</span>"
+				to_chat(usr, "<span class='warning'>Shuttle already in transit.</span>")
 				return
 		switch(SSshuttle.moveShuttle(shuttleId, href_list["move"], 1))
 			if(0)
-				usr << "<span class='notice'>Shuttle received message and will be sent shortly.</span>"
+				say("Shuttle departing. Please stand away from the doors.")
 			if(1)
-				usr << "<span class='warning'>Invalid shuttle requested.</span>"
+				to_chat(usr, "<span class='warning'>Invalid shuttle requested.</span>")
 			else
-				usr << "<span class='notice'>Unable to comply.</span>"
+				to_chat(usr, "<span class='notice'>Unable to comply.</span>")
 
 /obj/machinery/computer/shuttle/emag_act(mob/user)
 	if(!emagged)
 		src.req_access = list()
 		emagged = 1
-		user << "<span class='notice'>You fried the consoles ID checking system.</span>"
+		to_chat(user, "<span class='notice'>You fried the consoles ID checking system.</span>")
 
